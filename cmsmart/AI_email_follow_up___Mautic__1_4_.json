{
  "name": "AI email follow up - Mautic (1,4)",
  "nodes": [
    {
      "parameters": {},
      "id": "4b44b3bd-c37f-4851-a0a8-93a80ad22c91",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        360,
        1160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "get",
        "ID": "d74b81f3-18c5-4cd7-9190-78e9cf183f56",
        "requestOptions": {}
      },
      "id": "7b7b62dc-2665-4171-8eba-2d25c8699281",
      "name": "Get Project",
      "type": "@cloodo/n8n-nodes-cloodo-project.CloodoProject",
      "typeVersion": 1,
      "position": [
        1020,
        880
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "resource": "engagement",
        "operation": "getmany",
        "additionalFields": {
          "project": "={{ $json.data.id }}"
        },
        "requestOptions": {}
      },
      "id": "0922288d-c94f-4f43-8d93-571fe97d5336",
      "name": "Get Many Ticket: Project",
      "type": "@cloodo/n8n-nodes-cloodo-crm.CloodoLeads",
      "typeVersion": 1,
      "position": [
        1280,
        880
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "214f2028-c8e1-4e77-831e-bf5474b06f2e",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "0fd4b963-60ef-4548-b6f1-0647d766fd89",
      "name": "Check ticket",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1560,
        880
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "ID": "={{ $('Check ticket').item.json.data[0].projects.id }}",
        "requestOptions": {}
      },
      "id": "c8b27867-229e-4da2-b29b-2ca0aeafbb4b",
      "name": "Get a Project",
      "type": "@cloodo/n8n-nodes-cloodo-project.CloodoProject",
      "typeVersion": 1,
      "position": [
        2160,
        860
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Get Ticket",
        "height": 306
      },
      "id": "753d14ce-9af1-474b-b434-15fa447314c2",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1220,
        760
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7def8b8a-b6eb-409d-8432-dac2e38176a5",
              "leftValue": "={{ $json.data.custom_fields_data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c4d1f432-cc44-4854-b52e-9d5c4147a30b",
      "name": "Check customer file data",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2460,
        860
      ]
    },
    {
      "parameters": {
        "content": "## Check customfiled data",
        "height": 292.3230381835708
      },
      "id": "a350acc0-0a07-45ff-b30e-2a12b27e640e",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2400,
        760
      ]
    },
    {
      "parameters": {
        "jsCode": "let obj = []; // Khởi tạo mảng rỗng để lưu trữ kết quả\n\nfor (const item of $input.all()) {\n  // Tìm các đối tượng trong custom_fields_data có label là 'Website'\n  const foundItem = item?.json?.data?.custom_fields_data.find(i => i?.label === 'Website' || '');\n  const nameClient = item?.json?.data?.client;\n  const projectName = item?.json?.data?.name;\n  \n  if (foundItem) {\n    // Nếu tìm thấy, gộp foundItem và nameClient vào một đối tượng\n    obj.push({\n      website: foundItem, \n      client: nameClient,\n      nameProject: projectName\n    });\n  }\n  console.log('found:', foundItem); // In ra mảng kết quả\n}\n\nreturn obj; // Trả về mảng các giá trị\n"
      },
      "id": "83b89e0c-9a6c-442e-a360-47af9c1d1104",
      "name": "Take URL",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2840,
        840
      ]
    },
    {
      "parameters": {
        "content": "## Take url\n",
        "height": 258.17473703722305
      },
      "id": "e2055848-4520-4d20-b8db-2776396b5b8b",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2780,
        740
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "id": "={{ $json.data[0].agent.id }}",
        "requestOptions": {}
      },
      "id": "66645732-3f69-4119-92d9-540822d310bf",
      "name": "Get Agent",
      "type": "@cloodo/n8n-nodes-cloodo-hrm.CloodoHRM",
      "typeVersion": 1,
      "position": [
        1880,
        860
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "resource": "chat",
        "chatModel": "gpt-4",
        "prompt": {
          "messages": [
            {
              "content": "=Base on the {{ $json.website.value }}, provide an overal review of current client project  \n\nAfter that refer about Cmsmart\n\nAbout Cmsmart profile: Cmsmart Ecommerce Keyword Summary:\n\nPlatform: Cmsmart Store, WooCommerce-based, ecommerce solution, open-source, free download, premium resources.\n\nKey Innovations: Decoupled architecture, headless approach, customizable front-end (React, Vue, Angular), omni-channel integration, API-first design, seamless third-party integrations (CRM, ERP, marketing automation).\n\nServices: Ecommerce platform development, customization, third-party integration, mobile commerce, digital marketing, SEO, ongoing support and maintenance.\n\nFeatures: Product management, inventory control, order processing, customer management, scalable, SEO optimized, responsive design, robust security.\n\nTarget Audience: Enterprise-level businesses, tech-savvy startups, SMEs, retail, fashion, electronics, healthcare.\n\nBenefits: Cost-effective, high customization, flexibility, scalability, community support, customer engagement tools, premium support, enhanced functionality beyond WooCommerce.\n\nPositioning: Advanced ecommerce technology, innovative solutions, comprehensive support, reliable, tailored ecommerce experiences. \n\nWrite content using card html ex: <a>, <strong>, <h3>, <ul>, <li>, ... \n\n"
            }
          ]
        },
        "simplifyOutput": "=true",
        "options": {
          "maxTokens": 600
        },
        "requestOptions": {}
      },
      "id": "d435cba5-2f0b-47f6-aff8-ae1a5bf2db4e",
      "name": "OpenAI1",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1.1,
      "position": [
        3140,
        840
      ],
      "credentials": {
        "openAiApi": {
          "id": "NuSZIBmfyaC1efAa",
          "name": "Cmsmart_API"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "let oldData = $input.all()[0]?.json?.message?.content;\n\n// Replace new lines with <br> tags\noldData = oldData.replace(/\\n\\n/g, '');\noldData = oldData.replace(/\\n/g, '');\n\n// Replace ** with <strong> tags for bold text\noldData = oldData.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\n\n// Replace ### with <h3> tags for subheadings\noldData = oldData.replace(/###\\s*(.*?)(<br>|$)/g, '<h3>$1</h3>');\n\nreturn { textHtml: oldData };\n\n"
      },
      "id": "af70e563-9d00-4709-ae60-411b52e470b0",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3360,
        840
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.cloodo.com/mautic.php",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {}
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "email",
              "value": "=onlinemind@gmail.com"
            },
            {
              "name": "uname",
              "value": "Ocean"
            },
            {
              "name": "subject",
              "value": "=Initial Client Engagement & Project Setup ({{ $('Take URL').item.json.nameProject }})"
            },
            {
              "name": "send_mail",
              "value": "cmsmart"
            },
            {
              "name": "email_id",
              "value": "102"
            },
            {
              "name": "content",
              "value": "=<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n</head>\n\n<body style=\"font-family: Arial, sans-serif; color: #333; line-height: 1.6; margin: 0;\">\n    <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"max-width: 600px; margin: 20px auto; background-color: #fff;\">\n        <!-- Content -->\n        <tr>\n            <td style=\"padding: 20px;\">\n<p>Link WorkFlow: <a href=\"https://workflow.cloodo.com/workflow/b2flalpzOhxsOACr\">Mautic Initial Client Engagement & Project Setup</a></p>\n                <p>Link Task: <a href=\"https://worksuite.cloodo.com/apps/work/tasks/76c2292b-9ea9-4037-8577-c69a35cf5fab\">Initial Client Engagement & Project Setup</a></p>\n                <p style=\"font-weight: bold;\">Dear {{ $('Take URL').item.json.client.user.name }},</p>\n                <h1 style=\"color: orangered;\">Welcome to our Community!</h1>\n                <p>{{ $json.textHtml }}</p>\n                <p style=\"font-weight: bold; color: blue;\">We understand that businesses have unique needs, which is where our promise of providing tailor-made solutions comes in. From retail and fashion to electronics and healthcare, our target audience is diverse and catered to with proficiency.<br><br>\n                    With our continuous support, maintenance services, digital marketing services, and integration with third-party tools, you can step into the eCommerce industry with confidence.<br><br>\n                    \n                    We're so thrilled about the journey ahead. And remember, our team is always here to assist you. </p>\n\n                <p style=\"font-weight: bold\">Agent Contact:<br> Email: <strong style=\"color: red;\">{{ $('Get Agent').item.json.data.email }}</strong><br>\n                    Phone: (+84) {{ $('Get Agent').item.json.data.mobile }}</p>\n                    \n                    \n                    <p style=\"font-weight: bold\">Warm regards,<br>\n                    <br>\n                    {{ $('Get Agent').item.json.data.name }}<br>\n                    <br>\n                    <strong style=\"color: orangered;\">Cmsmart Team</strong><br>\n\n                    Website Company: <a href=\"https://cmsmart.net/\">cmsmart.net</a></p>\n\n            </td>\n        </tr>\n        \n \n    </table>\n</body>\n\n</html>\n\n"
            }
          ]
        },
        "options": {}
      },
      "id": "6caaa5e4-2a7e-46ee-8080-ef0da92bc2cd",
      "name": "Mautic Initial Client Engagement & Project Setup",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3620,
        840
      ]
    },
    {
      "parameters": {
        "additionalFields": {},
        "requestOptions": {}
      },
      "id": "d945d2c0-c1a7-4d13-a070-29c8b338a318",
      "name": "Cloodo Project",
      "type": "@cloodo/n8n-nodes-cloodo-project.CloodoProject",
      "typeVersion": 1,
      "position": [
        940,
        280
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "data",
        "options": {}
      },
      "id": "a2cc1fa1-7d43-433d-abf8-f80e93f80bfc",
      "name": "Item Lists",
      "type": "n8n-nodes-base.itemLists",
      "typeVersion": 3,
      "position": [
        1300,
        240
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "ID": "={{ $json.data.project.id }}",
        "requestOptions": {}
      },
      "id": "2b05b352-7524-4f44-b2fb-c76081c81299",
      "name": "Get Project1",
      "type": "@cloodo/n8n-nodes-cloodo-project.CloodoProject",
      "typeVersion": 1,
      "position": [
        1320,
        1420
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "resource": "milestones",
        "operation": "get",
        "ID": "ea1f950a-90bb-4090-8372-753d9f9e43b9",
        "requestOptions": {}
      },
      "id": "cd2de263-471f-416f-a6df-cfb63257545d",
      "name": "Get Milestone",
      "type": "@cloodo/n8n-nodes-cloodo-project.CloodoProject",
      "typeVersion": 1,
      "position": [
        1000,
        1420
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "resource": "client",
        "ID": "={{ $json.data.client.user.id }}",
        "requestOptions": {}
      },
      "id": "336f6451-eaf3-4412-998e-4baf7e350705",
      "name": "Get Client",
      "type": "@cloodo/n8n-nodes-cloodo-crm.CloodoLeads",
      "typeVersion": 1,
      "position": [
        1620,
        1420
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "id": "={{ $json.data.added_by.id }}",
        "requestOptions": {}
      },
      "id": "1633f9dd-7455-4637-8614-bef65d31ff38",
      "name": "Get Agent1",
      "type": "@cloodo/n8n-nodes-cloodo-hrm.CloodoHRM",
      "typeVersion": 1,
      "position": [
        1900,
        1420
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "ID": "={{ $('Get Project1').item.json.data.id }}",
        "requestOptions": {}
      },
      "id": "07cac44d-aa1b-4d6d-8132-21f417f61707",
      "name": "Get a Project1",
      "type": "@cloodo/n8n-nodes-cloodo-project.CloodoProject",
      "typeVersion": 1,
      "position": [
        2140,
        1420
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7def8b8a-b6eb-409d-8432-dac2e38176a5",
              "leftValue": "={{ $json.data.custom_fields_data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6d6b9a3f-3a58-4e16-916d-213f14a37220",
      "name": "Check customer file data1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2440,
        1420
      ]
    },
    {
      "parameters": {
        "content": "## Check customfiled data",
        "height": 292.3230381835708
      },
      "id": "97cfc7bf-f73c-4767-8664-35c0878e0367",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2380,
        1320
      ]
    },
    {
      "parameters": {
        "jsCode": "let obj = []; // Khởi tạo mảng rỗng để lưu trữ kết quả\n\nfor (const item of $input.all()) {\n  // Tìm các đối tượng trong custom_fields_data có label là 'Website'\n  const foundItem = item?.json?.data?.custom_fields_data.find(i => i?.label === 'Website' || '');\n  const nameClient = item?.json?.data?.client;\n  const projectName = item?.json?.data?.name;\n  \n  if (foundItem) {\n    // Nếu tìm thấy, gộp foundItem và nameClient vào một đối tượng\n    obj.push({\n      website: foundItem, \n      client: nameClient,\n      nameProject: projectName\n    });\n  }\n  console.log('found:', foundItem); // In ra mảng kết quả\n}\n\nreturn obj; // Trả về mảng các giá trị\n"
      },
      "id": "147f6f8d-69cf-4ae1-bccb-cf3d9d801d35",
      "name": "Take URL1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2820,
        1400
      ]
    },
    {
      "parameters": {
        "content": "## Take url\n",
        "height": 258.17473703722305
      },
      "id": "bbb01ce3-7149-48be-b501-d58b94f1df54",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2760,
        1300
      ]
    },
    {
      "parameters": {
        "resource": "chat",
        "chatModel": "gpt-4",
        "prompt": {
          "messages": [
            {
              "content": "=Write content using card html ex: <a>, <strong>, <h3>, <ul>, <li>, ... \n\nCreate an email for the client announcing the completion of a milestone in their project by Cmsmart team and will need client feedback within 5 days before closing. Include the client’s name, the milestone name, and express eagerness to move forward to the next phase.\n\n\n\nThe Client Project is: {{ $json.nameProject }}\n\nClient name: {{ $json.client.user.name }}\n\n\n\nBase on the Project Links: {{ $json.website.value }}, provide an overal review of current client project when stating the email content\n\nAfter that refer about Cmsmart\n\n\n\nAbout Cmsmart profile: Cmsmart Ecommerce Keyword Summary:\n\n\n\nPlatform: Cmsmart Store, WooCommerce-based, ecommerce solution, open-source, free download, premium resources.\n\nKey Innovations: Decoupled architecture, headless approach, customizable front-end (React, Vue, Angular), omni-channel integration, API-first design, seamless third-party integrations (CRM, ERP, marketing automation).\n\nServices: Ecommerce platform development, customization, third-party integration, mobile commerce, digital marketing, SEO, ongoing support and maintenance.\n\nFeatures: Product management, inventory control, order processing, customer management, scalable, SEO optimized, responsive design, robust security.\n\nTarget Audience: Enterprise-level businesses, tech-savvy startups, SMEs, retail, fashion, electronics, healthcare.\n\nBenefits: Cost-effective, high customization, flexibility, scalability, community support, customer engagement tools, premium support, enhanced functionality beyond WooCommerce.\n\nPositioning: Advanced ecommerce technology, innovative solutions, comprehensive support, reliable, tailored ecommerce experiences.\n\nUsing Agent contact for CTA\n\nAgent Email: {{ $('Get Agent1').item.json.data.email }}\n\nContact: (+84) {{ $('Get Agent1').item.json.data.mobile }}\n\nLinks: https://cmsmart.net/"
            }
          ]
        },
        "simplifyOutput": "=true",
        "options": {
          "maxTokens": 600
        },
        "requestOptions": {}
      },
      "id": "b3393007-bf00-4166-b5df-72e29406a010",
      "name": "OpenAI",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1.1,
      "position": [
        3140,
        1400
      ],
      "credentials": {
        "openAiApi": {
          "id": "NuSZIBmfyaC1efAa",
          "name": "Cmsmart_API"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "let oldData = $input.all()[0]?.json?.message?.content;\n\n// Replace new lines with <br> tags\noldData = oldData.replace(/\\n\\n/g, '');\noldData = oldData.replace(/\\n/g, '');\n\n// Replace ** with <strong> tags for bold text\noldData = oldData.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\n\n// Replace ### with <h3> tags for subheadings\noldData = oldData.replace(/###\\s*(.*?)(<br>|$)/g, '<h3>$1</h3>');\n\nreturn { textHtml: oldData };\n\n"
      },
      "id": "93b1d7fd-0832-4a93-9164-c45b3f29445d",
      "name": "Code1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3380,
        1400
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.cloodo.com/mautic.php",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {}
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "email",
              "value": "=onlinemind@gmail.com"
            },
            {
              "name": "uname",
              "value": "Ocean"
            },
            {
              "name": "subject",
              "value": "=Milestone Completed Notification (Your Project: {{ $('Take URL1').item.json.nameProject }})"
            },
            {
              "name": "send_mail",
              "value": "cmsmart"
            },
            {
              "name": "email_id",
              "value": "102"
            },
            {
              "name": "content",
              "value": "=<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n</head>\n\n<body style=\"font-family: Arial, sans-serif; color: #333; line-height: 1.6; margin: 0;\">\n    <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"max-width: 600px; margin: 20px auto; background-color: #fff;\">\n        <!-- Content -->\n        <tr>\n            <td style=\"padding: 20px;\">\n<p>Link WorkFlow: <a href=\"https://workflow.cloodo.com/workflow/b2flalpzOhxsOACr\">Mautic Milestone Completed Notification</a></p>\n                <p>Link Task: <a href=\"https://worksuite.cloodo.com/apps/work/tasks/6609dcc9-fd2e-4c88-83d6-7a60fcc9acd4\">Milestone Completed Notification</a></p>\n                <p>{{ $json.textHtml }}</p>\n            </td>\n        </tr>\n        \n \n    </table>\n</body>\n\n</html>\n\n"
            }
          ]
        },
        "options": {}
      },
      "id": "073e6393-497e-421e-8cbc-4ef1fd4557fa",
      "name": "Milestone Completed Notification",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3660,
        1400
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Get Project": {
      "main": [
        [
          {
            "node": "Get Many Ticket: Project",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Many Ticket: Project": {
      "main": [
        [
          {
            "node": "Check ticket",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check ticket": {
      "main": [
        [
          {
            "node": "Get Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a Project": {
      "main": [
        [
          {
            "node": "Check customer file data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check customer file data": {
      "main": [
        [
          {
            "node": "Take URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Take URL": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Agent": {
      "main": [
        [
          {
            "node": "Get a Project",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Mautic Initial Client Engagement & Project Setup",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Project": {
      "main": [
        [
          {
            "node": "Item Lists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Project1": {
      "main": [
        [
          {
            "node": "Get Client",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Milestone": {
      "main": [
        [
          {
            "node": "Get Project1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Client": {
      "main": [
        [
          {
            "node": "Get Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Agent1": {
      "main": [
        [
          {
            "node": "Get a Project1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a Project1": {
      "main": [
        [
          {
            "node": "Check customer file data1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check customer file data1": {
      "main": [
        [
          {
            "node": "Take URL1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Take URL1": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Milestone Completed Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Get Project",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Milestone",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "44a7c78a-5d49-47d9-91cf-4c774d4afb79",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "3909475c03ca6926b6e6edc6a6f06c1feb448ce7ac700d69b17002085d9011f8"
  },
  "id": "H7OQTvMHzbmJvrIv",
  "tags": []
}