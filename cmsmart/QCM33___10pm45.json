{
  "name": "QCM33 - 10pm45",
  "nodes": [
    {
      "parameters": {},
      "id": "d7f5194c-60fd-4e02-82c4-3a196640271e",
      "name": "When clicking \"Execute Workflow\"",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        2980,
        220
      ]
    },
    {
      "parameters": {
        "resource": "milestones",
        "additionalFields": {
          "search": "=KPI Thang ",
          "fromDate": "= {{ $today.set({ day: -151 }).format('dd-MM-yyyy') }} ",
          "toDate": "={{ $today.set({ day: -151 }).plus({ months: 1 }).minus({days: 1}).format('dd-MM-yyyy') }}"
        },
        "requestOptions": {}
      },
      "id": "8651b4e9-0b58-4f67-8837-b3740ac1ed8c",
      "name": "Cloodo Project",
      "type": "@cloodo/n8n-nodes-cloodo-project.CloodoProject",
      "typeVersion": 1,
      "position": [
        3240,
        220
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "months",
              "triggerAtDayOfMonth": "={{ $today.set({ day: 1 }).plus({ months: 1 }).minus({days: 1}).format('dd') }}",
              "triggerAtHour": 22,
              "triggerAtMinute": 45
            },
            {
              "field": "months",
              "triggerAtDayOfMonth": "={{ $today.set({ day: 1 }).plus({ months: 1 }).minus({days: 1}).format('dd') }}",
              "triggerAtHour": 7
            }
          ]
        }
      },
      "id": "2f69aaac-7eda-4b29-9577-98f81e0e1fd8",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        2980,
        460
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "data",
        "options": {}
      },
      "id": "730de2af-1f2f-44cf-b5ae-48fd3b574bde",
      "name": "Item Lists",
      "type": "n8n-nodes-base.itemLists",
      "typeVersion": 3.1,
      "position": [
        3700,
        220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json['data.task'].heading }}",
              "operation": "contains",
              "value2": "Engagement"
            }
          ]
        }
      },
      "id": "1daa674b-9856-4dac-a77f-9a7e8e4de2e8",
      "name": "IF",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        4380,
        220
      ]
    },
    {
      "parameters": {
        "resource": "task",
        "operation": "get",
        "ID": "={{ $json['data.task'].id }}",
        "requestOptions": {}
      },
      "id": "e2b2c790-9d72-4953-b282-4867070eb43f",
      "name": "Get a task",
      "type": "@cloodo/n8n-nodes-cloodo-project.CloodoProject",
      "typeVersion": 1,
      "position": [
        4640,
        200
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "number": [
            {
              "name": "KPI Target",
              "value": "={{ $json.targetValue }}"
            },
            {
              "name": "KPI Bonus-Fined",
              "value": "={{ $json.bonusValue }} "
            },
            {
              "name": "KPI Actual",
              "value": "={{ $json.actualValue }}"
            }
          ],
          "string": [
            {
              "name": "=Name assigned_to",
              "value": "={{ $('Get a task').item.json.data.assigned_to[0].name }}"
            }
          ]
        },
        "options": {}
      },
      "id": "cab64cfb-6e70-40e1-a6ed-48c19bedc438",
      "name": "Input data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        5060,
        200
      ]
    },
    {
      "parameters": {
        "values": {
          "number": [
            {
              "name": "Phat",
              "value": "={{ ($json['KPI Target'] - $json['KPI Actual'] )* 5 + ($json['KPI Bonus-Fined']/60000)*10 }}"
            }
          ]
        },
        "options": {}
      },
      "id": "ae00efca-8636-4ca5-92e5-2f26142b2a27",
      "name": "Results",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        5520,
        200
      ]
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C05FYKF1SJU",
          "mode": "id"
        },
        "text": "=QCM33: {{ $json['Name assigned_to'] }} -{{ $json.Phat }} due to AM Not meeting KPI targets for creating new Engagement in the month from project source and with type Consountant request ",
        "otherOptions": {}
      },
      "id": "212fd4cc-e5fe-4f88-8ff1-3c8dd2dda8a1",
      "name": "Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        6000,
        240
      ],
      "credentials": {
        "slackApi": {
          "id": "9edT91TZDnZRRppY",
          "name": "DEV"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $json['ID assigned_to'] }}",
        "points": "={{ $json.Phat }}",
        "note": "=QCM33: {{ $json['Name assigned_to'] }} -{{ $json.Phat }} due to AM Not meeting KPI targets for creating new Engagement in the month from project source and with type Consountant request "
      },
      "id": "cb2a0912-6984-49f6-bd0c-fb8e20f254d1",
      "name": "Cloodo Point",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        5740,
        200
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "=// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  for (const item of $input.all()) {\n  for(let i=0;i<5;i++) {\n    if(item.json.data.custom_fields_data[i]?.label == 'KPI Target')\n    {   item.json.targetValue = item.json.data.custom_fields_data[i].value}\n  \n\n   if(item.json.data.custom_fields_data[i]?.label == 'KPI Weight')\n    {  \n     let weight= Number(item.json.data.custom_fields_data[i].value) + 1\n      item.json.weightValue = weight}\n    if(item.json.data.custom_fields_data[i]?.label == 'KPI Actual')\n    {   item.json.actualValue = item.json.data.custom_fields_data[i].value}\n    if(item.json.data.custom_fields_data[i]?.label == 'KPI Bonus-Fined')\n    {   item.json.bonusValue = item.json.data.custom_fields_data[i].value}\n  }\n  }\n \n  \n}\n\nreturn $input.all(); "
      },
      "id": "6d4832ad-0023-40ce-8182-6aaec20e8b03",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4840,
        200
      ]
    },
    {
      "parameters": {
        "resource": "milestones",
        "operation": "get",
        "ID": "={{ $json.id }}",
        "requestOptions": {}
      },
      "id": "b8bf9f26-ee6a-4278-b647-d518bfd54082",
      "name": "Cloodo Project1",
      "type": "@cloodo/n8n-nodes-cloodo-project.CloodoProject",
      "typeVersion": 1,
      "position": [
        3920,
        220
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "data.task",
        "include": "selectedOtherFields",
        "fieldsToInclude": "data.task[0], data.task[1], data.task[2], data.task[3], data.task[4], data.task[5],data.task[6], data.task[7], data.task[8], data.task[9], data.task[10], data.task[11,]data.task[12], data.task[13], data.task[14], data.task[15], data.task[16], data.task[17],data.task[18], data.task[19], data.task[20], data.task[21], data.task[22], data.task[23,],data.task[24], data.task[25]",
        "options": {}
      },
      "id": "f84a956b-957d-4075-b678-6807081abb88",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        4140,
        220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "14840ac4-3e5e-4dc3-aeaa-112447cb6b2e",
              "leftValue": "={{ $json.data[0].status }}",
              "rightValue": "complete",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e5f83bce-8e1d-4414-aa13-66a214583d68",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3460,
        220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json['data.task'].heading }}",
              "operation": "contains",
              "value2": "upsell"
            }
          ]
        }
      },
      "id": "190d2b8a-9a70-4e6d-9300-479128d79f46",
      "name": "IF1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        4380,
        400
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "number": [
            {
              "name": "KPI Target",
              "value": "={{ $json.targetValue }}"
            },
            {
              "name": "KPI Bonus-Fined",
              "value": "={{ $json.bonusValue }} "
            },
            {
              "name": "KPI Actual",
              "value": "={{ $json.actualValue }}"
            }
          ],
          "string": [
            {
              "name": "=Name assigned_to",
              "value": "={{ $('Get a task1').item.json.data.assigned_to[0].name }}"
            }
          ]
        },
        "options": {}
      },
      "id": "1aea61a8-c529-4192-a4a5-587a9517ebaf",
      "name": "Input data1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        5060,
        420
      ]
    },
    {
      "parameters": {
        "values": {
          "number": [
            {
              "name": "Phat",
              "value": "={{ ($json['KPI Target'] - $json['KPI Actual'] )* 5 + ($json['KPI Bonus-Fined']/60000)*10 }}"
            }
          ]
        },
        "options": {}
      },
      "id": "9b9e66bc-eb01-4050-8955-0b6ceafbc7a5",
      "name": "Results1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        5480,
        400
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $json['ID assigned_to'] }}",
        "points": "={{ $json.Phat }}",
        "note": "=QCM33: {{ $json['Name assigned_to'] }} -{{ $json.Phat }} due to AM Not meeting KPI targets for creating new Engagement in the month from project source and with type Consountant request "
      },
      "id": "4f4ae943-9ade-45b3-87d7-a3ca2b96955d",
      "name": "Cloodo Point1",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        5680,
        420
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "=// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  for (const item of $input.all()) {\n  for(let i=0;i<5;i++) {\n    if(item.json.data.custom_fields_data[i]?.label == 'KPI Target')\n    {   item.json.targetValue = item.json.data.custom_fields_data[i].value}\n  \n\n   if(item.json.data.custom_fields_data[i]?.label == 'KPI Weight')\n    {  \n     let weight= Number(item.json.data.custom_fields_data[i].value) + 1\n      item.json.weightValue = weight}\n    if(item.json.data.custom_fields_data[i]?.label == 'KPI Actual')\n    {   item.json.actualValue = item.json.data.custom_fields_data[i].value}\n    if(item.json.data.custom_fields_data[i]?.label == 'KPI Bonus-Fined')\n    {   item.json.bonusValue = item.json.data.custom_fields_data[i].value}\n  }\n  }\n \n  \n}\n\nreturn $input.all(); "
      },
      "id": "90e269ed-49e2-4d67-a548-5893faf4f742",
      "name": "Code1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4840,
        420
      ]
    },
    {
      "parameters": {
        "resource": "task",
        "operation": "get",
        "ID": "={{ $json['data.task'].id }}",
        "requestOptions": {}
      },
      "id": "2a885a04-ca92-48bb-90ee-7e1619069acb",
      "name": "Get a task1",
      "type": "@cloodo/n8n-nodes-cloodo-project.CloodoProject",
      "typeVersion": 1,
      "position": [
        4640,
        420
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "f433f890-1f5b-4cc4-9d49-331a6f93f2b0",
              "leftValue": "={{ parseInt($json['KPI Target']) }}",
              "rightValue": "={{ parseInt($json['KPI Actual']) }}",
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3a448dd6-e9bc-405e-ba9c-4c9eff7f56a2",
      "name": "If1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        5280,
        200
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "f433f890-1f5b-4cc4-9d49-331a6f93f2b0",
              "leftValue": "={{ parseInt($json['KPI Target']) }}",
              "rightValue": "={{ parseInt($json['KPI Actual']) }}",
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a957f4bd-6194-41ac-8a5b-a156ebdfb5ad",
      "name": "If2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        5220,
        420
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "When clicking \"Execute Workflow\"": {
      "main": [
        [
          {
            "node": "Cloodo Project",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Project": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Item Lists": {
      "main": [
        [
          {
            "node": "Cloodo Project1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF": {
      "main": [
        [
          {
            "node": "Get a task",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a task": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Input data": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Results": {
      "main": [
        [
          {
            "node": "Cloodo Point",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point": {
      "main": [
        [
          {
            "node": "Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Cloodo Project",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Input data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Project1": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "IF",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Item Lists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF1": {
      "main": [
        [
          {
            "node": "Get a task1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Input data1": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Results1": {
      "main": [
        [
          {
            "node": "Cloodo Point1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Input data1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a task1": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Results1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "2d11ad21-45f5-45f7-8db3-e2e6bf2d6416",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "3909475c03ca6926b6e6edc6a6f06c1feb448ce7ac700d69b17002085d9011f8"
  },
  "id": "5Ylzqxaw9vztSey1",
  "tags": []
}