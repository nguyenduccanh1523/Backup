{
  "name": "AI email follow up - Mautic (1,4,2)",
  "nodes": [
    {
      "parameters": {},
      "id": "4b44b3bd-c37f-4851-a0a8-93a80ad22c91",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        560,
        2160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "get",
        "ID": "d74b81f3-18c5-4cd7-9190-78e9cf183f56",
        "requestOptions": {}
      },
      "id": "7b7b62dc-2665-4171-8eba-2d25c8699281",
      "name": "Get Project",
      "type": "@cloodo/n8n-nodes-cloodo-project.CloodoProject",
      "typeVersion": 1,
      "position": [
        1020,
        880
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "resource": "engagement",
        "operation": "getmany",
        "additionalFields": {
          "project": "={{ $json.data.id }}"
        },
        "requestOptions": {}
      },
      "id": "0922288d-c94f-4f43-8d93-571fe97d5336",
      "name": "Get Many Ticket: Project",
      "type": "@cloodo/n8n-nodes-cloodo-crm.CloodoLeads",
      "typeVersion": 1,
      "position": [
        1280,
        880
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "214f2028-c8e1-4e77-831e-bf5474b06f2e",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "0fd4b963-60ef-4548-b6f1-0647d766fd89",
      "name": "Check ticket",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1560,
        880
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "ID": "={{ $('Check ticket').item.json.data[0].projects.id }}",
        "requestOptions": {}
      },
      "id": "c8b27867-229e-4da2-b29b-2ca0aeafbb4b",
      "name": "Get a Project",
      "type": "@cloodo/n8n-nodes-cloodo-project.CloodoProject",
      "typeVersion": 1,
      "position": [
        2160,
        860
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Get Ticket",
        "height": 306
      },
      "id": "753d14ce-9af1-474b-b434-15fa447314c2",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1220,
        760
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7def8b8a-b6eb-409d-8432-dac2e38176a5",
              "leftValue": "={{ $json.data.custom_fields_data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c4d1f432-cc44-4854-b52e-9d5c4147a30b",
      "name": "Check customer file data",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2460,
        860
      ]
    },
    {
      "parameters": {
        "content": "## Check customfiled data",
        "height": 292.3230381835708
      },
      "id": "a350acc0-0a07-45ff-b30e-2a12b27e640e",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2400,
        760
      ]
    },
    {
      "parameters": {
        "jsCode": "let obj = []; // Khởi tạo mảng rỗng để lưu trữ kết quả\n\nfor (const item of $input.all()) {\n  // Tìm các đối tượng trong custom_fields_data có label là 'Website'\n  const foundItem = item?.json?.data?.custom_fields_data.find(i => i?.label === 'Website' || '');\n  const nameClient = item?.json?.data?.client;\n  const projectName = item?.json?.data?.name;\n  \n  if (foundItem) {\n    // Nếu tìm thấy, gộp foundItem và nameClient vào một đối tượng\n    obj.push({\n      website: foundItem, \n      client: nameClient,\n      nameProject: projectName\n    });\n  }\n  console.log('found:', foundItem); // In ra mảng kết quả\n}\n\nreturn obj; // Trả về mảng các giá trị\n"
      },
      "id": "83b89e0c-9a6c-442e-a360-47af9c1d1104",
      "name": "Take URL",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2840,
        840
      ]
    },
    {
      "parameters": {
        "content": "## Take url\n",
        "height": 258.17473703722305
      },
      "id": "e2055848-4520-4d20-b8db-2776396b5b8b",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2780,
        740
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "id": "={{ $json.data[0].agent.id }}",
        "requestOptions": {}
      },
      "id": "66645732-3f69-4119-92d9-540822d310bf",
      "name": "Get Agent",
      "type": "@cloodo/n8n-nodes-cloodo-hrm.CloodoHRM",
      "typeVersion": 1,
      "position": [
        1880,
        860
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "resource": "chat",
        "chatModel": "gpt-4",
        "prompt": {
          "messages": [
            {
              "content": "=Base on the {{ $json.website.value }}, provide an overal review of current client project  \n\nAfter that refer about Cmsmart\n\nAbout Cmsmart profile: Cmsmart Ecommerce Keyword Summary:\n\nPlatform: Cmsmart Store, WooCommerce-based, ecommerce solution, open-source, free download, premium resources.\n\nKey Innovations: Decoupled architecture, headless approach, customizable front-end (React, Vue, Angular), omni-channel integration, API-first design, seamless third-party integrations (CRM, ERP, marketing automation).\n\nServices: Ecommerce platform development, customization, third-party integration, mobile commerce, digital marketing, SEO, ongoing support and maintenance.\n\nFeatures: Product management, inventory control, order processing, customer management, scalable, SEO optimized, responsive design, robust security.\n\nTarget Audience: Enterprise-level businesses, tech-savvy startups, SMEs, retail, fashion, electronics, healthcare.\n\nBenefits: Cost-effective, high customization, flexibility, scalability, community support, customer engagement tools, premium support, enhanced functionality beyond WooCommerce.\n\nPositioning: Advanced ecommerce technology, innovative solutions, comprehensive support, reliable, tailored ecommerce experiences. \n\nWrite content using card html ex: <a>, <strong>, <h3>, <ul>, <li>, ... \n\n"
            }
          ]
        },
        "simplifyOutput": "=true",
        "options": {
          "maxTokens": 600
        },
        "requestOptions": {}
      },
      "id": "d435cba5-2f0b-47f6-aff8-ae1a5bf2db4e",
      "name": "OpenAI1",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1.1,
      "position": [
        3140,
        840
      ],
      "credentials": {
        "openAiApi": {
          "id": "NuSZIBmfyaC1efAa",
          "name": "Cmsmart_API"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "let oldData = $input.all()[0]?.json?.message?.content;\n\n// Replace new lines with <br> tags\noldData = oldData.replace(/\\n\\n/g, '');\noldData = oldData.replace(/\\n/g, '');\n\n// Replace ** with <strong> tags for bold text\noldData = oldData.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\n\n// Replace ### with <h3> tags for subheadings\noldData = oldData.replace(/###\\s*(.*?)(<br>|$)/g, '<h3>$1</h3>');\n\nreturn { textHtml: oldData };\n\n"
      },
      "id": "af70e563-9d00-4709-ae60-411b52e470b0",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3360,
        840
      ]
    },
    {
      "parameters": {
        "additionalFields": {},
        "requestOptions": {}
      },
      "id": "d945d2c0-c1a7-4d13-a070-29c8b338a318",
      "name": "Cloodo Project",
      "type": "@cloodo/n8n-nodes-cloodo-project.CloodoProject",
      "typeVersion": 1,
      "position": [
        940,
        280
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "data",
        "options": {}
      },
      "id": "a2cc1fa1-7d43-433d-abf8-f80e93f80bfc",
      "name": "Item Lists",
      "type": "n8n-nodes-base.itemLists",
      "typeVersion": 3,
      "position": [
        1300,
        240
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "ID": "={{ $json.data.project.id }}",
        "requestOptions": {}
      },
      "id": "2b05b352-7524-4f44-b2fb-c76081c81299",
      "name": "Get Project1",
      "type": "@cloodo/n8n-nodes-cloodo-project.CloodoProject",
      "typeVersion": 1,
      "position": [
        1320,
        1420
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "resource": "milestones",
        "operation": "get",
        "ID": "ea1f950a-90bb-4090-8372-753d9f9e43b9",
        "requestOptions": {}
      },
      "id": "cd2de263-471f-416f-a6df-cfb63257545d",
      "name": "Get Milestone",
      "type": "@cloodo/n8n-nodes-cloodo-project.CloodoProject",
      "typeVersion": 1,
      "position": [
        1000,
        1420
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "resource": "client",
        "ID": "={{ $json.data.client.user.id }}",
        "requestOptions": {}
      },
      "id": "336f6451-eaf3-4412-998e-4baf7e350705",
      "name": "Get Client",
      "type": "@cloodo/n8n-nodes-cloodo-crm.CloodoLeads",
      "typeVersion": 1,
      "position": [
        1620,
        1420
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "id": "={{ $json.data.added_by.id }}",
        "requestOptions": {}
      },
      "id": "1633f9dd-7455-4637-8614-bef65d31ff38",
      "name": "Get Agent1",
      "type": "@cloodo/n8n-nodes-cloodo-hrm.CloodoHRM",
      "typeVersion": 1,
      "position": [
        1900,
        1420
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "ID": "={{ $('Get Project1').item.json.data.id }}",
        "requestOptions": {}
      },
      "id": "07cac44d-aa1b-4d6d-8132-21f417f61707",
      "name": "Get a Project1",
      "type": "@cloodo/n8n-nodes-cloodo-project.CloodoProject",
      "typeVersion": 1,
      "position": [
        2140,
        1420
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7def8b8a-b6eb-409d-8432-dac2e38176a5",
              "leftValue": "={{ $json.data.custom_fields_data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6d6b9a3f-3a58-4e16-916d-213f14a37220",
      "name": "Check customer file data1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2440,
        1420
      ]
    },
    {
      "parameters": {
        "content": "## Check customfiled data",
        "height": 292.3230381835708
      },
      "id": "97cfc7bf-f73c-4767-8664-35c0878e0367",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2380,
        1320
      ]
    },
    {
      "parameters": {
        "jsCode": "let obj = []; // Khởi tạo mảng rỗng để lưu trữ kết quả\n\nfor (const item of $input.all()) {\n  // Tìm các đối tượng trong custom_fields_data có label là 'Website'\n  const foundItem = item?.json?.data?.custom_fields_data.find(i => i?.label === 'Website' || '');\n  const nameClient = item?.json?.data?.client;\n  const projectName = item?.json?.data?.name;\n  \n  if (foundItem) {\n    // Nếu tìm thấy, gộp foundItem và nameClient vào một đối tượng\n    obj.push({\n      website: foundItem, \n      client: nameClient,\n      nameProject: projectName\n    });\n  }\n  console.log('found:', foundItem); // In ra mảng kết quả\n}\n\nreturn obj; // Trả về mảng các giá trị\n"
      },
      "id": "147f6f8d-69cf-4ae1-bccb-cf3d9d801d35",
      "name": "Take URL1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2820,
        1400
      ]
    },
    {
      "parameters": {
        "content": "## Take url\n",
        "height": 258.17473703722305
      },
      "id": "bbb01ce3-7149-48be-b501-d58b94f1df54",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2760,
        1300
      ]
    },
    {
      "parameters": {
        "resource": "chat",
        "chatModel": "gpt-4",
        "prompt": {
          "messages": [
            {
              "content": "=Write content using card html ex: <a>, <strong>, <h3>, <ul>, <li>, ... \n\nCreate an email for the client announcing the completion of a milestone in their project by Cmsmart team and will need client feedback within 5 days before closing. Include the client’s name, the milestone name, and express eagerness to move forward to the next phase.\n\n\n\nThe Client Project is: {{ $json.nameProject }}\n\nClient name: {{ $json.client.user.name }}\n\n\n\nBase on the Project Links: {{ $json.website.value }}, provide an overal review of current client project when stating the email content\n\nAfter that refer about Cmsmart\n\n\n\nAbout Cmsmart profile: Cmsmart Ecommerce Keyword Summary:\n\n\n\nPlatform: Cmsmart Store, WooCommerce-based, ecommerce solution, open-source, free download, premium resources.\n\nKey Innovations: Decoupled architecture, headless approach, customizable front-end (React, Vue, Angular), omni-channel integration, API-first design, seamless third-party integrations (CRM, ERP, marketing automation).\n\nServices: Ecommerce platform development, customization, third-party integration, mobile commerce, digital marketing, SEO, ongoing support and maintenance.\n\nFeatures: Product management, inventory control, order processing, customer management, scalable, SEO optimized, responsive design, robust security.\n\nTarget Audience: Enterprise-level businesses, tech-savvy startups, SMEs, retail, fashion, electronics, healthcare.\n\nBenefits: Cost-effective, high customization, flexibility, scalability, community support, customer engagement tools, premium support, enhanced functionality beyond WooCommerce.\n\nPositioning: Advanced ecommerce technology, innovative solutions, comprehensive support, reliable, tailored ecommerce experiences.\n\nUsing Agent contact for CTA\n\nAgent Email: {{ $('Get Agent1').item.json.data.email }}\n\nContact: (+84) {{ $('Get Agent1').item.json.data.mobile }}\n\nLinks: https://cmsmart.net/"
            }
          ]
        },
        "simplifyOutput": "=true",
        "options": {
          "maxTokens": 600
        },
        "requestOptions": {}
      },
      "id": "b3393007-bf00-4166-b5df-72e29406a010",
      "name": "OpenAI",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1.1,
      "position": [
        3140,
        1400
      ],
      "credentials": {
        "openAiApi": {
          "id": "NuSZIBmfyaC1efAa",
          "name": "Cmsmart_API"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "let oldData = $input.all()[0]?.json?.message?.content;\n\n// Replace new lines with <br> tags\noldData = oldData.replace(/\\n\\n/g, '');\noldData = oldData.replace(/\\n/g, '');\n\n// Replace ** with <strong> tags for bold text\noldData = oldData.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\n\n// Replace ### with <h3> tags for subheadings\noldData = oldData.replace(/###\\s*(.*?)(<br>|$)/g, '<h3>$1</h3>');\n\nreturn { textHtml: oldData };\n\n"
      },
      "id": "93b1d7fd-0832-4a93-9164-c45b3f29445d",
      "name": "Code1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3380,
        1400
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.cloodo.com/mautic.php",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {}
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "email",
              "value": "=nguyenduccanh1523@gmail.com"
            },
            {
              "name": "uname",
              "value": "Canh"
            },
            {
              "name": "subject",
              "value": "=Milestone Completed Notification (Your Project: {{ $('Take URL1').item.json.nameProject }})"
            },
            {
              "name": "send_mail",
              "value": "cmsmart"
            },
            {
              "name": "email_id",
              "value": "103"
            },
            {
              "name": "content",
              "value": "=<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n</head>\n\n<body style=\"font-family: Arial, sans-serif; color: #333; line-height: 1.6; margin: 0;\">\n    <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\" background-color: #fff;\">\n        <!-- Content -->\n        <tr>\n            <td style=\"font-size: 14px;\">\n                <p>{{ $json.textHtml }}</p>\n<strong>Link Milestone: <a href=\"https://worksuite.cloodo.com/apps/work/milestones/detail/{{ $('Get Milestone').item.json.data.id }}\">{{ $('Get Milestone').item.json.data.title }}</a></strong>\n            </td>\n        </tr>\n        \n \n    </table>\n</body>\n\n</html>\n\n"
            }
          ]
        },
        "options": {}
      },
      "id": "073e6393-497e-421e-8cbc-4ef1fd4557fa",
      "name": "Milestone Completed Notification",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3660,
        1400
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.cloodo.com/mautic.php",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {}
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "email",
              "value": "=nguyenduccanh1523@gmail.com"
            },
            {
              "name": "uname",
              "value": "Canh"
            },
            {
              "name": "subject",
              "value": "=Initial Client Engagement & Project Setup ({{ $('Take URL').item.json.nameProject }})"
            },
            {
              "name": "send_mail",
              "value": "cmsmart"
            },
            {
              "name": "email_id",
              "value": "103"
            },
            {
              "name": "content",
              "value": "=<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n</head>\n\n<body style=\"font-family: Arial, sans-serif; line-height: 1.6; margin: 0;\">\n    <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\" background-color: #fff;\">\n        <!-- Content -->\n        <tr>\n            <td style=\"font-size: 14px;\">\n                <p>Dear {{ $('Take URL').item.json.client.user.name }},</p>\n                <p>{{ $json.textHtml }}</p>\n                <p>We understand that businesses have unique needs, which is where our promise of providing tailor-made solutions comes in. From retail and fashion to electronics and healthcare, our target audience is diverse and catered to with proficiency.<br><br>\n                    With our continuous support, maintenance services, digital marketing services, and integration with third-party tools, you can step into the eCommerce industry with confidence.<br><br>\n                    \n                    We're so thrilled about the journey ahead. And remember, our team is always here to assist you. </p>\n\n                <p>Agent Contact:<br> Email: <strong>{{ $('Get Agent').item.json.data.email }}</strong><br>\n                    Phone: (+84) {{ $('Get Agent').item.json.data.mobile }}</p>\n                    \n                    \n                    <p>Warm regards,<br>\n                    <br>\n                    {{ $('Get Agent').item.json.data.name }}<br>\n                    <br>\n                    <strong>Cmsmart Team</strong><br>\n<strong>Link project: <a href=\"https://worksuite.cloodo.com/apps/work/project/{{ $('Get a Project').item.json.data.id }}\">{{ $('Get a Project').item.json.data.name }}</a></strong>\n            </td>\n        </tr>\n        \n \n    </table>\n</body>\n\n</html>\n\n"
            }
          ]
        },
        "options": {}
      },
      "id": "91f175a0-6ab4-4ffc-bd9d-10e0ed01bf1d",
      "name": "Mautic Initial Client Engagement & Project Setup",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3620,
        840
      ]
    },
    {
      "parameters": {
        "resource": "engagement",
        "ID": "={{ $json.id }}",
        "requestOptions": {}
      },
      "id": "065ed9d7-bc68-45a5-876e-7a056544fb36",
      "name": "Get Ticket",
      "type": "@cloodo/n8n-nodes-cloodo-crm.CloodoLeads",
      "typeVersion": 1,
      "position": [
        1500,
        2140
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "ID": "={{ $json.data.projects.id }}",
        "requestOptions": {}
      },
      "id": "0e0be60a-3241-490e-a14f-e5d50d3105b7",
      "name": "Cloodo Project1",
      "type": "@cloodo/n8n-nodes-cloodo-project.CloodoProject",
      "typeVersion": 1,
      "position": [
        2240,
        2140
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8cf58057-2897-4673-aa87-842332cadeff",
              "leftValue": "={{ $json.data.status }}",
              "rightValue": "closed",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9ed92d24-3dc6-41cb-ae4c-7937f6d79c1a",
      "name": "Check Closed",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1720,
        2140
      ]
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "website"
            },
            {
              "fieldToAggregate": "client.user"
            }
          ]
        },
        "options": {}
      },
      "id": "ead08e8c-6239-425c-b819-990c94648c42",
      "name": "Aggregate4",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2380,
        1760
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "website, client.user",
        "options": {}
      },
      "id": "f778aac5-d86b-4667-b748-c3ae390b818b",
      "name": "Split Web, client, adminPro",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        2140,
        1760
      ]
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "website"
            },
            {
              "fieldToAggregate": "user"
            },
            {
              "fieldToAggregate": "data"
            }
          ]
        },
        "options": {}
      },
      "id": "73c1766b-df30-47ba-b8be-c42e33e4011e",
      "name": "Aggregate5",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2800,
        1760
      ]
    },
    {
      "parameters": {
        "jsCode": "let oldData = $input.all()[0]?.json?.message?.content;\n\n// Replace new lines with <br> tags\noldData = oldData.replace(/\\n\\n/g, '');\noldData = oldData.replace(/\\n/g, '');\n\n// Replace ** with <strong> tags for bold text\noldData = oldData.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\n\n// Replace ### with <h3> tags for subheadings\noldData = oldData.replace(/###\\s*(.*?)(<br>|$)/g, '<h3>$1</h3>');\n\nreturn { textHtml: oldData };\n\n"
      },
      "id": "3d4d17b3-11c9-426e-a116-c5a4bf669539",
      "name": "Standardize2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3700,
        1780
      ]
    },
    {
      "parameters": {
        "resource": "chat",
        "chatModel": "gpt-4",
        "prompt": {
          "messages": [
            {
              "content": "=Compose an email without a subject line using the <br> tag to separate lines, to notify the customer that their ticket has been received and is being analyzed. Include the customer's name, ticket ID, and assure them of a prompt response.\n\nWith the information below:\n{{ $json.value }}\n\nusing card html: <h3>, <br>, <strong>, <ul>, <li> , ...\n\n\n\n"
            }
          ]
        },
        "simplifyOutput": "=true",
        "options": {
          "maxTokens": 600
        },
        "requestOptions": {}
      },
      "id": "4448bc72-0f08-4fe2-9988-9d13bb61a43c",
      "name": "AI Post Milestone",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1.1,
      "position": [
        3120,
        2140
      ],
      "credentials": {
        "openAiApi": {
          "id": "NuSZIBmfyaC1efAa",
          "name": "Cmsmart_API"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "let dataReFormat = ''\nconst rawData = $input.all()[0]?.json\n\n\n\ndataReFormat =  `\\n Information of Client Ticket: \\n Ticket Number: ${rawData?.ticket?.number}; \\n Ticket Subject: ${rawData?.ticket?.subject}; \\n Ticket Message: ${rawData?.ticket?.message};\n\\n \\n Information of Project: \\n Website of Project: ${rawData?.website?.value};\n`\n\n\ndataReFormat = dataReFormat +  '\\n \\n Agent: \\n ' + 'Name: ' + rawData?.agent?.name + '\\n Email: ' + rawData?.agent?.email\n\n\nconsole.log('dataReFormat: ', dataReFormat)\n\nreturn { prepareText: dataReFormat };\n// return $input.all()"
      },
      "id": "26763645-75c0-4069-ac4b-7c2c94ed97c6",
      "name": "prepareText2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3480,
        1780
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "bf60afe0-9f95-4d48-b8c6-de848f215516",
              "name": "milestone.name",
              "value": "={{ $json.data[0].title }}",
              "type": "string"
            },
            {
              "id": "fc4ab56a-f099-4928-9a08-a9ef42b2b213",
              "name": "milestone.completeDate",
              "value": "={{ $json.data[0].close_date }}",
              "type": "string"
            },
            {
              "id": "12bc061e-c1ea-4385-b3f9-8e83752401c1",
              "name": "milestone.summary",
              "value": "={{ $json.data[0].summary }}",
              "type": "string"
            },
            {
              "id": "faaf9709-45ab-4f71-aa42-01390c6ee194",
              "name": "client.name",
              "value": "={{ $json.user[0][1] }}",
              "type": "string"
            },
            {
              "id": "3af7fb39-6c19-48ca-9dba-4c8fde5e184d",
              "name": "client.email",
              "value": "={{ $json.user[0][2] }}",
              "type": "string"
            },
            {
              "id": "60334b29-cb8f-437c-914d-bd69e272187d",
              "name": "project.adminName",
              "value": "={{ $json.adminProject[0][1] }}",
              "type": "string"
            },
            {
              "id": "4651dde7-a41c-4b23-8f17-7ea044db58db",
              "name": "project.adminEmail",
              "value": "={{ $json.adminProject[0][2] }}",
              "type": "string"
            },
            {
              "id": "861a36b1-01b5-443b-a474-6da936e2f860",
              "name": "project.name",
              "value": "={{ $json.data[0].project.name }}",
              "type": "string"
            },
            {
              "id": "57c8beb9-2b98-4be4-81d8-ec379518ca80",
              "name": "project.website",
              "value": "={{ $json.website[0][2] }}",
              "type": "string"
            },
            {
              "id": "726ca4e2-2da6-43c2-b59e-2b83a07144c5",
              "name": "milestone.id",
              "value": "={{ $json.data[0].id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "2e42c33f-da65-4f23-9af0-02c010fd6e9c",
      "name": "Take Value2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3000,
        1760
      ]
    },
    {
      "parameters": {
        "resource": "engagement",
        "operation": "getmany",
        "cursor": "1",
        "additionalFields": {},
        "requestOptions": {}
      },
      "id": "aaa44021-5443-4570-85e5-b09faeb73406",
      "name": "Cloodo CRM",
      "type": "@cloodo/n8n-nodes-cloodo-crm.CloodoLeads",
      "typeVersion": 1,
      "position": [
        840,
        2160
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "data",
        "options": {}
      },
      "id": "5ed1ce3a-e6de-4253-b36b-fccb978929c3",
      "name": "Item Lists1",
      "type": "n8n-nodes-base.itemLists",
      "typeVersion": 3,
      "position": [
        1040,
        2160
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "963b0237-e10b-49a0-856c-3d5d0f712a5e",
              "leftValue": "={{ $json.requester.id }}",
              "rightValue": "={{ $json.create_by.id }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5eb6f5e5-952b-40e9-aa34-939091b38794",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1280,
        2160
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "44d2c42a-06de-4716-9111-44b51a491d98",
              "leftValue": "={{ $json.data.projects }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "da8dbd0b-202a-438d-8f89-5b5336998371",
      "name": "Check project",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1960,
        2160
      ]
    },
    {
      "parameters": {},
      "id": "b603b446-f93b-4066-8a0e-3bcbb8920c52",
      "name": "Merge2",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        2580,
        1760
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f4f20d97-2415-4192-9686-75c9fc5c0ed3",
              "name": "client.name",
              "value": "={{ $json.data.client.user.name }}",
              "type": "string"
            },
            {
              "id": "be61eb6f-8a02-462a-82d6-b39f87305d2a",
              "name": "client.email",
              "value": "={{ $json.data.client.user.email }}",
              "type": "string"
            },
            {
              "id": "4e6fc086-9242-4e85-bb85-c1b604e30a82",
              "name": "ticket.number",
              "value": "={{ $('Check project').item.json.data.ticket_number }}",
              "type": "string"
            },
            {
              "id": "b31279df-4bcc-4117-8799-5eb2ef992b95",
              "name": "ticket.subject",
              "value": "={{ $('Check project').item.json.data.subject }}",
              "type": "string"
            },
            {
              "id": "95d12026-92b7-4eb8-a790-fab4b7160e04",
              "name": "ticket.message",
              "value": "={{ $('Check project').item.json.data.reply.message }}",
              "type": "string"
            },
            {
              "id": "11f9119e-bf49-4509-92bb-b271a9be4229",
              "name": "agent.name",
              "value": "={{ $('Check project').item.json.data.agent.user.name }}",
              "type": "string"
            },
            {
              "id": "b36baf4c-fda2-4072-bf75-c025ca07bfbb",
              "name": "agent.email",
              "value": "={{ $('Check project').item.json.data.agent.user.email }}",
              "type": "string"
            },
            {
              "id": "2a74e465-38f2-4a85-af10-eb3679be498e",
              "name": "ticket.id",
              "value": "={{ $('Check project').item.json.data.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "e28551c2-fff2-416f-af50-f523337eec17",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2520,
        2140
      ]
    },
    {
      "parameters": {
        "jsCode": "let formattedItems = []; // Khởi tạo mảng để chứa từng item đã định dạng\n\nfor (const item of $input.all()) {\n  // Định dạng dữ liệu lại từ từng item của $input.all()\n  const dataReFormat = `\n    Information of Client Ticket:\n    Client Name: ${item?.json?.client?.name || 'N/A'};\n    Ticket Number: ${item?.json?.ticket?.number || 'N/A'};\n    Ticket Subject: ${item?.json?.ticket?.subject || 'N/A'};\n    Ticket Message: ${item?.json?.ticket?.message || 'N/A'};\n\n    Agent:\n    Name: ${item?.json?.agent?.name || 'N/A'};\n    Email: ${item?.json?.agent?.email || 'N/A'};\n  `;\n\n   formattedItems.push({\n     value: dataReFormat\n   });\n}\n\nreturn formattedItems;\n"
      },
      "id": "daa0ff8e-f2aa-4695-a811-6307ff9a1240",
      "name": "prepareText",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2800,
        2140
      ]
    },
    {
      "parameters": {
        "jsCode": "let formattedItems = []; \n\nfor (const item of $input.all()) {\n  let oldData = item?.json?.message?.content || '';\n\n  // Replace new lines with <br> tags\n  oldData = oldData.replace(/\\n\\n/g, '');\n  oldData = oldData.replace(/\\n/g, '');\n\n  // Replace ** with <strong> tags for bold text\n  oldData = oldData.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\n\n  // Replace ### with <h3> tags for subheadings\n  oldData = oldData.replace(/###\\s*(.*?)(<br>|$)/g, '<h3>$1</h3>');\n\n  // Add the formatted content to the array\n  formattedItems.push({\n    contentMail: oldData\n  });\n}\n\nreturn formattedItems;"
      },
      "id": "10f8b48f-ccf5-4f48-8f8a-d338664738bd",
      "name": "Code2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3420,
        2140
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.cloodo.com/mautic.php",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {}
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "email",
              "value": "=nguyenduccanh1523@gmail.com"
            },
            {
              "name": "uname",
              "value": "Canh"
            },
            {
              "name": "subject",
              "value": "=Ticket {{ $('Edit Fields').item.json.ticket.number }} Received – Under Analysis"
            },
            {
              "name": "send_mail",
              "value": "cmsmart"
            },
            {
              "name": "email_id",
              "value": "103"
            },
            {
              "name": "content",
              "value": "=<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n</head>\n\n<body style=\"font-family: Arial, sans-serif; color: #333; line-height: 1.6; margin: 0;\">\n    <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"background-color: #fff;\">\n        <!-- Content -->\n        <tr>\n            <td style=\"font-size: 14px;\">\n                <p>{{ $json.contentMail }}</p>\n<strong>Link Ticket: <a href=\"https://worksuite.cloodo.com/apps/tickets/{{ $('Edit Fields').item.json.ticket.id }}\">{{ $('Edit Fields').item.json.ticket.subject }}</a></strong>\n            </td>\n        </tr>\n        \n \n    </table>\n</body>\n\n</html>\n\n"
            }
          ]
        },
        "options": {}
      },
      "id": "c0ee305b-4bf7-4d73-b7f7-8349ef6c7207",
      "name": "Client Ticket & Proposal Phase",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3720,
        2140
      ]
    },
    {
      "parameters": {
        "jsCode": "let obj = []; // Khởi tạo mảng rỗng để lưu trữ kết quả\n\nfor (const item of $input.all()) {\n  // Tìm các đối tượng trong custom_fields_data có label là 'Website'\n  const foundItem = item?.json?.data?.custom_fields_data.find(i => i?.label === 'Website' || '');\n  const nameClient = item?.json?.data?.client;\n  const projectName = item?.json?.data?.name;\n  \n  if (foundItem) {\n    // Nếu tìm thấy, gộp foundItem và nameClient vào một đối tượng\n    obj.push({\n      website: foundItem, \n      client: nameClient,\n      nameProject: projectName\n    });\n  }\n  console.log('found:', foundItem); // In ra mảng kết quả\n}\n\nreturn obj; // Trả về mảng các giá trị\n"
      },
      "id": "c4f763de-5ff8-4953-9d80-01d1071da4b1",
      "name": "Take URL2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2540,
        2560
      ]
    },
    {
      "parameters": {
        "content": "## Take url\n",
        "height": 258.17473703722305
      },
      "id": "341624c2-6b8d-4e30-adc0-16f176bbd113",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2460,
        2480
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Get Project": {
      "main": [
        [
          {
            "node": "Get Many Ticket: Project",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Many Ticket: Project": {
      "main": [
        [
          {
            "node": "Check ticket",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check ticket": {
      "main": [
        [
          {
            "node": "Get Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a Project": {
      "main": [
        [
          {
            "node": "Check customer file data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check customer file data": {
      "main": [
        [
          {
            "node": "Take URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Take URL": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Agent": {
      "main": [
        [
          {
            "node": "Get a Project",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Mautic Initial Client Engagement & Project Setup",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Project": {
      "main": [
        [
          {
            "node": "Item Lists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Project1": {
      "main": [
        [
          {
            "node": "Get Client",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Milestone": {
      "main": [
        [
          {
            "node": "Get Project1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Client": {
      "main": [
        [
          {
            "node": "Get Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Agent1": {
      "main": [
        [
          {
            "node": "Get a Project1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a Project1": {
      "main": [
        [
          {
            "node": "Check customer file data1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check customer file data1": {
      "main": [
        [
          {
            "node": "Take URL1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Take URL1": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Milestone Completed Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Cloodo CRM",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Ticket": {
      "main": [
        [
          {
            "node": "Check Closed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Closed": {
      "main": [
        [],
        [
          {
            "node": "Check project",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Web, client, adminPro": {
      "main": [
        [
          {
            "node": "Aggregate4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Project1": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Post Milestone": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo CRM": {
      "main": [
        [
          {
            "node": "Item Lists1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Item Lists1": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Get Ticket",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check project": {
      "main": [
        [
          {
            "node": "Cloodo Project1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "Aggregate5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate4": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate5": {
      "main": [
        [
          {
            "node": "Take Value2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "prepareText",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "prepareText": {
      "main": [
        [
          {
            "node": "AI Post Milestone",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Client Ticket & Proposal Phase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Take URL2": {
      "main": [
        []
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "528ad73b-052b-463a-b23e-7e529a55cd79",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "3909475c03ca6926b6e6edc6a6f06c1feb448ce7ac700d69b17002085d9011f8"
  },
  "id": "H7OQTvMHzbmJvrIv",
  "tags": []
}