{
  "name": "QCM88 AE Cloodo",
  "nodes": [
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/departments",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "limit",
              "value": "25"
            }
          ]
        },
        "options": {}
      },
      "id": "7e2e1268-ed21-400d-bc5c-fa734aa70921",
      "name": "Get All Department",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -7780,
        2420
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/departments",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "limit",
              "value": "25"
            }
          ]
        },
        "options": {}
      },
      "id": "5a20674d-973a-49a0-ab3c-af59f93e462c",
      "name": "Get All Department1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -7780,
        2620
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/departments",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "limit",
              "value": "25"
            }
          ]
        },
        "options": {}
      },
      "id": "b72d77a6-f4de-4e05-860a-a7ad5f71a44f",
      "name": "Get All Department2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -7800,
        2840
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "numberInputs": 3
      },
      "id": "78da244f-8f22-4fe8-9136-3ca67b6089b9",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -7280,
        2620
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "ac1b75a3-b2d6-4e11-a1c5-fc85b02f905d",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -7060,
        2620
      ]
    },
    {
      "parameters": {
        "jsCode": "const allDepartment = $input.all()[0]?.json?.data[2]\nconst member = allDepartment?.member\n  \n\nreturn{\n  name: allDepartment?.name,\n  member: member\n}\n"
      },
      "id": "41902565-2ddd-4c41-8946-f989f801994a",
      "name": "GetMember",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -7560,
        2420
      ]
    },
    {
      "parameters": {
        "jsCode": "const allDepartment = $input.all()[0]?.json?.data[2]\nconst member = allDepartment?.member\n                     \n\nreturn{\n  name: allDepartment?.name,\n  member: member\n}\n"
      },
      "id": "5a261863-7822-4e58-87b8-441ea052b727",
      "name": "GetMember1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -7560,
        2620
      ]
    },
    {
      "parameters": {
        "jsCode": "const allDepartment = $input.all()[0]?.json?.data[2]\nconst member = allDepartment?.member\n\nreturn{\n  name: allDepartment?.name,\n  member: member\n}\n"
      },
      "id": "767a059a-2277-40e4-ab95-779d5ef0eda3",
      "name": "GetMember2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -7560,
        2840
      ]
    },
    {
      "parameters": {
        "jsCode": "let listMembers = []\n\n// Lấy các thành viên của ba công ty\nconst MemberCms = $input.all()[0]?.json?.data[0]?.member;\nconst MemberPrintCart = $input.all()[0]?.json?.data[1]?.member;\nconst MemberCloodo = $input.all()[0]?.json?.data[2]?.member;\n\n// Thêm tên công ty vào các thành viên\nMemberCms.forEach(member => {\n  member.companyName = 'CmsMart';// Tên công ty cho MemberCms\n  listMembers.push(member)\n});\n\nMemberPrintCart.forEach(member => {\n  member.companyName = 'PrintCart';  // Tên công ty cho MemberPrintCart\n  listMembers.push(member)\n});\n\nMemberCloodo.forEach(member => {\n  member.companyName = 'Cloodo';  // Tên công ty cho MemberCloodo\n  listMembers.push(member)\n});\n\n// Đếm số lượng công ty cho mỗi người theo 'name'\nconst nameCountMap = {};\n\n// Duyệt qua danh sách các thành viên và đếm số lượng công ty theo tên\nlistMembers.forEach(member => {\n  const name = member.name;\n\n  // Nếu tên chưa có trong map, khởi tạo giá trị với 0\n  if (!nameCountMap[name]) {\n    nameCountMap[name] = new Set();  // Sử dụng Set để đảm bảo mỗi công ty chỉ được đếm 1 lần\n  }\n\n  // Thêm tên công ty vào Set để đếm duy nhất\n  nameCountMap[name].add(member.companyName);\n});\n\n// Thêm số lượng công ty vào từng thành viên\nlistMembers.forEach(member => {\n  const name = member.name;\n  member.countCompany = nameCountMap[name].size; // Số lượng công ty mà thành viên tham gia\n});\n\n// Trả về các thành viên đã được cập nhật\nreturn listMembers;"
      },
      "id": "1961fa85-901a-437f-9d2f-3ea7626339b7",
      "name": "CompanyName",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -6880,
        2620
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.countCompany }}",
                    "rightValue": 1,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "1"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ecaeec34-6fa8-41da-aeb6-827e62de92b3",
                    "leftValue": "={{ $json.countCompany }}",
                    "rightValue": 2,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "2"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8d73594f-9a0b-4b50-b347-ac7eb50f0f13",
                    "leftValue": "={{ $json.countCompany }}",
                    "rightValue": 3,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "3"
            }
          ]
        },
        "options": {}
      },
      "id": "f3229092-f53d-46f3-ac2c-409a557a6c16",
      "name": "Count Company",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -6640,
        2620
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6e41004a-24bd-4475-9837-4c1b5e68d983",
              "leftValue": "={{ $json.name }}",
              "rightValue": "Nguyen Duc Phat",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "1aa50da1-c9aa-4059-8eec-bc2c6e197216",
      "name": "Remove employee leave1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3780,
        2620
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Vu Van Minh",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Vu Van Minh"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "dbe7be1f-5b60-42df-bca3-3dd1ab846db7",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Vo Tuan Vu",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Vo Tuan Vu"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "3a1ebf8a-3f5c-44e3-b8eb-22452c6d8a32",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Nguyen Ngoc Huy",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Nguyen Ngoc Huy"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "602b04f8-5e81-4b3d-8537-8435fd5ca9f0",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Pham Ngoc Huy",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Pham Ngoc Huy"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8f2d3c75-6e15-44dd-955f-2462cea6fcf8",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Do Hoang Nam",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Do Hoang Nam"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5ddab4fb-4552-442c-b985-ac486038e5f0",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Hoang Anh Dung",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Hoang Anh Dung"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e4ebcd21-3054-433a-a04e-532ba93b1e19",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Nguyen Duc Canh",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Nguyen Duc Canh"
            }
          ]
        },
        "options": {}
      },
      "id": "57c4c010-afe8-4627-9a7c-19dc3e299d99",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -3320,
        2560
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('Switch Company1').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('Switch Company1').item.json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}"
      },
      "id": "85996310-7b37-4466-adef-22d8f4492f12",
      "name": "Cloodo Point17",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        300,
        1560
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "29e4734e-799f-4d8a-8357-a593df3f268c",
      "name": "IF not found31",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        60,
        1580
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $('Switch Company1').item.json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "947b548f-ecaf-4cf6-a084-44a39502b945",
      "name": "Cloodo Point54",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -140,
        1580
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "17966e15-f260-40c5-9c78-3a18ffd0ac40",
      "name": "Stop and Error35",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        720,
        1540
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "fecbb012-11ca-451f-b184-1c18b09804a4",
      "name": "If52",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        460,
        1560
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "b74fb352-e74b-4ea7-a55e-0b503fcf2ba1",
      "name": "If53",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1380,
        1040
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h UTC)\nconst startOfTodayUTC = new Date(Date.UTC(currentDate.getUTCFullYear(), currentDate.getUTCMonth(), currentDate.getUTCDate(), 0, 0, 0));\n\n// Tính thời điểm bắt đầu của ngày hôm qua (0h UTC)\nconst startOfYesterdayUTC = new Date(startOfTodayUTC);\nstartOfYesterdayUTC.setUTCDate(startOfYesterdayUTC.getUTCDate()); // Lùi về ngày hôm qua\n\n// Debug kiểm tra thời gian\n// console.log('Start of Yesterday (UTC):', startOfYesterdayUTC);\n// console.log('Start of Today (UTC):', startOfTodayUTC);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' thuộc ngày hôm qua\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm qua (UTC)\n    const isStartTimeYesterday = startDate >= startOfYesterdayUTC && startDate < startOfTodayUTC;\n\n    // Nếu 'start_time' thuộc ngày hôm qua, thêm vào mảng kết quả\n    if (isStartTimeYesterday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false kèm ID và tên user đầu tiên\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}"
      },
      "id": "2e09fdae-4f99-49d5-98db-d167f019ce40",
      "name": "Check create 7d41",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1620,
        1040
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "18c4f022-8f46-43f8-91ba-b6cb4931663c",
      "name": "get Timelog22",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1840,
        1040
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "b2e62f9a-a82c-4f56-9c78-7c7d74763633",
      "name": "If54",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1380,
        1260
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "7318c546-8a5e-480f-88dc-9f94e09663a3",
      "name": "Check create 7d42",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1620,
        1260
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a2d7af47-52e9-49f3-aefb-946e8e65d871",
      "name": "get Timelog23",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1840,
        1260
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "0a3e8dc2-d279-4443-87ab-339cf2c8adda",
      "name": "If104",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1400,
        1480
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h UTC)\nconst startOfTodayUTC = new Date(Date.UTC(currentDate.getUTCFullYear(), currentDate.getUTCMonth(), currentDate.getUTCDate(), 0, 0, 0));\n\n// Tính thời điểm bắt đầu của ngày hôm qua (0h UTC)\nconst startOfYesterdayUTC = new Date(startOfTodayUTC);\nstartOfYesterdayUTC.setUTCDate(startOfYesterdayUTC.getUTCDate() - 1 ); // Lùi về ngày hôm qua\n\n// Debug kiểm tra thời gian\n// console.log('Start of Yesterday (UTC):', startOfYesterdayUTC);\n// console.log('Start of Today (UTC):', startOfTodayUTC);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' thuộc ngày hôm qua\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm qua (UTC)\n    const isStartTimeYesterday = startDate >= startOfYesterdayUTC && startDate < startOfTodayUTC;\n\n    // Nếu 'start_time' thuộc ngày hôm qua, thêm vào mảng kết quả\n    if (isStartTimeYesterday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false kèm ID và tên user đầu tiên\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}"
      },
      "id": "4bfdef29-44e0-4f3a-8957-c8857aab4186",
      "name": "Check create 7d43",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1640,
        1480
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a67b81c6-5ee8-4170-9321-e4cc1a5fba99",
      "name": "get Timelog24",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1860,
        1480
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If104').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 360, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "bf3c5838-29a5-46bd-8c7c-a9b7a969562e",
      "name": "Code13",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -460,
        940
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "c761cbe7-2f9f-44f2-9839-2258004b20ef",
      "name": "If105",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -260,
        940
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If105').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If105').item.json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}"
      },
      "id": "809b17a4-7f19-4bc5-885b-1fcd8f0c00ba",
      "name": "Cloodo Point18",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        460,
        880
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "630c31db-ddd5-4e80-99af-394a2b42027d",
      "name": "IF not found32",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        220,
        900
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "99800330-e720-4bf7-8de1-c6d6f4f54717",
      "name": "Cloodo Point55",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        40,
        900
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "b732d8ef-95f7-43f0-9042-e6edf7db61bc",
      "name": "Stop and Error36",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        960,
        860
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3aeba922-8a32-4a43-8976-94f9345d01c4",
      "name": "If106",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        620,
        880
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $input.all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 240, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "ec0981a6-6da3-4933-bf17-9f554504e5e5",
      "name": "Code14",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -900,
        520
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "b3353a75-2998-4238-941c-fb1639d7e7e3",
      "name": "If107",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -640,
        520
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If107').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If107').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "55f16ef4-6e85-44db-844d-14d77539ec25",
      "name": "Cloodo Point19",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        40,
        480
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "6286afe7-04ac-4007-ae5b-ce6b1b16bc35",
      "name": "IF not found33",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -200,
        500
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "055df702-bc59-4801-a00b-c0532778434f",
      "name": "Cloodo Point56",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -400,
        500
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "098aff88-d5f5-45b6-be8b-0a6707074e34",
      "name": "Stop and Error37",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        460,
        460
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e6f4ac80-e302-4ba0-891c-5781355da261",
      "name": "If108",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        200,
        480
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "b8be3920-6015-4a48-a0e5-94b4084c6cdf",
      "name": "Switch Company4",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -2540,
        2460
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "873ebd4b-e47a-4cf8-9bd7-4af6bc2009f2",
      "name": "Switch Company5",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -2280,
        3820
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If64').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If64').item.json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}"
      },
      "id": "5e4003be-b2eb-4c01-b05e-44d09a3580f2",
      "name": "Cloodo Point12",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        120,
        2900
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "09f5bbf9-f8da-4d32-999e-7040a288ca81",
      "name": "IF not found14",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -120,
        2920
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $('If64').item.json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "3bfc1ad1-6b99-4ca9-b5b0-cc4642f09151",
      "name": "Cloodo Point28",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -320,
        2920
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "5ef5e419-dacf-418f-a20a-e376fd411db0",
      "name": "Stop and Error17",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        540,
        2880
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ab484029-df49-4caf-abfd-e216eb24661a",
      "name": "If49",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        280,
        2900
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "d44fd8a7-b850-4221-ad8d-3cda38510168",
      "name": "If50",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1680,
        2320
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h UTC)\nconst startOfTodayUTC = new Date(Date.UTC(currentDate.getUTCFullYear(), currentDate.getUTCMonth(), currentDate.getUTCDate(), 0, 0, 0));\n\n// Tính thời điểm bắt đầu của ngày hôm qua (0h UTC)\nconst startOfYesterdayUTC = new Date(startOfTodayUTC);\nstartOfYesterdayUTC.setUTCDate(startOfYesterdayUTC.getUTCDate()); // Lùi về ngày hôm qua\n\n// Debug kiểm tra thời gian\n// console.log('Start of Yesterday (UTC):', startOfYesterdayUTC);\n// console.log('Start of Today (UTC):', startOfTodayUTC);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' thuộc ngày hôm qua\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm qua (UTC)\n    const isStartTimeYesterday = startDate >= startOfYesterdayUTC && startDate < startOfTodayUTC;\n\n    // Nếu 'start_time' thuộc ngày hôm qua, thêm vào mảng kết quả\n    if (isStartTimeYesterday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false kèm ID và tên user đầu tiên\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}"
      },
      "id": "4574c4e6-e2b4-4ac2-8ba6-c8e86035abc9",
      "name": "Check create 7d38",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1920,
        2320
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "5e21539a-7852-4dbe-97f7-df9ebf5b5642",
      "name": "get Timelog4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2140,
        2320
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "7a2b05a5-42e0-450c-9abd-3a1d5f9b4f9f",
      "name": "If51",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1680,
        2540
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "8d7f4742-de37-4e01-ae2f-f9fa591f5a98",
      "name": "Check create 7d39",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1920,
        2540
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "62d399db-c61f-4300-b90d-a7d9f80efac4",
      "name": "get Timelog5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2140,
        2540
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "85adeadd-276c-4961-b499-c1b5f366037a",
      "name": "If64",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1700,
        2760
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h UTC)\nconst startOfTodayUTC = new Date(Date.UTC(currentDate.getUTCFullYear(), currentDate.getUTCMonth(), currentDate.getUTCDate(), 0, 0, 0));\n\n// Tính thời điểm bắt đầu của ngày hôm qua (0h UTC)\nconst startOfYesterdayUTC = new Date(startOfTodayUTC);\nstartOfYesterdayUTC.setUTCDate(startOfYesterdayUTC.getUTCDate() - 1 ); // Lùi về ngày hôm qua\n\n// Debug kiểm tra thời gian\n// console.log('Start of Yesterday (UTC):', startOfYesterdayUTC);\n// console.log('Start of Today (UTC):', startOfTodayUTC);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' thuộc ngày hôm qua\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm qua (UTC)\n    const isStartTimeYesterday = startDate >= startOfYesterdayUTC && startDate < startOfTodayUTC;\n\n    // Nếu 'start_time' thuộc ngày hôm qua, thêm vào mảng kết quả\n    if (isStartTimeYesterday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false kèm ID và tên user đầu tiên\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}"
      },
      "id": "0303a608-46f3-4166-83ac-50fa689de5ad",
      "name": "Check create 7d40",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1940,
        2760
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "7949df15-9009-4c9c-b687-a528aed3571d",
      "name": "get Timelog6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2160,
        2760
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If64').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 360, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "4d12014b-c7bb-4b6a-8e60-03aa2c6ec09f",
      "name": "Code2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -560,
        2320
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "265d094a-4c35-434f-b027-666011bb687f",
      "name": "If65",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -300,
        2320
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If65').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If65').item.json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}"
      },
      "id": "e2c25630-8b86-4870-a7dd-26853d1a8aa7",
      "name": "Cloodo Point13",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        380,
        2280
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "8e0b31cb-d9c1-44e9-b482-c71aa9a428e3",
      "name": "IF not found15",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        140,
        2300
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "ac7ede94-94ca-4768-a75f-c41f0f8d3d85",
      "name": "Cloodo Point29",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -20,
        2300
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "9c8bc57b-818b-4981-a785-eb88c97e7198",
      "name": "Stop and Error18",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        800,
        2260
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d1df58aa-068d-48e0-82a8-c830ad98c5b6",
      "name": "If66",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        540,
        2280
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $input.all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 240, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "a29e3c93-e839-455f-8fc6-bf2ceb3d4e6b",
      "name": "Code3",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1220,
        2100
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "1d58fad7-a0fe-4810-a8a4-a8333bcef074",
      "name": "If67",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -960,
        2100
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If67').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If67').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "8d339629-77dd-4e04-8a62-a92fd0daf7c4",
      "name": "Cloodo Point14",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -280,
        2060
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "161470f1-28de-4c0d-9b0c-badb4cce8c64",
      "name": "IF not found16",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -520,
        2080
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "89089668-9675-4b7d-b07c-32df70e8a4e3",
      "name": "Cloodo Point30",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -720,
        2080
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "a4c0fc89-5641-4f1d-b4bc-39e2857c19f6",
      "name": "Stop and Error19",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        140,
        2040
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "64201e7d-cd38-47ef-b814-73ca01294958",
      "name": "If68",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -120,
        2060
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "useDataOfInput": 2
      },
      "id": "8404f5e7-b62a-47f9-b6fa-054a0555dce8",
      "name": "Merge9",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -700,
        2920
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If69').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If69').item.json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}"
      },
      "id": "a9401688-97a3-4670-b4da-589c84c92e67",
      "name": "Cloodo Point15",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        720,
        4060
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "aa5681e9-dbc0-4e2d-8dd9-a0f07e2b73f4",
      "name": "IF not found17",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        480,
        4080
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $('If69').item.json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "da69d7bf-0655-417e-8943-435e5d0f5ecf",
      "name": "Cloodo Point31",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        280,
        4080
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "3ef887ed-4ca3-42d2-ae1c-a81f6c70887e",
      "name": "Stop and Error20",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1140,
        4040
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5d4dd6c8-e4cd-4ce2-8330-67859db1418e",
      "name": "If60",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        880,
        4060
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "39c21bba-5147-4f4d-b7cf-2e0dffadfc9b",
      "name": "If61",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1240,
        3580
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h UTC)\nconst startOfTodayUTC = new Date(Date.UTC(currentDate.getUTCFullYear(), currentDate.getUTCMonth(), currentDate.getUTCDate(), 0, 0, 0));\n\n// Tính thời điểm bắt đầu của ngày hôm qua (0h UTC)\nconst startOfYesterdayUTC = new Date(startOfTodayUTC);\nstartOfYesterdayUTC.setUTCDate(startOfYesterdayUTC.getUTCDate()); // Lùi về ngày hôm qua\n\n// Debug kiểm tra thời gian\n// console.log('Start of Yesterday (UTC):', startOfYesterdayUTC);\n// console.log('Start of Today (UTC):', startOfTodayUTC);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' thuộc ngày hôm qua\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm qua (UTC)\n    const isStartTimeYesterday = startDate >= startOfYesterdayUTC && startDate < startOfTodayUTC;\n\n    // Nếu 'start_time' thuộc ngày hôm qua, thêm vào mảng kết quả\n    if (isStartTimeYesterday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false kèm ID và tên user đầu tiên\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}"
      },
      "id": "6b7fbb7a-ca88-4b83-b7a2-0cdf30ed7e85",
      "name": "Check create 7d50",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1480,
        3580
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "ef465a86-99c7-4a0e-a5e7-0424f3f8c773",
      "name": "get Timelog7",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1700,
        3580
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "e54883ac-9a86-4d9f-8309-024c4b90acc4",
      "name": "If62",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1240,
        3800
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "5904daa6-d67e-44cb-8069-9f9f81a14f50",
      "name": "Check create 7d51",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1480,
        3800
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "f30940b6-af3f-45a3-8e41-9453536bda78",
      "name": "get Timelog8",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1700,
        3800
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "d5ff0e92-8e73-4cab-9f74-f0a72cc1a9f6",
      "name": "If69",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1260,
        4020
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h UTC)\nconst startOfTodayUTC = new Date(Date.UTC(currentDate.getUTCFullYear(), currentDate.getUTCMonth(), currentDate.getUTCDate(), 0, 0, 0));\n\n// Tính thời điểm bắt đầu của ngày hôm qua (0h UTC)\nconst startOfYesterdayUTC = new Date(startOfTodayUTC);\nstartOfYesterdayUTC.setUTCDate(startOfYesterdayUTC.getUTCDate() - 1 ); // Lùi về ngày hôm qua\n\n// Debug kiểm tra thời gian\n// console.log('Start of Yesterday (UTC):', startOfYesterdayUTC);\n// console.log('Start of Today (UTC):', startOfTodayUTC);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' thuộc ngày hôm qua\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm qua (UTC)\n    const isStartTimeYesterday = startDate >= startOfYesterdayUTC && startDate < startOfTodayUTC;\n\n    // Nếu 'start_time' thuộc ngày hôm qua, thêm vào mảng kết quả\n    if (isStartTimeYesterday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false kèm ID và tên user đầu tiên\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}"
      },
      "id": "df08e7b3-b8d3-4c9e-8a44-79af0a597771",
      "name": "Check create 7d52",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1500,
        4020
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "4682b435-68c7-4bd9-8cb3-69d512d1cd18",
      "name": "get Timelog9",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1720,
        4020
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If69').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 360, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "93ce6c69-e3de-49ab-a02e-b6d43891ff1e",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -280,
        3560
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "34c4d9b6-9430-4489-a262-c74686a8ce4f",
      "name": "If70",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -20,
        3560
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If70').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If70').item.json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}"
      },
      "id": "2215c147-a963-4a81-8476-bda8b13fe203",
      "name": "Cloodo Point20",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        660,
        3520
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "ec52214e-a0ea-4808-b49e-f345c046440a",
      "name": "IF not found18",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        420,
        3540
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "0b3420ca-1d09-492c-a47c-4558ba488020",
      "name": "Cloodo Point32",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        260,
        3540
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "db17f080-1e7a-4fb9-b15b-ddf59395436a",
      "name": "Stop and Error21",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1080,
        3500
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "07f1c85e-08f5-416a-8b79-bf1394536320",
      "name": "If71",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        820,
        3520
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $input.all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 240, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "e46a3295-b22c-426d-ac85-5369179f81c3",
      "name": "Code4",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -500,
        3320
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "44b318ba-979f-4fcd-bad5-0d9971ba605d",
      "name": "If72",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -240,
        3320
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If72').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If72').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "395a84de-7ce6-4984-bfb6-f8aa0908fdc2",
      "name": "Cloodo Point21",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        440,
        3280
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "7e79aab0-eb01-4e21-ba38-53ac950437ff",
      "name": "IF not found19",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        200,
        3300
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "df3d896e-0416-4cf6-8063-a800c44c79f6",
      "name": "Cloodo Point33",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        0,
        3300
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "bc645741-0848-4358-9342-adcf3f51e7fa",
      "name": "Stop and Error22",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        860,
        3260
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "547cff66-c9d6-4b1a-8e7c-853d7388afba",
      "name": "If73",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        600,
        3280
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "useDataOfInput": 2
      },
      "id": "d0080ea0-f92c-4c2f-806e-2a06e6623d0e",
      "name": "Merge10",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -120,
        4100
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "462efd0f-5b04-443a-b417-dfc8f0ac5c83",
      "name": "Switch Company7",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -2560,
        4880
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If84').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If84').item.json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}"
      },
      "id": "409bbdc5-a2cc-446d-9e90-b3e05b357f2e",
      "name": "Cloodo Point27",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        500,
        5420
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "795d59be-01bc-4c19-925d-52d88fa48d77",
      "name": "IF not found23",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        260,
        5440
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $('If84').item.json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "c7ceeddf-e0ff-4930-96c1-9be1fa600908",
      "name": "Cloodo Point37",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        60,
        5440
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "a3b0eb73-d674-4c19-9a69-00eb64227f95",
      "name": "Stop and Error26",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        920,
        5400
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e4a9ee83-ef5e-4e13-bc78-024b8356f685",
      "name": "If81",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        660,
        5420
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "6e5d2778-c7dd-4a70-9865-69d117202f7a",
      "name": "If82",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1520,
        4760
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h UTC)\nconst startOfTodayUTC = new Date(Date.UTC(currentDate.getUTCFullYear(), currentDate.getUTCMonth(), currentDate.getUTCDate(), 0, 0, 0));\n\n// Tính thời điểm bắt đầu của ngày hôm qua (0h UTC)\nconst startOfYesterdayUTC = new Date(startOfTodayUTC);\nstartOfYesterdayUTC.setUTCDate(startOfYesterdayUTC.getUTCDate()); // Lùi về ngày hôm qua\n\n// Debug kiểm tra thời gian\n// console.log('Start of Yesterday (UTC):', startOfYesterdayUTC);\n// console.log('Start of Today (UTC):', startOfTodayUTC);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' thuộc ngày hôm qua\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm qua (UTC)\n    const isStartTimeYesterday = startDate >= startOfYesterdayUTC && startDate < startOfTodayUTC;\n\n    // Nếu 'start_time' thuộc ngày hôm qua, thêm vào mảng kết quả\n    if (isStartTimeYesterday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false kèm ID và tên user đầu tiên\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}"
      },
      "id": "999e570e-92c7-4465-a942-b59cd756fdf9",
      "name": "Check create 7d56",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1760,
        4760
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "e41bcf70-127b-4d9d-a127-e29dd7bafe53",
      "name": "get Timelog13",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1980,
        4760
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "6979a9a3-7fb2-4956-bca6-b80c4f82370b",
      "name": "If83",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1520,
        4980
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "bd12c524-da62-4d2c-a52b-cfbdb1f19429",
      "name": "Check create 7d57",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1760,
        4980
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "5be08110-7d42-44de-994a-eb9fc4697c06",
      "name": "get Timelog14",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1980,
        4980
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "dd8b9f4a-2187-450a-b848-f4d3914fe640",
      "name": "If84",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1540,
        5200
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h UTC)\nconst startOfTodayUTC = new Date(Date.UTC(currentDate.getUTCFullYear(), currentDate.getUTCMonth(), currentDate.getUTCDate(), 0, 0, 0));\n\n// Tính thời điểm bắt đầu của ngày hôm qua (0h UTC)\nconst startOfYesterdayUTC = new Date(startOfTodayUTC);\nstartOfYesterdayUTC.setUTCDate(startOfYesterdayUTC.getUTCDate() - 1 ); // Lùi về ngày hôm qua\n\n// Debug kiểm tra thời gian\n// console.log('Start of Yesterday (UTC):', startOfYesterdayUTC);\n// console.log('Start of Today (UTC):', startOfTodayUTC);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' thuộc ngày hôm qua\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm qua (UTC)\n    const isStartTimeYesterday = startDate >= startOfYesterdayUTC && startDate < startOfTodayUTC;\n\n    // Nếu 'start_time' thuộc ngày hôm qua, thêm vào mảng kết quả\n    if (isStartTimeYesterday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false kèm ID và tên user đầu tiên\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}"
      },
      "id": "9a5870b9-2448-4d30-a4fc-4476a141afdc",
      "name": "Check create 7d58",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1780,
        5200
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "2d0d9808-33eb-4f00-88ae-6385c49a9180",
      "name": "get Timelog15",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2000,
        5200
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If84').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 360, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "b67b7bd5-e898-45f4-abd0-4fb22572b6e5",
      "name": "Code7",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -200,
        4780
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "e6aac45d-ba01-4341-aa90-70bd81c10c4f",
      "name": "If85",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        60,
        4780
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If85').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If85').item.json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}"
      },
      "id": "1adf9992-4b9f-4504-a30d-cc2e0d5fc0c7",
      "name": "Cloodo Point38",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        720,
        4740
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "bfe44afc-e6e7-4fb7-ab45-91b8a81f5b79",
      "name": "IF not found24",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        480,
        4760
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "80658542-5c62-4d2d-99e4-d39bd721accd",
      "name": "Cloodo Point39",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        320,
        4760
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "9b5626ed-4bbd-487a-b7ba-a41774d82c7b",
      "name": "Stop and Error27",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1140,
        4720
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "fb8d92c6-6841-406d-a08f-a405dd388981",
      "name": "If86",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        880,
        4740
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $input.all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 240, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "3614996e-a3e4-469a-92aa-fa467ab44b8e",
      "name": "Code8",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -700,
        4540
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "5e1e5cd8-5e9a-4a9d-91ac-153063a3e87f",
      "name": "If87",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -440,
        4540
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If87').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If87').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "f35e9ea1-1d0b-4306-98ec-e208bed0b66d",
      "name": "Cloodo Point40",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        260,
        4500
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "7ff76eba-0420-4ceb-bbdd-7de007429020",
      "name": "IF not found25",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        20,
        4520
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "9134e2b2-72ea-466d-9e68-6cc8110cf224",
      "name": "Cloodo Point41",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -180,
        4520
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "52338a03-ef79-4358-86a6-a72e49525144",
      "name": "Stop and Error28",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        680,
        4480
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d7de2a22-a2bb-4bc9-afc2-72f4490edeab",
      "name": "If88",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        420,
        4500
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "646a1657-8948-498a-9517-6c2234da81b6",
      "name": "Switch Company",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -5740,
        960
      ]
    },
    {
      "parameters": {
        "errorMessage": "emplooyee Cms"
      },
      "id": "66c4ca69-696e-49bc-bd53-7e9db6e2396b",
      "name": "Stop and Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -5660,
        640
      ]
    },
    {
      "parameters": {
        "errorMessage": "emplooyee Printcart"
      },
      "id": "5e612343-232e-48b8-8a19-6c2df2941b7e",
      "name": "Stop and Error1",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -5540,
        800
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6e41004a-24bd-4475-9837-4c1b5e68d983",
              "leftValue": "={{ $json.name }}",
              "rightValue": "Vu Van Tuyen",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "a781e98a-3884-48fc-8383-6c03e33c4fc4",
              "leftValue": "={{ $json.name }}",
              "rightValue": "Nguyen Thanh Tung",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "e8b08aef-5a50-4c99-8f0a-77ee44c19779",
      "name": "Remove employee leave",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -6300,
        2120
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Vu Van Tuyen",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Vu Van Tuyen"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "adbce1c4-d26c-475c-94fe-bc372e7c2f4d",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Nguyen Thanh Tung",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Nguyen Thanh Tung"
            }
          ]
        },
        "options": {}
      },
      "id": "32ba0935-5d4a-4a72-a0e0-71cd8999ea19",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -5980,
        1680
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "10d77cc2-ef81-4c8f-9c8f-f63e58ba47c3",
      "name": "Switch Company9",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -5780,
        1960
      ]
    },
    {
      "parameters": {
        "errorMessage": "emplooyee Cms"
      },
      "id": "a59db8c3-1c5e-46aa-841d-82265704fd7b",
      "name": "Stop and Error2",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -5700,
        1640
      ]
    },
    {
      "parameters": {
        "errorMessage": "emplooyee Printcart"
      },
      "id": "efe8033e-ac7a-4461-9916-96e1a7310a48",
      "name": "Stop and Error3",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -5580,
        1800
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If109').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If109').item.json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}"
      },
      "id": "0e5f6296-81d0-4fa8-b63a-d7ce96c42559",
      "name": "Cloodo Point24",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -3660,
        1120
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "6996fed8-a760-4311-9529-73e05a31b1a3",
      "name": "IF not found34",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -3900,
        1140
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "e53001ba-84c8-4998-909f-8ba4ef30b074",
      "name": "Cloodo Point57",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -4100,
        1140
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "3e9099c1-7388-4c40-a729-f32cd63e95fe",
      "name": "Stop and Error38",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -3240,
        1100
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "efe357fa-6c00-486f-90e4-bb59faada7fc",
      "name": "If55",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3480,
        1140
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "32475066-b62d-44ca-89f9-e42798d9b249",
      "name": "If109",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4940,
        1000
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h UTC)\nconst startOfTodayUTC = new Date(Date.UTC(currentDate.getUTCFullYear(), currentDate.getUTCMonth(), currentDate.getUTCDate(), 0, 0, 0));\n\n// Tính thời điểm bắt đầu của ngày hôm qua (0h UTC)\nconst startOfYesterdayUTC = new Date(startOfTodayUTC);\nstartOfYesterdayUTC.setUTCDate(startOfYesterdayUTC.getUTCDate() - 1 ); // Lùi về ngày hôm qua\n\n// Debug kiểm tra thời gian\n// console.log('Start of Yesterday (UTC):', startOfYesterdayUTC);\n// console.log('Start of Today (UTC):', startOfTodayUTC);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' thuộc ngày hôm qua\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm qua (UTC)\n    const isStartTimeYesterday = startDate >= startOfYesterdayUTC && startDate < startOfTodayUTC;\n\n    // Nếu 'start_time' thuộc ngày hôm qua, thêm vào mảng kết quả\n    if (isStartTimeYesterday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false kèm ID và tên user đầu tiên\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}"
      },
      "id": "046d226c-4971-4d52-8f70-a0d9572222f1",
      "name": "Check create 7d44",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5180,
        1000
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "2d56f1cc-4ea1-4b14-b6a3-60f314783919",
      "name": "get Timelog25",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -5400,
        1000
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If109').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 360, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "4bd1a7fa-7284-4fe9-a511-a4f9ce31a3ee",
      "name": "Code15",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4140,
        680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "20bbff06-35d6-4a9d-8715-4e9643f7902b",
      "name": "If110",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3980,
        680
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If110').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If110').item.json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}"
      },
      "id": "d46cc666-69ff-4987-a4ca-3e7e8d3e565d",
      "name": "Cloodo Point25",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -3360,
        640
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "90f85083-282f-46b8-9cb3-95d70f65dcb8",
      "name": "IF not found35",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -3600,
        660
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "bdcf5fe5-26a8-4c20-b9e8-a00d44a4a94d",
      "name": "Cloodo Point58",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -3760,
        660
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "0a99014b-8ddf-46f6-839e-37494f09f23a",
      "name": "Stop and Error39",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -2940,
        620
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "bd660776-288b-4a33-adfa-f34c78de081a",
      "name": "If111",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3200,
        640
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If114').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If114').item.json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}"
      },
      "id": "509d5b04-17d4-4238-9193-168c95204e19",
      "name": "Cloodo Point59",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -3860,
        2120
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "02910228-26cc-45db-94cf-4d19ced51adb",
      "name": "IF not found36",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -4100,
        2140
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $('If114').item.json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "cb2c2401-3852-4172-a52f-1ee3694b9578",
      "name": "Cloodo Point60",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -4300,
        2140
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "5bc17980-a8e2-4726-8ccd-1b8ae38a4cf0",
      "name": "Stop and Error40",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -3440,
        2100
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "18d321ee-657d-4a48-8f3a-9423b792db3f",
      "name": "If112",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3700,
        2120
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "ad5e34c5-4732-4f73-8dc8-a9ee7ea3f7e0",
      "name": "If114",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -5080,
        2040
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h UTC)\nconst startOfTodayUTC = new Date(Date.UTC(currentDate.getUTCFullYear(), currentDate.getUTCMonth(), currentDate.getUTCDate(), 0, 0, 0));\n\n// Tính thời điểm bắt đầu của ngày hôm qua (0h UTC)\nconst startOfYesterdayUTC = new Date(startOfTodayUTC);\nstartOfYesterdayUTC.setUTCDate(startOfYesterdayUTC.getUTCDate() - 1 ); // Lùi về ngày hôm qua\n\n// Debug kiểm tra thời gian\n// console.log('Start of Yesterday (UTC):', startOfYesterdayUTC);\n// console.log('Start of Today (UTC):', startOfTodayUTC);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' thuộc ngày hôm qua\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm qua (UTC)\n    const isStartTimeYesterday = startDate >= startOfYesterdayUTC && startDate < startOfTodayUTC;\n\n    // Nếu 'start_time' thuộc ngày hôm qua, thêm vào mảng kết quả\n    if (isStartTimeYesterday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false kèm ID và tên user đầu tiên\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}"
      },
      "id": "cec60da1-9f8b-43a4-8881-00fbad2b0e0d",
      "name": "Check create 7d46",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5320,
        2040
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "d2c38d22-f4fc-4094-8bd2-7869ed938d2d",
      "name": "get Timelog27",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -5540,
        2040
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If114').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 360, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "f3f52d41-cf3e-484b-ad77-19d63ec343f6",
      "name": "Code16",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4400,
        1660
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "2b968405-b005-42ae-8778-6771157350ec",
      "name": "If115",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4200,
        1660
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If115').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If115').item.json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}"
      },
      "id": "759cdb47-ebb3-4535-9938-d7fadbf8d781",
      "name": "Cloodo Point61",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -3520,
        1620
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "2c698899-d453-4e34-9a29-e283fca3f4be",
      "name": "IF not found37",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -3760,
        1640
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "4293d6a3-b1e8-4a0a-a903-b712cd768523",
      "name": "Cloodo Point62",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -3920,
        1640
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "467c40e1-9c2e-4949-bc8d-3f717bf16303",
      "name": "Stop and Error41",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -3100,
        1600
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f051c90f-cbae-46ad-9f4e-d7203d5a35b5",
      "name": "If116",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3360,
        1620
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "05060497-6fbe-496d-b91f-616eb507cbd9",
      "name": "Check Leave Single",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4820,
        2160
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a3b2f02f-2d9b-47c8-a26a-494cafaad70f",
      "name": "If1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4600,
        2160
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "half day"
            },
            {
              "name": "search",
              "value": "={{ $json.items[0].user.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "81265245-68f0-4f34-a54c-91b8462dc88e",
      "name": "Check Leave halfday",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4820,
        1920
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9533895b-5669-4337-a57a-a8885ad25a91",
      "name": "If2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4640,
        1920
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If114').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 180, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "bb22911c-d0dd-4cd5-bdc7-c4d266c29cc3",
      "name": "Code17",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4400,
        1900
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "012ed3f0-7915-4857-97cd-b738b6aa400b",
      "name": "If117",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4200,
        1900
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If117').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If117').item.json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}"
      },
      "id": "186b88f8-3636-429d-8eef-a3e24c3531b8",
      "name": "Cloodo Point63",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -3520,
        1860
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "b320d29a-94f0-48b7-8831-09d7bcb70a21",
      "name": "IF not found38",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -3760,
        1880
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "c53b8ff2-d14f-4f7e-9d3b-ece7730877b3",
      "name": "Cloodo Point64",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -3920,
        1880
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "320f0450-3d2f-4cf2-b2ad-853c1a953b61",
      "name": "Stop and Error42",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -3100,
        1840
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6204e43c-3b91-49c6-bdc6-9c28523194a7",
      "name": "If118",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3360,
        1860
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "acd4ebf0-a5a8-4d35-b4f1-762b2798b53d",
      "name": "Check Leave Single1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4600,
        1120
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "717492e9-b833-4943-b05e-4e39d234bf6d",
      "name": "If3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4380,
        1120
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "half day"
            },
            {
              "name": "search",
              "value": "={{ $json.items[0].user.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "a6ce0171-e21d-4317-b3f4-2f20e25b6f3e",
      "name": "Check Leave halfday1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4580,
        840
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "4847f56d-6d0e-40a3-8cb8-8ed18b6fe450",
      "name": "If4",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4400,
        840
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If109').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 180, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "247cf212-1fa1-4451-adb4-714898ba5bcc",
      "name": "Code18",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4160,
        940
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "b547f207-0f83-44c3-9878-4fcecf74d5e0",
      "name": "If113",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4000,
        940
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If113').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If113').item.json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}"
      },
      "id": "b604448b-bc6b-4887-9e4d-a83acd622a88",
      "name": "Cloodo Point65",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -3380,
        900
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "7606b6ef-e60d-44af-a49b-f5f03adfdb25",
      "name": "IF not found39",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -3620,
        920
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "d7a4acff-ca04-427a-921c-df97785af9d5",
      "name": "Cloodo Point66",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -3780,
        920
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "2f4a7084-d6dd-47a2-a5df-37180c1bf0b9",
      "name": "Stop and Error43",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -2960,
        880
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6a1eef52-c883-4c65-89c5-da4b0e0e5c59",
      "name": "If119",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3220,
        900
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "99dbb1ff-1d80-4b5f-b6d0-ec64ea86bbfc",
      "name": "Check Leave Single2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1000,
        5520
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "49ea2ca7-f2cf-449e-9ecc-7e5406bf8ec6",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -780,
        5520
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "55e07144-c2aa-4849-bdd4-6558ebe69e12",
      "name": "Check Leave Single3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1000,
        5260
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c0b5e672-3da8-46dd-be56-6fd6c317ef86",
      "name": "If5",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -780,
        5260
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "useDataOfInput": 2
      },
      "id": "64e31591-22e7-4df6-9ceb-af2ca11d1cd1",
      "name": "Merge12",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -220,
        5440
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "half day"
            },
            {
              "name": "search",
              "value": "={{ $json.items[0].user.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "a74741ab-6a11-43da-a568-ba5ea1780079",
      "name": "Check Leave halfday2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -780,
        4920
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6f4cbc13-d963-4603-834a-fe645965bdbc",
      "name": "If6",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -600,
        4920
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If84').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 180, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "4d6e82a3-b3aa-4d2b-9818-67c2e635bd0e",
      "name": "Code9",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -180,
        5020
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "015e0f07-66ba-433b-ad1b-aef1328d0ca6",
      "name": "If89",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        80,
        5020
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If89').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If89').item.json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}"
      },
      "id": "85025ef2-bf0a-4b02-bf26-1c28cfd3e10f",
      "name": "Cloodo Point",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        740,
        4980
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "a7a0f423-d136-4401-8848-2171510e7f50",
      "name": "IF not found",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        500,
        5000
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "cd1857ea-7049-4776-8dd0-ff9ac17af31c",
      "name": "Cloodo Point42",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        340,
        5000
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "41499630-880a-43b1-89b8-ca9ddc1a78c1",
      "name": "Stop and Error29",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1160,
        4960
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3a9e908b-1aa4-4da1-a5d5-2cacca3fc27c",
      "name": "If90",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        900,
        4980
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "bb49d736-b9f0-4f0d-86d5-a88a91aa662f",
      "name": "Check Leave Single4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1300,
        3040
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b8173176-fc48-4f3c-bfff-868ac9b41a91",
      "name": "If7",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1080,
        3040
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "8c5e8bb6-e1e8-4186-b1d2-fc6b4516281a",
      "name": "Check Leave Single5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1300,
        2780
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7a7d0c4f-bfea-4463-a938-b77a213cc58d",
      "name": "If8",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1080,
        2780
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "half day"
            },
            {
              "name": "search",
              "value": "={{ $json.items[0].user.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "122ccf4e-2e27-4e8a-a8e6-c15c143dc8cc",
      "name": "Check Leave halfday3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1120,
        2500
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ec6faa50-8943-4f69-94ad-a8d9e6933ae9",
      "name": "If9",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -940,
        2500
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If64').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 180, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "68b9a13e-d0a0-4c82-ab61-3e108f0fca0b",
      "name": "Code5",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -560,
        2580
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "83cb4b7c-a213-4bea-b72e-39d0912da8b3",
      "name": "If74",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -340,
        2580
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If74').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If74').item.json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}"
      },
      "id": "01d9c9ca-2a3c-43c7-80b2-0dabdc5bcbba",
      "name": "Cloodo Point16",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        340,
        2540
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "aaab6ba7-43e6-42ca-a423-b1fc342557bf",
      "name": "IF not found20",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        100,
        2560
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "845adfab-d81b-4931-8899-fb9a035e31de",
      "name": "Cloodo Point34",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -60,
        2560
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "bcc69f31-9991-49b4-8680-88c3d2bbfe46",
      "name": "Stop and Error23",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        800,
        2520
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "56aee95e-fc10-4c3c-b58a-12f41c64db58",
      "name": "If75",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        540,
        2540
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "e016c61c-5fef-41b2-8418-0e4ec8538cc5",
      "name": "Check Leave Single6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -700,
        4140
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6037353a-21c1-47f9-a570-c0c4228477e3",
      "name": "If10",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -480,
        4140
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "fd93f6a7-4c00-4b59-9af5-20a120e20189",
      "name": "Check Leave Single7",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -700,
        3980
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b9bd1958-da9b-4dc7-80a8-12127abdc68e",
      "name": "If11",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -480,
        3980
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "half day"
            },
            {
              "name": "search",
              "value": "={{ $json.items[0].user.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "b2ef8d36-6d43-481a-8f2f-f050f91b183a",
      "name": "Check Leave halfday4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -800,
        3700
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9dd02f92-aa34-4960-a478-644ab4e0c25b",
      "name": "If12",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -620,
        3700
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If69').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 180, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "c1a91535-a88b-45bc-bd14-3d3ede041104",
      "name": "Code1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -280,
        3760
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "c67bb785-fee5-4ede-bb45-0860e53b6555",
      "name": "If76",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -20,
        3780
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If76').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If76').item.json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}"
      },
      "id": "1fb1c50c-47d1-42f7-b303-f4192caa543e",
      "name": "Cloodo Point1",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        680,
        3740
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "2e8c5643-2b3b-4f10-94b2-15e6c7c9338d",
      "name": "IF not found1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        440,
        3760
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "277c7dc2-784c-42ca-be08-7aca9c7a2756",
      "name": "Cloodo Point43",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        280,
        3760
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "aa0d5e11-99b0-4ed8-a9b7-b3aa88949a4b",
      "name": "Stop and Error30",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1100,
        3720
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "eb0e5084-c7c2-48c5-8b22-c86dabe4e771",
      "name": "If91",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        840,
        3740
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "a4a36162-b1dc-4efb-84a4-329f9f23c357",
      "name": "Check Leave Single8",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1000,
        1700
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "84a5bd77-02d1-4313-8990-90cae905d086",
      "name": "If13",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -780,
        1700
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "276cf432-95da-4e3a-9ba0-01e023a87334",
      "name": "Check Leave Single9",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1000,
        1440
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b3b32a5d-8f47-4d25-a9ae-d544cc6fde1c",
      "name": "If14",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -780,
        1440
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "half day"
            },
            {
              "name": "search",
              "value": "={{ $json.items[0].user.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "807af5c7-df68-49b1-b9ba-6faae19066b4",
      "name": "Check Leave halfday5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -900,
        1180
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "126c55c0-63c8-4bd7-80ae-d5c8dad29ec1",
      "name": "If15",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -720,
        1180
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If104').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 180, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "3616522a-1b92-41cf-b5a4-cfce9d99926d",
      "name": "Code19",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -460,
        1280
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "19bce661-6678-417e-9b5b-12d7e8f29a89",
      "name": "If120",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -260,
        1280
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If120').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If120').item.json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}"
      },
      "id": "74aaf057-bf20-4285-addd-59c95a642b95",
      "name": "Cloodo Point22",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        480,
        1240
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "800f37f8-ceb1-4e7f-a5d2-3dacd39d4e4d",
      "name": "IF not found40",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        240,
        1260
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "2c5c9c22-2d0c-42f5-b19b-a3bccc6d762a",
      "name": "Cloodo Point67",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        60,
        1260
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "c48ec1d5-0aa8-4da9-9ecf-2bf885c03663",
      "name": "Stop and Error44",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        980,
        1220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e23b1fee-ecc9-458f-9c9e-bfb18f99023e",
      "name": "If121",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        640,
        1240
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks",
              "triggerAtDay": [
                2,
                3,
                4,
                5,
                6
              ],
              "triggerAtHour": 9
            }
          ]
        }
      },
      "id": "9b89cb31-11a7-4e0c-bc4b-859d583c7d1e",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -8240,
        2420
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks",
              "triggerAtDay": [
                2,
                3,
                4,
                5,
                6
              ],
              "triggerAtHour": 10
            }
          ]
        }
      },
      "id": "bfdd6c88-8e21-4522-b383-acda02822d48",
      "name": "Schedule Trigger1",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -8240,
        2840
      ]
    },
    {
      "parameters": {
        "content": "## 6pm and 9pm\n",
        "height": 80
      },
      "id": "06be7094-2b1a-47d4-be59-23d139fa0aaf",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -8620,
        2640
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "Logtime on day 2025-02-27",
        "max_limit_record": 50
      },
      "id": "8aaca9db-cc43-4dc0-9a56-c6bb94473e2e",
      "name": "Cloodo Point44",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -5780,
        3340
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "point_id": 76101
      },
      "id": "a9aed97e-cc3f-45a0-aa56-5120f464c651",
      "name": "Cloodo Point45",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -5440,
        3340
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "9aa68a9a-709c-41d6-86fc-d8a74ea9b971",
      "name": "Switch Company1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -2280,
        1240
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "useDataOfInput": 2
      },
      "id": "6c89dc70-4832-45d5-b0fa-8aa6248fc94a",
      "name": "Merge15",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -400,
        1580
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Get All Department": {
      "main": [
        [
          {
            "node": "GetMember",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Department1": {
      "main": [
        [
          {
            "node": "GetMember1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Department2": {
      "main": [
        [
          {
            "node": "GetMember2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "CompanyName",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GetMember": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GetMember1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "GetMember2": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "CompanyName": {
      "main": [
        [
          {
            "node": "Count Company",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Count Company": {
      "main": [
        [
          {
            "node": "Remove employee leave",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Remove employee leave1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove employee leave1": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point17": {
      "main": [
        [
          {
            "node": "If52",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found31": {
      "main": [
        [
          {
            "node": "Cloodo Point17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point54": {
      "main": [
        [
          {
            "node": "IF not found31",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If52": {
      "main": [
        [
          {
            "node": "Stop and Error35",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If53": {
      "main": [
        [
          {
            "node": "Code14",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d41": {
      "main": [
        [
          {
            "node": "If53",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog22": {
      "main": [
        [
          {
            "node": "Check create 7d41",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d42": {
      "main": [
        [
          {
            "node": "If54",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog23": {
      "main": [
        [
          {
            "node": "Check create 7d42",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If104": {
      "main": [
        [
          {
            "node": "Check Leave halfday5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d43": {
      "main": [
        [
          {
            "node": "If104",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog24": {
      "main": [
        [
          {
            "node": "Check create 7d43",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code13": {
      "main": [
        [
          {
            "node": "If105",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point18": {
      "main": [
        [
          {
            "node": "If106",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found32": {
      "main": [
        [
          {
            "node": "Cloodo Point18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point55": {
      "main": [
        [
          {
            "node": "IF not found32",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If106": {
      "main": [
        [
          {
            "node": "Stop and Error36",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code14": {
      "main": [
        [
          {
            "node": "If107",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point19": {
      "main": [
        [
          {
            "node": "If108",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found33": {
      "main": [
        [
          {
            "node": "Cloodo Point19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point56": {
      "main": [
        [
          {
            "node": "IF not found33",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If108": {
      "main": [
        [
          {
            "node": "Stop and Error37",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Switch Company1",
            "type": "main",
            "index": 0
          }
        ],
        [],
        [],
        [
          {
            "node": "Switch Company4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch Company5",
            "type": "main",
            "index": 0
          }
        ],
        [],
        [
          {
            "node": "Switch Company7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company4": {
      "main": [
        [
          {
            "node": "get Timelog4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company5": {
      "main": [
        [
          {
            "node": "get Timelog7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point12": {
      "main": [
        [
          {
            "node": "If49",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found14": {
      "main": [
        [
          {
            "node": "Cloodo Point12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point28": {
      "main": [
        [
          {
            "node": "IF not found14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If49": {
      "main": [
        [
          {
            "node": "Stop and Error17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If50": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d38": {
      "main": [
        [
          {
            "node": "If50",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog4": {
      "main": [
        [
          {
            "node": "Check create 7d38",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d39": {
      "main": [
        [
          {
            "node": "If51",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog5": {
      "main": [
        [
          {
            "node": "Check create 7d39",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If64": {
      "main": [
        [
          {
            "node": "Check Leave halfday3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d40": {
      "main": [
        [
          {
            "node": "If64",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog6": {
      "main": [
        [
          {
            "node": "Check create 7d40",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "If65",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point13": {
      "main": [
        [
          {
            "node": "If66",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found15": {
      "main": [
        [
          {
            "node": "Cloodo Point13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point29": {
      "main": [
        [
          {
            "node": "IF not found15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If66": {
      "main": [
        [
          {
            "node": "Stop and Error18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "If67",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point14": {
      "main": [
        [
          {
            "node": "If68",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found16": {
      "main": [
        [
          {
            "node": "Cloodo Point14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point30": {
      "main": [
        [
          {
            "node": "IF not found16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If68": {
      "main": [
        [
          {
            "node": "Stop and Error19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point15": {
      "main": [
        [
          {
            "node": "If60",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found17": {
      "main": [
        [
          {
            "node": "Cloodo Point15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point31": {
      "main": [
        [
          {
            "node": "IF not found17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If60": {
      "main": [
        [
          {
            "node": "Stop and Error20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If61": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d50": {
      "main": [
        [
          {
            "node": "If61",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog7": {
      "main": [
        [
          {
            "node": "Check create 7d50",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d51": {
      "main": [
        [
          {
            "node": "If62",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog8": {
      "main": [
        [
          {
            "node": "Check create 7d51",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If69": {
      "main": [
        [
          {
            "node": "Check Leave halfday4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d52": {
      "main": [
        [
          {
            "node": "If69",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog9": {
      "main": [
        [
          {
            "node": "Check create 7d52",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "If70",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point20": {
      "main": [
        [
          {
            "node": "If71",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found18": {
      "main": [
        [
          {
            "node": "Cloodo Point20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point32": {
      "main": [
        [
          {
            "node": "IF not found18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If71": {
      "main": [
        [
          {
            "node": "Stop and Error21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "If72",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point21": {
      "main": [
        [
          {
            "node": "If73",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found19": {
      "main": [
        [
          {
            "node": "Cloodo Point21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point33": {
      "main": [
        [
          {
            "node": "IF not found19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If73": {
      "main": [
        [
          {
            "node": "Stop and Error22",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company7": {
      "main": [
        [
          {
            "node": "get Timelog13",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog14",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point27": {
      "main": [
        [
          {
            "node": "If81",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found23": {
      "main": [
        [
          {
            "node": "Cloodo Point27",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point37": {
      "main": [
        [
          {
            "node": "IF not found23",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If81": {
      "main": [
        [
          {
            "node": "Stop and Error26",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If82": {
      "main": [
        [
          {
            "node": "Code8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d56": {
      "main": [
        [
          {
            "node": "If82",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog13": {
      "main": [
        [
          {
            "node": "Check create 7d56",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d57": {
      "main": [
        [
          {
            "node": "If83",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog14": {
      "main": [
        [
          {
            "node": "Check create 7d57",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If84": {
      "main": [
        [
          {
            "node": "Check Leave halfday2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d58": {
      "main": [
        [
          {
            "node": "If84",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog15": {
      "main": [
        [
          {
            "node": "Check create 7d58",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code7": {
      "main": [
        [
          {
            "node": "If85",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point38": {
      "main": [
        [
          {
            "node": "If86",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found24": {
      "main": [
        [
          {
            "node": "Cloodo Point38",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point39": {
      "main": [
        [
          {
            "node": "IF not found24",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If86": {
      "main": [
        [
          {
            "node": "Stop and Error27",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code8": {
      "main": [
        [
          {
            "node": "If87",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point40": {
      "main": [
        [
          {
            "node": "If88",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found25": {
      "main": [
        [
          {
            "node": "Cloodo Point40",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point41": {
      "main": [
        [
          {
            "node": "IF not found25",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If88": {
      "main": [
        [
          {
            "node": "Stop and Error28",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company": {
      "main": [
        [
          {
            "node": "Stop and Error",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop and Error1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog25",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove employee leave": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Switch Company",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch Company9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company9": {
      "main": [
        [
          {
            "node": "Stop and Error2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop and Error3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog27",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point24": {
      "main": [
        [
          {
            "node": "If55",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found34": {
      "main": [
        [
          {
            "node": "Cloodo Point24",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point57": {
      "main": [
        [
          {
            "node": "IF not found34",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If55": {
      "main": [
        [
          {
            "node": "Stop and Error38",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If109": {
      "main": [
        [
          {
            "node": "Check Leave halfday1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d44": {
      "main": [
        [
          {
            "node": "If109",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog25": {
      "main": [
        [
          {
            "node": "Check create 7d44",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code15": {
      "main": [
        [
          {
            "node": "If110",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If110": {
      "main": [
        [
          {
            "node": "Cloodo Point58",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point25": {
      "main": [
        [
          {
            "node": "If111",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found35": {
      "main": [
        [
          {
            "node": "Cloodo Point25",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point58": {
      "main": [
        [
          {
            "node": "IF not found35",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If111": {
      "main": [
        [
          {
            "node": "Stop and Error39",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point59": {
      "main": [
        [
          {
            "node": "If112",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found36": {
      "main": [
        [
          {
            "node": "Cloodo Point59",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point60": {
      "main": [
        [
          {
            "node": "IF not found36",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If112": {
      "main": [
        [
          {
            "node": "Stop and Error40",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If114": {
      "main": [
        [
          {
            "node": "Check Leave halfday",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d46": {
      "main": [
        [
          {
            "node": "If114",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog27": {
      "main": [
        [
          {
            "node": "Check create 7d46",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code16": {
      "main": [
        [
          {
            "node": "If115",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If115": {
      "main": [
        [
          {
            "node": "Cloodo Point62",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point61": {
      "main": [
        [
          {
            "node": "If116",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found37": {
      "main": [
        [
          {
            "node": "Cloodo Point61",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point62": {
      "main": [
        [
          {
            "node": "IF not found37",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If116": {
      "main": [
        [
          {
            "node": "Stop and Error41",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Cloodo Point60",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave halfday": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Code16",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code17": {
      "main": [
        [
          {
            "node": "If117",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If117": {
      "main": [
        [
          {
            "node": "Cloodo Point64",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point63": {
      "main": [
        [
          {
            "node": "If118",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found38": {
      "main": [
        [
          {
            "node": "Cloodo Point63",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point64": {
      "main": [
        [
          {
            "node": "IF not found38",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If118": {
      "main": [
        [
          {
            "node": "Stop and Error42",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single1": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Cloodo Point57",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave halfday1": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "Code15",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code18": {
      "main": [
        [
          {
            "node": "If113",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If113": {
      "main": [
        [
          {
            "node": "Cloodo Point66",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point65": {
      "main": [
        [
          {
            "node": "If119",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found39": {
      "main": [
        [
          {
            "node": "Cloodo Point65",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point66": {
      "main": [
        [
          {
            "node": "IF not found39",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If119": {
      "main": [
        [
          {
            "node": "Stop and Error43",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single2": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single3": {
      "main": [
        [
          {
            "node": "If5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Merge12",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If5": {
      "main": [
        [
          {
            "node": "Merge12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge12": {
      "main": [
        [
          {
            "node": "Cloodo Point37",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave halfday2": {
      "main": [
        [
          {
            "node": "If6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code9": {
      "main": [
        [
          {
            "node": "If89",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point": {
      "main": [
        [
          {
            "node": "If90",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found": {
      "main": [
        [
          {
            "node": "Cloodo Point",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point42": {
      "main": [
        [
          {
            "node": "IF not found",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If90": {
      "main": [
        [
          {
            "node": "Stop and Error29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If6": {
      "main": [
        [
          {
            "node": "Code7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If89": {
      "main": [
        [
          {
            "node": "Cloodo Point42",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If85": {
      "main": [
        [
          {
            "node": "Cloodo Point39",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single4": {
      "main": [
        [
          {
            "node": "If7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single5": {
      "main": [
        [
          {
            "node": "If8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If8": {
      "main": [
        [
          {
            "node": "Merge9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If7": {
      "main": [
        [
          {
            "node": "Merge9",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Check Leave halfday3": {
      "main": [
        [
          {
            "node": "If9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If9": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If65": {
      "main": [
        [
          {
            "node": "Cloodo Point29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code5": {
      "main": [
        [
          {
            "node": "If74",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If74": {
      "main": [
        [
          {
            "node": "Cloodo Point34",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point16": {
      "main": [
        [
          {
            "node": "If75",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found20": {
      "main": [
        [
          {
            "node": "Cloodo Point16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point34": {
      "main": [
        [
          {
            "node": "IF not found20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If75": {
      "main": [
        [
          {
            "node": "Stop and Error23",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single6": {
      "main": [
        [
          {
            "node": "If10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single7": {
      "main": [
        [
          {
            "node": "If11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If11": {
      "main": [
        [
          {
            "node": "Merge10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If10": {
      "main": [
        [
          {
            "node": "Merge10",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Check Leave halfday4": {
      "main": [
        [
          {
            "node": "If12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If12": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "If76",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point1": {
      "main": [
        [
          {
            "node": "If91",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found1": {
      "main": [
        [
          {
            "node": "Cloodo Point1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point43": {
      "main": [
        [
          {
            "node": "IF not found1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If91": {
      "main": [
        [
          {
            "node": "Stop and Error30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge10": {
      "main": [
        [
          {
            "node": "Cloodo Point31",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge9": {
      "main": [
        [
          {
            "node": "Cloodo Point28",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If70": {
      "main": [
        [
          {
            "node": "Cloodo Point32",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If76": {
      "main": [
        [
          {
            "node": "Cloodo Point43",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single8": {
      "main": [
        [
          {
            "node": "If13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single9": {
      "main": [
        [
          {
            "node": "If14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If13": {
      "main": [
        [
          {
            "node": "Merge15",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If14": {
      "main": [
        [
          {
            "node": "Merge15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave halfday5": {
      "main": [
        [
          {
            "node": "If15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If15": {
      "main": [
        [
          {
            "node": "Code13",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code19": {
      "main": [
        [
          {
            "node": "If120",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point22": {
      "main": [
        [
          {
            "node": "If121",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found40": {
      "main": [
        [
          {
            "node": "Cloodo Point22",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point67": {
      "main": [
        [
          {
            "node": "IF not found40",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If121": {
      "main": [
        [
          {
            "node": "Stop and Error44",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If120": {
      "main": [
        [
          {
            "node": "Cloodo Point67",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If105": {
      "main": [
        [
          {
            "node": "Cloodo Point55",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get All Department",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get All Department1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get All Department2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "Get All Department",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get All Department1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get All Department2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company1": {
      "main": [
        [
          {
            "node": "get Timelog22",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog23",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog24",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge15": {
      "main": [
        [
          {
            "node": "Cloodo Point54",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "73189379-04d6-4bfd-8044-e30495774ff4",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "3909475c03ca6926b6e6edc6a6f06c1feb448ce7ac700d69b17002085d9011f8"
  },
  "id": "xjvv57yeaeeeqC19",
  "tags": []
}