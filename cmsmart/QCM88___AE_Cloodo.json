{
  "name": "QCM88 - AE Cloodo",
  "nodes": [
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/departments",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "limit",
              "value": "25"
            }
          ]
        },
        "options": {}
      },
      "id": "771706bb-24c1-4295-88ef-47b2374d8fc3",
      "name": "Get All Department",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1560,
        280
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/departments",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "limit",
              "value": "25"
            }
          ]
        },
        "options": {}
      },
      "id": "4915437d-76e0-4031-8f63-c1aa401fe523",
      "name": "Get All Department1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1560,
        480
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/departments",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "limit",
              "value": "25"
            }
          ]
        },
        "options": {}
      },
      "id": "d97fba17-1909-4936-bec3-5e1c4918e7d1",
      "name": "Get All Department2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1580,
        700
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "numberInputs": 3
      },
      "id": "2cbb77e4-a740-40e7-9aac-5c7be434d916",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -1060,
        480
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "76998f51-f76c-4709-8edf-f214dab4b65b",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -840,
        480
      ]
    },
    {
      "parameters": {
        "jsCode": "const allDepartment = $input.all()[0]?.json?.data[2]\nconst member = allDepartment?.member\n  \n\nreturn{\n  name: allDepartment?.name,\n  member: member\n}\n"
      },
      "id": "d4767b56-4ae7-4511-a8f2-5e355caf8da0",
      "name": "GetMember",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1340,
        280
      ]
    },
    {
      "parameters": {
        "jsCode": "const allDepartment = $input.all()[0]?.json?.data[2]\nconst member = allDepartment?.member\n                     \n\nreturn{\n  name: allDepartment?.name,\n  member: member\n}\n"
      },
      "id": "45c80e29-4aa9-4289-9987-1a72c681f4f9",
      "name": "GetMember1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1340,
        480
      ]
    },
    {
      "parameters": {
        "jsCode": "const allDepartment = $input.all()[0]?.json?.data[2]\nconst member = allDepartment?.member\n\nreturn{\n  name: allDepartment?.name,\n  member: member\n}\n"
      },
      "id": "2b4e88e7-2df4-432d-9f4e-3455f55ddf4c",
      "name": "GetMember2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1340,
        700
      ]
    },
    {
      "parameters": {
        "jsCode": "let listMembers = []\n\n// Lấy các thành viên của ba công ty\nconst MemberCms = $input.all()[0]?.json?.data[0]?.member;\nconst MemberPrintCart = $input.all()[0]?.json?.data[1]?.member;\nconst MemberCloodo = $input.all()[0]?.json?.data[2]?.member;\n\n// Thêm tên công ty vào các thành viên\nMemberCms.forEach(member => {\n  member.companyName = 'CmsMart';// Tên công ty cho MemberCms\n  listMembers.push(member)\n});\n\nMemberPrintCart.forEach(member => {\n  member.companyName = 'PrintCart';  // Tên công ty cho MemberPrintCart\n  listMembers.push(member)\n});\n\nMemberCloodo.forEach(member => {\n  member.companyName = 'Cloodo';  // Tên công ty cho MemberCloodo\n  listMembers.push(member)\n});\n\n// Đếm số lượng công ty cho mỗi người theo 'name'\nconst nameCountMap = {};\n\n// Duyệt qua danh sách các thành viên và đếm số lượng công ty theo tên\nlistMembers.forEach(member => {\n  const name = member.name;\n\n  // Nếu tên chưa có trong map, khởi tạo giá trị với 0\n  if (!nameCountMap[name]) {\n    nameCountMap[name] = new Set();  // Sử dụng Set để đảm bảo mỗi công ty chỉ được đếm 1 lần\n  }\n\n  // Thêm tên công ty vào Set để đếm duy nhất\n  nameCountMap[name].add(member.companyName);\n});\n\n// Thêm số lượng công ty vào từng thành viên\nlistMembers.forEach(member => {\n  const name = member.name;\n  member.countCompany = nameCountMap[name].size; // Số lượng công ty mà thành viên tham gia\n});\n\n// Trả về các thành viên đã được cập nhật\nreturn listMembers;"
      },
      "id": "2461af06-1ef7-46ee-8075-2eba4bde02e0",
      "name": "CompanyName",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -660,
        480
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.countCompany }}",
                    "rightValue": 1,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "1"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ecaeec34-6fa8-41da-aeb6-827e62de92b3",
                    "leftValue": "={{ $json.countCompany }}",
                    "rightValue": 2,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "2"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8d73594f-9a0b-4b50-b347-ac7eb50f0f13",
                    "leftValue": "={{ $json.countCompany }}",
                    "rightValue": 3,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "3"
            }
          ]
        },
        "options": {}
      },
      "id": "84518694-8d13-4ed1-8bb1-31c48bf47ee1",
      "name": "Count Company",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -420,
        480
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6e41004a-24bd-4475-9837-4c1b5e68d983",
              "leftValue": "={{ $json.name }}",
              "rightValue": "Nguyen Duc Phat",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "2a6f6071-2edd-4577-9991-a2a258340c63",
      "name": "Remove employee leave1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2440,
        480
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Vu Van Minh",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Vu Van Minh"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "dbe7be1f-5b60-42df-bca3-3dd1ab846db7",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Vo Tuan Vu",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Vo Tuan Vu"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "3a1ebf8a-3f5c-44e3-b8eb-22452c6d8a32",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Nguyen Ngoc Huy",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Nguyen Ngoc Huy"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "602b04f8-5e81-4b3d-8537-8435fd5ca9f0",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Pham Ngoc Huy",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Pham Ngoc Huy"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8f2d3c75-6e15-44dd-955f-2462cea6fcf8",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Do Hoang Nam",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Do Hoang Nam"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5ddab4fb-4552-442c-b985-ac486038e5f0",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Hoang Anh Dung",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Hoang Anh Dung"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e4ebcd21-3054-433a-a04e-532ba93b1e19",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Nguyen Duc Canh",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Nguyen Duc Canh"
            }
          ]
        },
        "options": {}
      },
      "id": "6c9f6605-173d-4ab0-aec6-cc5dc4602538",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2900,
        420
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "94587968-5ab0-4b26-9d84-2cf1ff802cc6",
      "name": "Switch Company1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3940,
        -900
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If104').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If104').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "981f8f4d-613c-4063-89fd-c8fe6ca25b88",
      "name": "Cloodo Point17",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        6520,
        -580
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "0e96b147-d38d-4ab9-9353-007411437f4e",
      "name": "IF not found31",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        6280,
        -560
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $('If104').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "72b63729-5f11-4f99-a06d-eb09371b2910",
      "name": "Cloodo Point54",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        6080,
        -560
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "12120fcd-55a5-4b39-865c-4d2c80184a19",
      "name": "Stop and Error35",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        6940,
        -600
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "04cb1e21-a16a-4c34-911a-4e44ddaaef61",
      "name": "If52",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6680,
        -580
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "986ad4f6-ac1d-4428-8694-3bb2f21c17ff",
      "name": "If53",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4840,
        -1100
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "056f3de9-b458-48f6-881a-18c8ecf52b60",
      "name": "Check create 7d41",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4600,
        -1100
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "53119805-e7a1-4e8a-ba3a-73f89590c0bb",
      "name": "get Timelog22",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4380,
        -1100
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "c3eb867b-5445-466f-a885-f75c8ab60a71",
      "name": "If54",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4840,
        -880
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "5f9b7bfe-2a34-4951-926c-ad65d8d7a326",
      "name": "Check create 7d42",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4600,
        -880
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "4fbfaafb-36c3-4d22-96c5-7497e8403f56",
      "name": "get Timelog23",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4380,
        -880
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "27556bab-230a-466a-bbee-344e475f0658",
      "name": "If104",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4820,
        -660
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "49d5b07d-653c-4b31-b41e-1761cd6a823b",
      "name": "Check create 7d43",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4580,
        -660
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "9fa25333-c2e1-4813-ab2f-9dfc0982863e",
      "name": "get Timelog24",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4360,
        -660
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If104').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 360, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "6d5f7f4b-52c5-4b49-97c6-6d0d6391c091",
      "name": "Code13",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5760,
        -1200
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "b715a9c4-60ab-40b1-9123-279ced21bdff",
      "name": "If105",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5960,
        -1200
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If105').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If105').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "878d6933-3c4d-4d8f-a8e8-d7eb76e83a97",
      "name": "Cloodo Point18",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        6680,
        -1260
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "33cb225f-18e7-4e1a-b47c-24b04098864f",
      "name": "IF not found32",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        6440,
        -1240
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "6c785afa-09c9-4a87-94e4-0d28613ae58e",
      "name": "Cloodo Point55",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        6260,
        -1240
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "537da131-6e46-4fa3-ba61-7f862d9d39ab",
      "name": "Stop and Error36",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        7180,
        -1280
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5c72ae51-6678-4263-a71e-580f6f325f92",
      "name": "If106",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6840,
        -1260
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $input.all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 240, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "ed7e7864-efaf-48c9-8e8e-534e0edc7cb7",
      "name": "Code14",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5320,
        -1620
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "2940860b-9cb2-4878-9ab2-7bc3b4db0289",
      "name": "If107",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5580,
        -1620
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If107').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If107').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "a2048111-afc1-48f0-a593-b2777727ab25",
      "name": "Cloodo Point19",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        6260,
        -1660
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "42b67a0e-f3fe-4b5f-8e03-7d872a853d27",
      "name": "IF not found33",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        6020,
        -1640
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "b7805b5e-0ba6-4408-a959-ac7c89a88a6a",
      "name": "Cloodo Point56",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        5820,
        -1640
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "b7000bc3-63cc-49db-b05d-54ad063612aa",
      "name": "Stop and Error37",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        6680,
        -1680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "1b49da9f-a15d-4863-9c5c-691f0298f284",
      "name": "If108",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6420,
        -1660
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "useDataOfInput": 2
      },
      "id": "dd2f2596-2587-40ed-9687-9ff3e93c70e5",
      "name": "Merge15",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        5820,
        -560
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "f391f5a4-1528-4855-8d2d-7e9dace17fd4",
      "name": "Switch Company4",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3680,
        320
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "73e8978d-9cbc-4781-9920-ad36a15a4518",
      "name": "Switch Company5",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3940,
        1680
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If64').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If64').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "3715cbf9-2569-4f68-a84d-08da258b3991",
      "name": "Cloodo Point12",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        6340,
        760
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "aeb0e6cd-bfb3-4f4c-969b-15d146930871",
      "name": "IF not found14",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        6100,
        780
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $('If64').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "aa2b2f8d-b89b-4aa2-9560-5c15278eec03",
      "name": "Cloodo Point28",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        5900,
        780
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "ba8e0cb9-0ae5-4481-9f78-ec78088215e9",
      "name": "Stop and Error17",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        6760,
        740
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "53fa5aed-1ef6-460c-aabd-dea3efdc79e2",
      "name": "If49",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6500,
        760
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "381d0bf5-de29-4e05-871a-1807399f13a4",
      "name": "If50",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4540,
        180
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "126f47e8-79b0-4d8f-a23e-46148adaf474",
      "name": "Check create 7d38",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4300,
        180
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "fa0d1563-8625-4b78-9789-401c7c81a1c0",
      "name": "get Timelog4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4080,
        180
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "696b2dba-ed4c-4984-8d00-a523587bfd76",
      "name": "If51",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4540,
        400
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "42ace144-c8c0-4cf4-a099-e04c9c41b6fe",
      "name": "Check create 7d39",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4300,
        400
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "3cf0e717-5c8b-47c7-aef6-3869ea8021a6",
      "name": "get Timelog5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4080,
        400
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "0caca9e6-8e67-4626-8193-a40e09b51935",
      "name": "If64",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4520,
        620
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "6d17395e-c36d-4739-9f13-b92c10ad2e26",
      "name": "Check create 7d40",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4280,
        620
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "d762edfc-4b7c-47a1-bda9-32f582471681",
      "name": "get Timelog6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4060,
        620
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If64').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 360, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "51a7cfe0-7b8a-4dee-9318-080835f81fa8",
      "name": "Code2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5660,
        180
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "1b1a1b7b-a53b-4d39-9561-2d1609fcc5d0",
      "name": "If65",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5920,
        180
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If65').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If65').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "3a962cfb-9ba5-47f2-bbd2-99f44515a1f8",
      "name": "Cloodo Point13",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        6600,
        140
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "c93a37bc-b701-4a07-9436-9390f951831d",
      "name": "IF not found15",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        6360,
        160
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "5c1a4c0e-e1bf-4b91-9eaf-48c7c44326fa",
      "name": "Cloodo Point29",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        6200,
        160
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "1b8393ab-b3b1-4365-aa37-f66150fa18de",
      "name": "Stop and Error18",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        7020,
        120
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6bbb8251-e54e-4d4c-ad37-0a3a1dd945f3",
      "name": "If66",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6760,
        140
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $input.all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 240, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "f3d4affb-328b-4e29-a394-60fb716afccf",
      "name": "Code3",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5000,
        -40
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "93f7d1b2-ed76-4bbf-94c2-951a77b72f19",
      "name": "If67",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5260,
        -40
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If67').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If67').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "bd10a6bc-935b-4cd2-910a-3e0c36c86c7c",
      "name": "Cloodo Point14",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        5940,
        -80
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "70f3abe7-97ac-4a47-be15-a0cbc64e456e",
      "name": "IF not found16",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        5700,
        -60
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "2395bb78-6a5a-40da-b244-e2baa661766f",
      "name": "Cloodo Point30",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        5500,
        -60
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "7157a772-f5fe-4726-bc2a-5b8ee8c168a7",
      "name": "Stop and Error19",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        6360,
        -100
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b8792ee7-cde0-4787-9792-e7cb6d6c3b09",
      "name": "If68",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6100,
        -80
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "useDataOfInput": 2
      },
      "id": "473d7e42-09d7-4cc7-907e-f7221cb06ec1",
      "name": "Merge9",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        5520,
        780
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If69').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If69').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "da3b0f39-1e34-4896-8e15-b753b1321b28",
      "name": "Cloodo Point15",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        6940,
        1920
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "250447ec-8792-439c-af83-01751cf2cdac",
      "name": "IF not found17",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        6700,
        1940
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $('If69').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "ba718308-5797-4691-b2f1-1a8e874583de",
      "name": "Cloodo Point31",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        6500,
        1940
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "7d8491a2-6e32-4a06-a995-9878b84ac68d",
      "name": "Stop and Error20",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        7360,
        1900
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "91d56237-33f9-44f8-b104-f8293eeaa00e",
      "name": "If60",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7100,
        1920
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "e61520c1-f09c-4065-b95b-242c0b4ba92e",
      "name": "If61",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4980,
        1440
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "843fc8a2-7c6a-4e3a-ac32-5c4f5889afb3",
      "name": "Check create 7d50",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4740,
        1440
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "1493b90a-e596-46f5-a756-2b04aa8e21c9",
      "name": "get Timelog7",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4520,
        1440
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "7dea03be-bc95-42c3-93ba-0c0fdf8bae9f",
      "name": "If62",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4980,
        1660
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "002942a3-406b-47e5-ac7e-55b35a6d2770",
      "name": "Check create 7d51",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4740,
        1660
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "d2f677cb-e2f0-4fbf-b9f8-6646ee1cd4bd",
      "name": "get Timelog8",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4520,
        1660
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "67f6d620-6d26-47d9-b0c1-ffc457d15913",
      "name": "If69",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4960,
        1880
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "b24ebd7e-71fe-4a7c-8389-e6e0b9e07c19",
      "name": "Check create 7d52",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4720,
        1880
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "62fbcefa-fd31-4b90-a92e-621f92750221",
      "name": "get Timelog9",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4500,
        1880
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If69').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 360, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "854b286d-1482-4005-b515-b4b0d6d15f67",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5940,
        1420
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "ac248be5-908f-46c9-87c2-77b9c9fd9d6a",
      "name": "If70",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6200,
        1420
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If70').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If70').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "8c6326ec-1db1-4483-ab24-990836f6826a",
      "name": "Cloodo Point20",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        6880,
        1380
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "aa288ec6-d6bd-44cb-a563-28db6dba7cc7",
      "name": "IF not found18",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        6640,
        1400
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "ee187adf-336c-472c-825b-334e6a547980",
      "name": "Cloodo Point32",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        6480,
        1400
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "6db4a45e-74bc-467c-9a10-723cabdca89f",
      "name": "Stop and Error21",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        7300,
        1360
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "16b94576-aa53-4655-a86f-ab80dcf670f3",
      "name": "If71",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7040,
        1380
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $input.all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 240, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "ec0390f1-58a8-4871-8479-768cb9f86cf4",
      "name": "Code4",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5720,
        1180
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "17e06084-17f4-4786-b2da-d17ef350d55a",
      "name": "If72",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5980,
        1180
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If72').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If72').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "9e3fad6f-7045-4e66-b768-5e7bb375f304",
      "name": "Cloodo Point21",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        6660,
        1140
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "fc8fb430-97f6-4c0d-b847-16e702e4a5df",
      "name": "IF not found19",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        6420,
        1160
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "ee0fa3ef-0ba3-40a1-ba81-0f90bf671989",
      "name": "Cloodo Point33",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        6220,
        1160
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "86628ec4-e24b-456e-8057-73e55e4f0505",
      "name": "Stop and Error22",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        7080,
        1120
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "bb7bba5c-219f-4625-8001-7a17eebb7b31",
      "name": "If73",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6820,
        1140
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "useDataOfInput": 2
      },
      "id": "11fc9f27-4211-462a-a0d2-d4f97533b056",
      "name": "Merge10",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        6100,
        1960
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "24c959da-1a5b-4210-9be2-43a90f60eb8f",
      "name": "Switch Company7",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3660,
        2740
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If84').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If84').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "2e165110-1b9d-49d1-95b7-9db15b4088fa",
      "name": "Cloodo Point27",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        6720,
        3280
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "c0d6cde7-6215-4e8e-87ce-a312bf4a29e9",
      "name": "IF not found23",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        6480,
        3300
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $('If84').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "8fd11991-0a82-446a-8833-7172c494277c",
      "name": "Cloodo Point37",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        6280,
        3300
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "8a12be8c-6068-41b9-8ff0-8772c951355d",
      "name": "Stop and Error26",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        7140,
        3260
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "21c6fede-9d79-4f2d-936f-666e50cfc945",
      "name": "If81",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6880,
        3280
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "40b72339-2d65-4242-bfef-972063fcae74",
      "name": "If82",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4700,
        2620
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "4e3db6dd-cecc-476b-8484-eb63ec8f7e61",
      "name": "Check create 7d56",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4460,
        2620
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "ac60353c-a9d1-480f-9ce6-9e11986d25db",
      "name": "get Timelog13",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4240,
        2620
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "b4208906-f5ec-41ed-87cc-bc8dfd4d045a",
      "name": "If83",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4700,
        2840
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "cf1edef8-7429-4038-9431-5cdbe6f0ff8d",
      "name": "Check create 7d57",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4460,
        2840
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "73309e2f-9348-489d-998b-17eb3115edf5",
      "name": "get Timelog14",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4240,
        2840
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "17f4ca2a-acac-43fd-b3e5-b7ba39fa58c4",
      "name": "If84",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4680,
        3060
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "2a50a879-3f94-439b-8ea0-ed239a99fa2a",
      "name": "Check create 7d58",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4440,
        3060
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "c5fa777e-e023-4dc0-9e91-29e2eefbee17",
      "name": "get Timelog15",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4220,
        3060
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If84').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 360, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "5a7ff91e-07f8-4ebc-b768-16543e93310f",
      "name": "Code7",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6020,
        2640
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "68bd149f-2f71-4037-98ad-8ab975e7f95c",
      "name": "If85",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6280,
        2640
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If85').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If85').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "b0439cab-7d40-4f11-bab2-4462c42b9aa2",
      "name": "Cloodo Point38",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        6940,
        2600
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "449599e0-5a39-4aec-821f-c874683314e0",
      "name": "IF not found24",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        6700,
        2620
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "eda76fbe-5b36-43d8-ab22-52c8e3172583",
      "name": "Cloodo Point39",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        6540,
        2620
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "1e264ede-61e6-4724-82f9-1adf9becbb0a",
      "name": "Stop and Error27",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        7360,
        2580
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "8c47e78c-cd30-48d6-afae-90b2deefc799",
      "name": "If86",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7100,
        2600
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $input.all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 240, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "4f578e37-73ae-4646-b773-44c4e3efb278",
      "name": "Code8",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5520,
        2400
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "703f60fb-2c23-4bc0-8e50-39ad9ce052d6",
      "name": "If87",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5780,
        2400
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If87').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If87').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "8cec6b16-27dc-4748-9a01-1d066b618f46",
      "name": "Cloodo Point40",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        6480,
        2360
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "e396c2e5-fc7a-41af-a3e0-e7cbad6f2a18",
      "name": "IF not found25",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        6240,
        2380
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "878ed5e5-20f5-4429-88a2-1a4877407a8b",
      "name": "Cloodo Point41",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        6040,
        2380
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "50f852ef-1139-44df-baa5-58625b0aa3b3",
      "name": "Stop and Error28",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        6900,
        2340
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "275f475b-891d-43d6-8108-907b8cf8f97d",
      "name": "If88",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6640,
        2360
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "e316141c-e2f1-48ec-b853-f4485afdb0dc",
      "name": "Switch Company",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        480,
        -1180
      ]
    },
    {
      "parameters": {
        "errorMessage": "emplooyee Cms"
      },
      "id": "e5959fac-36f8-4307-8499-8f7f49c3eb62",
      "name": "Stop and Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        560,
        -1500
      ]
    },
    {
      "parameters": {
        "errorMessage": "emplooyee Printcart"
      },
      "id": "95513ace-3abb-49b6-b96b-f3b856f27188",
      "name": "Stop and Error1",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        680,
        -1340
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6e41004a-24bd-4475-9837-4c1b5e68d983",
              "leftValue": "={{ $json.name }}",
              "rightValue": "Vu Van Tuyen",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "a781e98a-3884-48fc-8383-6c03e33c4fc4",
              "leftValue": "={{ $json.name }}",
              "rightValue": "Nguyen Thanh Tung",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "ec59de69-65ad-4239-b136-9524f17b3035",
      "name": "Remove employee leave",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -80,
        -20
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Vu Van Tuyen",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Vu Van Tuyen"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "adbce1c4-d26c-475c-94fe-bc372e7c2f4d",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Nguyen Thanh Tung",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Nguyen Thanh Tung"
            }
          ]
        },
        "options": {}
      },
      "id": "964f75d5-b9ee-42d9-afc2-09d16dc484b3",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        240,
        -460
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "734043af-b083-4a2d-8b6f-2fb57617fb58",
      "name": "Switch Company9",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        440,
        -180
      ]
    },
    {
      "parameters": {
        "errorMessage": "emplooyee Cms"
      },
      "id": "e6a6b65f-c0fb-4680-ae43-53e785c81eb8",
      "name": "Stop and Error2",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        520,
        -500
      ]
    },
    {
      "parameters": {
        "errorMessage": "emplooyee Printcart"
      },
      "id": "ed2d9a88-0f60-43c8-a890-5e98542696d8",
      "name": "Stop and Error3",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        640,
        -340
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('Merge16').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('Merge16').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "655a5e7e-6458-41c2-bf20-f78ba92e9f21",
      "name": "Cloodo Point24",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        2560,
        -1020
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "5c073b45-3bc5-4f83-b162-5bfab1354fc6",
      "name": "IF not found34",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2320,
        -1000
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "e529d859-e8b8-44d7-aada-e9d93e6262a1",
      "name": "Cloodo Point57",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        2120,
        -1000
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "8e21f4a6-d405-4370-aeb9-92deb864d7de",
      "name": "Stop and Error38",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        2980,
        -1040
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3c2e1686-a546-4689-823f-4da33a7d7a7a",
      "name": "If55",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2740,
        -1000
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "4d91b589-6b71-4fb9-ab5a-1ac61725eacc",
      "name": "If109",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1280,
        -1140
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "828148d6-99cf-4b1d-bb7c-3babb1cb4e05",
      "name": "Check create 7d44",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1040,
        -1140
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "f893ed8b-fcd9-4171-8f98-f1289e38418e",
      "name": "get Timelog25",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        820,
        -1140
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If109').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 360, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "28e738df-85eb-4af4-836c-fd7054f88081",
      "name": "Code15",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2080,
        -1460
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "104ed43b-da1d-4832-b2c3-386e47e3920a",
      "name": "If110",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2240,
        -1460
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If110').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If110').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "2104e233-ee66-4fc8-8a9b-b0c2c297218a",
      "name": "Cloodo Point25",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        2860,
        -1500
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "8c50a4f6-6a8b-45bf-ba20-5fb067da45ec",
      "name": "IF not found35",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2620,
        -1480
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "8c4e587d-59ae-446c-99e3-73850ed4ea5c",
      "name": "Cloodo Point58",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        2460,
        -1480
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "d53f107d-9546-491f-accb-6d2b590eb05b",
      "name": "Stop and Error39",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        3280,
        -1520
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f779c9f6-176f-4a47-a381-ff80eab86ff8",
      "name": "If111",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3020,
        -1500
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If114').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If114').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "9e716802-6c1a-48dd-8d9e-974ccd424591",
      "name": "Cloodo Point59",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        2360,
        -20
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "489cffd5-eecc-4c41-be79-af5606ad4600",
      "name": "IF not found36",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2120,
        0
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $('If114').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "30e3d921-2c35-4753-a7d7-2a9859704192",
      "name": "Cloodo Point60",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        1920,
        0
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "7b76bf67-6acc-4ab9-b68b-c0d11918a91a",
      "name": "Stop and Error40",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        2780,
        -40
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "465496d9-0876-4586-8a07-e69e97efac4c",
      "name": "If112",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2520,
        -20
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "ff8ce597-29ec-47fe-99d5-ed02df487013",
      "name": "If114",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1140,
        -100
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "dc954739-12ef-4086-b05e-f683d14b8488",
      "name": "Check create 7d46",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        900,
        -100
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "fec497db-6b62-4b8e-93a1-3273e871ce2f",
      "name": "get Timelog27",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        680,
        -100
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If114').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 240, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "a039f575-dfdd-4495-8358-e823ab5240ad",
      "name": "Code16",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1820,
        -480
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "35f38f56-934b-43e7-8e6c-a7aa7ec4e107",
      "name": "If115",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2020,
        -480
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If115').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If115').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "35aba90b-52a2-4655-b29e-14bc28e05702",
      "name": "Cloodo Point61",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        2700,
        -520
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "0130f698-d1a9-4078-b84c-097dcb212e1f",
      "name": "IF not found37",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2460,
        -500
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "b52ebf7a-f6e2-4c6e-9844-c30ea53cb5f6",
      "name": "Cloodo Point62",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        2300,
        -500
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "af1c9a98-64f1-4b4a-8ffb-c8ab265b612a",
      "name": "Stop and Error41",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        3120,
        -540
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "629d3bf7-0580-417c-a192-22fc3013e4e9",
      "name": "If116",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2860,
        -520
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "d14c44db-f3e7-47c1-a05f-887209c19b67",
      "name": "Check Leave Single",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1400,
        20
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "1380ea08-59c7-493f-b7bb-758b34b19ee5",
      "name": "If1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1620,
        20
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "half day"
            },
            {
              "name": "search",
              "value": "={{ $json.items[0].user.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "a0416089-8a05-4b13-9c7d-26a00d3480e4",
      "name": "Check Leave halfday",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1400,
        -220
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "aa2f9c84-0445-4959-ae05-0493cbeb9e7c",
      "name": "If2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1580,
        -220
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If114').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 180, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "645e11c0-7a48-4b02-9c8e-347c11ed3438",
      "name": "Code17",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1820,
        -240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "fc5b7795-c87e-435c-8617-424426570bd8",
      "name": "If117",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2020,
        -240
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If117').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If117').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "43d249ab-2094-4507-ba0a-c17ec52845ef",
      "name": "Cloodo Point63",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        2700,
        -280
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "97d92d8d-cd49-43b7-b1dd-2713517db16c",
      "name": "IF not found38",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2460,
        -260
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "af063a1d-a22f-4f6c-9148-eac8906fa0ab",
      "name": "Cloodo Point64",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        2300,
        -260
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "398068eb-4474-4ae0-90f8-f58a46e19566",
      "name": "Stop and Error42",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        3120,
        -300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "fcf6c10d-9fcf-4981-9536-8ccc5bbe07c9",
      "name": "If118",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2860,
        -280
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "95a67f0b-c3ac-49dc-9ff8-7665e5e6fa52",
      "name": "Check Leave Single1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1620,
        -1020
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "4f36747a-b52b-420d-9512-6ac11571b7ee",
      "name": "If3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1840,
        -1020
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "half day"
            },
            {
              "name": "search",
              "value": "={{ $json.items[0].user.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "ad4a1ef0-57c3-4528-8990-cc71a6842b69",
      "name": "Check Leave halfday1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1640,
        -1300
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "48852ff4-e080-4c7d-8d67-fe3037b48dc9",
      "name": "If4",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1820,
        -1300
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If109').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 180, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "8302c9af-f275-4e22-aedd-da27069c5318",
      "name": "Code18",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2060,
        -1200
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "f471c65c-ac49-4b26-8726-f895af863538",
      "name": "If113",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2220,
        -1200
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If113').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If113').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "665cd65a-39be-4ef9-a85f-9ced676ed27a",
      "name": "Cloodo Point65",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        2840,
        -1240
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "c0162db6-6804-4ef6-9e51-af7885f574f7",
      "name": "IF not found39",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2600,
        -1220
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "f81b8036-bc9c-46a6-9c0a-3997e0306645",
      "name": "Cloodo Point66",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        2440,
        -1220
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "a1e11aab-8a74-449a-96dd-892395431c91",
      "name": "Stop and Error43",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        3260,
        -1260
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f216dd7c-e781-461e-a272-358deb0f8292",
      "name": "If119",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3000,
        -1240
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "76bad2c1-fb94-47c7-b41c-a2bd172568c5",
      "name": "Check Leave Single2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5220,
        3380
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9d644f0c-7f7b-4116-92e0-58bdbd49781f",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5440,
        3380
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "50f32d32-7c92-4827-98a6-e840f24089e9",
      "name": "Check Leave Single3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5220,
        3120
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "59207794-e9e5-4a3a-9a95-b091beeb985d",
      "name": "If5",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5440,
        3120
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "useDataOfInput": 2
      },
      "id": "6883806f-8c66-4435-bceb-0f6615b257b8",
      "name": "Merge12",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        6000,
        3300
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "half day"
            },
            {
              "name": "search",
              "value": "={{ $json.items[0].user.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "2f0ceeec-4bd4-48a0-b804-6b3e6b1caf25",
      "name": "Check Leave halfday2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5440,
        2780
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9cf6b9c3-1672-4ab4-9b03-4782562aad83",
      "name": "If6",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5620,
        2780
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If84').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 180, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "0537682f-5b12-4727-8121-17435defca43",
      "name": "Code9",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6040,
        2880
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "1835fcb7-c00c-4096-94d8-53f1216dd882",
      "name": "If89",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6300,
        2880
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If89').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If89').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "350f4a3e-30ee-4506-b203-1ed7b4785468",
      "name": "Cloodo Point",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        6960,
        2840
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "4f49fa37-e6ce-4afe-827d-97b2bc22294e",
      "name": "IF not found",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        6720,
        2860
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "d6adab74-4838-4edc-9b0e-36d8ece339a2",
      "name": "Cloodo Point42",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        6560,
        2860
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "ba165899-34b5-4090-9927-41ec07c6f0f4",
      "name": "Stop and Error29",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        7380,
        2820
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f91650bc-08ce-4c15-af5e-561deab15c1e",
      "name": "If90",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7120,
        2840
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "3e0b5b2b-9cce-4d63-a46f-fe8d36783ad3",
      "name": "Check Leave Single4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4920,
        900
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a6a3fe85-7658-4cab-9beb-fa3615ad3cf8",
      "name": "If7",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5140,
        900
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "ad6299c5-cfcf-4923-ae77-1f20cda70518",
      "name": "Check Leave Single5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4920,
        640
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "89585468-0c0c-4ac2-892c-4684aa42a826",
      "name": "If8",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5140,
        640
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "half day"
            },
            {
              "name": "search",
              "value": "={{ $json.items[0].user.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "9f0c4e98-5111-4610-9792-187574c95dd5",
      "name": "Check Leave halfday3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5100,
        360
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7fd66aa0-5a3a-4d6b-ae11-086958520339",
      "name": "If9",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5280,
        360
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If64').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 180, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "cfa717ea-ec4e-4998-912b-cabd9ea02d3d",
      "name": "Code5",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5660,
        440
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "c3ba0938-7a95-4c61-9e4e-e23108b42df2",
      "name": "If74",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5880,
        440
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If74').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If74').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "35aa1296-5b3c-4af4-be3c-881da435e144",
      "name": "Cloodo Point16",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        6560,
        400
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "38e593cc-9f9f-4374-88cc-3e54eb8ebadf",
      "name": "IF not found20",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        6320,
        420
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "c63b9ef7-14e3-4287-a3af-a8ef9cbbe03c",
      "name": "Cloodo Point34",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        6160,
        420
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "74763902-fd2a-4128-84ee-bfa80e58fb74",
      "name": "Stop and Error23",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        7020,
        380
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "0050680f-fe6a-4618-b2ad-3789b0001328",
      "name": "If75",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6760,
        400
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "929f3b48-9fd9-4b94-9ccb-1a4ba419bc55",
      "name": "Check Leave Single6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5520,
        2000
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "50157362-6e29-4dd1-8e6c-df41fe0b02a3",
      "name": "If10",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5740,
        2000
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "dc664e25-1b43-462f-9ae4-c22adf440489",
      "name": "Check Leave Single7",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5520,
        1840
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c915b267-1ff5-4e69-8ff8-cf48aefd0377",
      "name": "If11",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5740,
        1840
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "half day"
            },
            {
              "name": "search",
              "value": "={{ $json.items[0].user.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "6bdb12f8-cc80-4eb0-8b11-55c16af4c7c5",
      "name": "Check Leave halfday4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5420,
        1560
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "833b0db0-d855-4347-9877-a51a7a58af34",
      "name": "If12",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5600,
        1560
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If69').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 180, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "77842d28-9247-45b4-bfb9-fa689c0a2600",
      "name": "Code1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5940,
        1620
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "0d0406b3-6469-4270-b63b-84e046a2deca",
      "name": "If76",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6200,
        1640
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If76').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If76').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "b2842960-7106-410b-9efa-0be59a9ab74e",
      "name": "Cloodo Point1",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        6900,
        1600
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "c97c3926-8f0e-4725-8731-0828d9376be2",
      "name": "IF not found1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        6660,
        1620
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "c0dd7c2c-0c80-4cfd-b325-77899d520e2b",
      "name": "Cloodo Point43",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        6500,
        1620
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "049af4bb-dbf4-43b9-a4a9-472a3c7a9b74",
      "name": "Stop and Error30",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        7320,
        1580
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "bdc4097b-2f34-484e-b1f1-0eb00fd839bb",
      "name": "If91",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7060,
        1600
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "95b248a8-eba0-41db-a985-c105e1b2cff1",
      "name": "Check Leave Single8",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5220,
        -440
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "541c43cd-fcc9-4c3a-81d5-ef7577cf60ca",
      "name": "If13",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5440,
        -440
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "3bd9658d-2e20-457e-b81b-94fe000a63b5",
      "name": "Check Leave Single9",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5220,
        -700
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f83b85bf-876f-42e7-a19e-7bbca100c67b",
      "name": "If14",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5440,
        -700
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "half day"
            },
            {
              "name": "search",
              "value": "={{ $json.items[0].user.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "733c299e-6919-4cec-ab9f-15f11021c277",
      "name": "Check Leave halfday5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5320,
        -960
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5feb1de0-b319-48f6-9391-d9b45ee42a49",
      "name": "If15",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5500,
        -960
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If104').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 180, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "0ec3b183-42a6-4100-8b05-5d5a26ce6a15",
      "name": "Code19",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5760,
        -860
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "7f65fed9-e609-468c-b600-decc1f264db1",
      "name": "If120",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5960,
        -860
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If120').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If120').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "4e4d16d3-6ad9-47ea-b7d2-e84519197e4d",
      "name": "Cloodo Point22",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        6700,
        -900
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "4e94d5e5-2136-48c1-a206-e1b5d84ad53b",
      "name": "IF not found40",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        6460,
        -880
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "521eddce-c718-49a2-afde-109bc547dc97",
      "name": "Cloodo Point67",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        6280,
        -880
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "uYFtcIGXdFXgli6w",
          "name": "Cloodo account test"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "56481e4a-043d-4d83-95ad-e6b40cce4efb",
      "name": "Stop and Error44",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        7200,
        -920
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "fd5fae62-d2b0-4668-aa8b-59ac0ace2702",
      "name": "If121",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6860,
        -900
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks",
              "triggerAtDay": [
                1
              ],
              "triggerAtHour": 18
            }
          ]
        }
      },
      "id": "5e35751d-2b6c-4f13-a785-f05d664f8b01",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -2020,
        300
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks",
              "triggerAtDay": [
                1
              ],
              "triggerAtHour": 21
            }
          ]
        }
      },
      "id": "ef12e064-8e80-4241-ac67-3830acd7119c",
      "name": "Schedule Trigger1",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -2020,
        700
      ]
    },
    {
      "parameters": {
        "content": "## 6pm and 9pm\n",
        "height": 80
      },
      "id": "b21f1bd1-dfd3-4d9e-9f29-08b42945a163",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2400,
        500
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Get All Department": {
      "main": [
        [
          {
            "node": "GetMember",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Department1": {
      "main": [
        [
          {
            "node": "GetMember1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Department2": {
      "main": [
        [
          {
            "node": "GetMember2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "CompanyName",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GetMember": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GetMember1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "GetMember2": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "CompanyName": {
      "main": [
        [
          {
            "node": "Count Company",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Count Company": {
      "main": [
        [
          {
            "node": "Remove employee leave",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Remove employee leave1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove employee leave1": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company1": {
      "main": [
        [
          {
            "node": "get Timelog22",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog23",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog24",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point17": {
      "main": [
        [
          {
            "node": "If52",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found31": {
      "main": [
        [
          {
            "node": "Cloodo Point17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point54": {
      "main": [
        [
          {
            "node": "IF not found31",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If52": {
      "main": [
        [
          {
            "node": "Stop and Error35",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If53": {
      "main": [
        [
          {
            "node": "Code14",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d41": {
      "main": [
        [
          {
            "node": "If53",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog22": {
      "main": [
        [
          {
            "node": "Check create 7d41",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d42": {
      "main": [
        [
          {
            "node": "If54",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog23": {
      "main": [
        [
          {
            "node": "Check create 7d42",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If104": {
      "main": [
        [
          {
            "node": "Check Leave halfday5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d43": {
      "main": [
        [
          {
            "node": "If104",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog24": {
      "main": [
        [
          {
            "node": "Check create 7d43",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code13": {
      "main": [
        [
          {
            "node": "If105",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point18": {
      "main": [
        [
          {
            "node": "If106",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found32": {
      "main": [
        [
          {
            "node": "Cloodo Point18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point55": {
      "main": [
        [
          {
            "node": "IF not found32",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If106": {
      "main": [
        [
          {
            "node": "Stop and Error36",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code14": {
      "main": [
        [
          {
            "node": "If107",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point19": {
      "main": [
        [
          {
            "node": "If108",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found33": {
      "main": [
        [
          {
            "node": "Cloodo Point19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point56": {
      "main": [
        [
          {
            "node": "IF not found33",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If108": {
      "main": [
        [
          {
            "node": "Stop and Error37",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Switch Company1",
            "type": "main",
            "index": 0
          }
        ],
        [],
        [],
        [
          {
            "node": "Switch Company4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch Company5",
            "type": "main",
            "index": 0
          }
        ],
        [],
        [
          {
            "node": "Switch Company7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company4": {
      "main": [
        [
          {
            "node": "get Timelog4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company5": {
      "main": [
        [
          {
            "node": "get Timelog7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point12": {
      "main": [
        [
          {
            "node": "If49",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found14": {
      "main": [
        [
          {
            "node": "Cloodo Point12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point28": {
      "main": [
        [
          {
            "node": "IF not found14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If49": {
      "main": [
        [
          {
            "node": "Stop and Error17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If50": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d38": {
      "main": [
        [
          {
            "node": "If50",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog4": {
      "main": [
        [
          {
            "node": "Check create 7d38",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d39": {
      "main": [
        [
          {
            "node": "If51",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog5": {
      "main": [
        [
          {
            "node": "Check create 7d39",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If64": {
      "main": [
        [
          {
            "node": "Check Leave halfday3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d40": {
      "main": [
        [
          {
            "node": "If64",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog6": {
      "main": [
        [
          {
            "node": "Check create 7d40",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "If65",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point13": {
      "main": [
        [
          {
            "node": "If66",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found15": {
      "main": [
        [
          {
            "node": "Cloodo Point13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point29": {
      "main": [
        [
          {
            "node": "IF not found15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If66": {
      "main": [
        [
          {
            "node": "Stop and Error18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "If67",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point14": {
      "main": [
        [
          {
            "node": "If68",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found16": {
      "main": [
        [
          {
            "node": "Cloodo Point14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point30": {
      "main": [
        [
          {
            "node": "IF not found16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If68": {
      "main": [
        [
          {
            "node": "Stop and Error19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point15": {
      "main": [
        [
          {
            "node": "If60",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found17": {
      "main": [
        [
          {
            "node": "Cloodo Point15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point31": {
      "main": [
        [
          {
            "node": "IF not found17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If60": {
      "main": [
        [
          {
            "node": "Stop and Error20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If61": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d50": {
      "main": [
        [
          {
            "node": "If61",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog7": {
      "main": [
        [
          {
            "node": "Check create 7d50",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d51": {
      "main": [
        [
          {
            "node": "If62",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog8": {
      "main": [
        [
          {
            "node": "Check create 7d51",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If69": {
      "main": [
        [
          {
            "node": "Check Leave halfday4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d52": {
      "main": [
        [
          {
            "node": "If69",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog9": {
      "main": [
        [
          {
            "node": "Check create 7d52",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "If70",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point20": {
      "main": [
        [
          {
            "node": "If71",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found18": {
      "main": [
        [
          {
            "node": "Cloodo Point20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point32": {
      "main": [
        [
          {
            "node": "IF not found18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If71": {
      "main": [
        [
          {
            "node": "Stop and Error21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "If72",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point21": {
      "main": [
        [
          {
            "node": "If73",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found19": {
      "main": [
        [
          {
            "node": "Cloodo Point21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point33": {
      "main": [
        [
          {
            "node": "IF not found19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If73": {
      "main": [
        [
          {
            "node": "Stop and Error22",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company7": {
      "main": [
        [
          {
            "node": "get Timelog13",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog14",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point27": {
      "main": [
        [
          {
            "node": "If81",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found23": {
      "main": [
        [
          {
            "node": "Cloodo Point27",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point37": {
      "main": [
        [
          {
            "node": "IF not found23",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If81": {
      "main": [
        [
          {
            "node": "Stop and Error26",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If82": {
      "main": [
        [
          {
            "node": "Code8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d56": {
      "main": [
        [
          {
            "node": "If82",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog13": {
      "main": [
        [
          {
            "node": "Check create 7d56",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d57": {
      "main": [
        [
          {
            "node": "If83",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog14": {
      "main": [
        [
          {
            "node": "Check create 7d57",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If84": {
      "main": [
        [
          {
            "node": "Check Leave halfday2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d58": {
      "main": [
        [
          {
            "node": "If84",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog15": {
      "main": [
        [
          {
            "node": "Check create 7d58",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code7": {
      "main": [
        [
          {
            "node": "If85",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point38": {
      "main": [
        [
          {
            "node": "If86",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found24": {
      "main": [
        [
          {
            "node": "Cloodo Point38",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point39": {
      "main": [
        [
          {
            "node": "IF not found24",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If86": {
      "main": [
        [
          {
            "node": "Stop and Error27",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code8": {
      "main": [
        [
          {
            "node": "If87",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point40": {
      "main": [
        [
          {
            "node": "If88",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found25": {
      "main": [
        [
          {
            "node": "Cloodo Point40",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point41": {
      "main": [
        [
          {
            "node": "IF not found25",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If88": {
      "main": [
        [
          {
            "node": "Stop and Error28",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company": {
      "main": [
        [
          {
            "node": "Stop and Error",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop and Error1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog25",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove employee leave": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Switch Company",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch Company9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company9": {
      "main": [
        [
          {
            "node": "Stop and Error2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop and Error3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog27",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point24": {
      "main": [
        [
          {
            "node": "If55",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found34": {
      "main": [
        [
          {
            "node": "Cloodo Point24",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point57": {
      "main": [
        [
          {
            "node": "IF not found34",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If55": {
      "main": [
        [
          {
            "node": "Stop and Error38",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If109": {
      "main": [
        [
          {
            "node": "Check Leave halfday1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d44": {
      "main": [
        [
          {
            "node": "If109",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog25": {
      "main": [
        [
          {
            "node": "Check create 7d44",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code15": {
      "main": [
        [
          {
            "node": "If110",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If110": {
      "main": [
        [
          {
            "node": "Cloodo Point58",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point25": {
      "main": [
        [
          {
            "node": "If111",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found35": {
      "main": [
        [
          {
            "node": "Cloodo Point25",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point58": {
      "main": [
        [
          {
            "node": "IF not found35",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If111": {
      "main": [
        [
          {
            "node": "Stop and Error39",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point59": {
      "main": [
        [
          {
            "node": "If112",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found36": {
      "main": [
        [
          {
            "node": "Cloodo Point59",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point60": {
      "main": [
        [
          {
            "node": "IF not found36",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If112": {
      "main": [
        [
          {
            "node": "Stop and Error40",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If114": {
      "main": [
        [
          {
            "node": "Check Leave halfday",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d46": {
      "main": [
        [
          {
            "node": "If114",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog27": {
      "main": [
        [
          {
            "node": "Check create 7d46",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code16": {
      "main": [
        [
          {
            "node": "If115",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If115": {
      "main": [
        [
          {
            "node": "Cloodo Point62",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point61": {
      "main": [
        [
          {
            "node": "If116",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found37": {
      "main": [
        [
          {
            "node": "Cloodo Point61",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point62": {
      "main": [
        [
          {
            "node": "IF not found37",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If116": {
      "main": [
        [
          {
            "node": "Stop and Error41",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Cloodo Point60",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave halfday": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Code16",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code17": {
      "main": [
        [
          {
            "node": "If117",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If117": {
      "main": [
        [
          {
            "node": "Cloodo Point64",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point63": {
      "main": [
        [
          {
            "node": "If118",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found38": {
      "main": [
        [
          {
            "node": "Cloodo Point63",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point64": {
      "main": [
        [
          {
            "node": "IF not found38",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If118": {
      "main": [
        [
          {
            "node": "Stop and Error42",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single1": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Cloodo Point57",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave halfday1": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "Code15",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code18": {
      "main": [
        [
          {
            "node": "If113",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If113": {
      "main": [
        [
          {
            "node": "Cloodo Point66",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point65": {
      "main": [
        [
          {
            "node": "If119",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found39": {
      "main": [
        [
          {
            "node": "Cloodo Point65",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point66": {
      "main": [
        [
          {
            "node": "IF not found39",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If119": {
      "main": [
        [
          {
            "node": "Stop and Error43",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single2": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single3": {
      "main": [
        [
          {
            "node": "If5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Merge12",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If5": {
      "main": [
        [
          {
            "node": "Merge12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge12": {
      "main": [
        [
          {
            "node": "Cloodo Point37",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave halfday2": {
      "main": [
        [
          {
            "node": "If6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code9": {
      "main": [
        [
          {
            "node": "If89",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point": {
      "main": [
        [
          {
            "node": "If90",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found": {
      "main": [
        [
          {
            "node": "Cloodo Point",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point42": {
      "main": [
        [
          {
            "node": "IF not found",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If90": {
      "main": [
        [
          {
            "node": "Stop and Error29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If6": {
      "main": [
        [
          {
            "node": "Code7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If89": {
      "main": [
        [
          {
            "node": "Cloodo Point42",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If85": {
      "main": [
        [
          {
            "node": "Cloodo Point39",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single4": {
      "main": [
        [
          {
            "node": "If7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single5": {
      "main": [
        [
          {
            "node": "If8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If8": {
      "main": [
        [
          {
            "node": "Merge9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If7": {
      "main": [
        [
          {
            "node": "Merge9",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Check Leave halfday3": {
      "main": [
        [
          {
            "node": "If9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If9": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If65": {
      "main": [
        [
          {
            "node": "Cloodo Point29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code5": {
      "main": [
        [
          {
            "node": "If74",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If74": {
      "main": [
        [
          {
            "node": "Cloodo Point34",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point16": {
      "main": [
        [
          {
            "node": "If75",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found20": {
      "main": [
        [
          {
            "node": "Cloodo Point16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point34": {
      "main": [
        [
          {
            "node": "IF not found20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If75": {
      "main": [
        [
          {
            "node": "Stop and Error23",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single6": {
      "main": [
        [
          {
            "node": "If10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single7": {
      "main": [
        [
          {
            "node": "If11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If11": {
      "main": [
        [
          {
            "node": "Merge10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If10": {
      "main": [
        [
          {
            "node": "Merge10",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Check Leave halfday4": {
      "main": [
        [
          {
            "node": "If12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If12": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "If76",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point1": {
      "main": [
        [
          {
            "node": "If91",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found1": {
      "main": [
        [
          {
            "node": "Cloodo Point1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point43": {
      "main": [
        [
          {
            "node": "IF not found1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If91": {
      "main": [
        [
          {
            "node": "Stop and Error30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge10": {
      "main": [
        [
          {
            "node": "Cloodo Point31",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge9": {
      "main": [
        [
          {
            "node": "Cloodo Point28",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If70": {
      "main": [
        [
          {
            "node": "Cloodo Point32",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If76": {
      "main": [
        [
          {
            "node": "Cloodo Point43",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single8": {
      "main": [
        [
          {
            "node": "If13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single9": {
      "main": [
        [
          {
            "node": "If14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If13": {
      "main": [
        [
          {
            "node": "Merge15",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If14": {
      "main": [
        [
          {
            "node": "Merge15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave halfday5": {
      "main": [
        [
          {
            "node": "If15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If15": {
      "main": [
        [
          {
            "node": "Code13",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code19": {
      "main": [
        [
          {
            "node": "If120",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point22": {
      "main": [
        [
          {
            "node": "If121",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found40": {
      "main": [
        [
          {
            "node": "Cloodo Point22",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point67": {
      "main": [
        [
          {
            "node": "IF not found40",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If121": {
      "main": [
        [
          {
            "node": "Stop and Error44",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge15": {
      "main": [
        [
          {
            "node": "Cloodo Point54",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If120": {
      "main": [
        [
          {
            "node": "Cloodo Point67",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If105": {
      "main": [
        [
          {
            "node": "Cloodo Point55",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get All Department",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get All Department1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get All Department2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "Get All Department",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "b356d316-dd36-4e5b-991a-781c82edf223",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "3909475c03ca6926b6e6edc6a6f06c1feb448ce7ac700d69b17002085d9011f8"
  },
  "id": "TOsU0vMdnwmDcp7j",
  "tags": []
}