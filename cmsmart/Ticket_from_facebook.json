{
  "name": "Ticket from facebook",
  "nodes": [
    {
      "parameters": {},
      "id": "a27ce3b7-00a6-45e4-beed-d7b56f4de6f5",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -20,
        1960
      ]
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1lM_TG2ExLdbs1YoBcaFzBFscVqB3MOEFjBFnvE9kAa0/edit?gid=0#gid=0",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": 2060972300,
          "mode": "list",
          "cachedResultName": "client_message_cms",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1lM_TG2ExLdbs1YoBcaFzBFscVqB3MOEFjBFnvE9kAa0/edit#gid=2060972300"
        },
        "options": {}
      },
      "id": "1838b06d-aa2e-41de-9efc-99d974b15b7c",
      "name": "Save messaage4",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -80,
        1220
      ],
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "P5h6CdXmV7twphIt",
          "name": "Canh Google Sheets"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Giới hạn số lượng input items tối đa là 50\nconst limitedItems = $input.all().slice(0,100 );\n\n\n// Trả về danh sách các item đã giới hạn\nreturn limitedItems;\n"
      },
      "id": "22c10242-3536-4da3-b6a9-11d6ad22e806",
      "name": "Take item",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        140,
        1220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0614ca61-ecd3-4185-bd93-cb34fe893c48",
              "leftValue": "={{ $json.emailClient }}",
              "rightValue": "@facebook.com",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "325e3d42-7aa9-404f-a697-f6873e088c58",
      "name": "check mail facebook",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2140,
        180
      ]
    },
    {
      "parameters": {
        "jsCode": "for (const item of $input.all()) {\n  let email = item?.json?.email;  // Lấy email từ item\n  \n  // Kiểm tra nếu email là một chuỗi chứa nhiều email (tách các email bằng dấu phẩy)\n  if (email) {\n    // Tách chuỗi email thành mảng nếu có dấu phẩy\n    const emailArray = email.split(',').map(e => e.trim());\n\n    // Lọc ra các email không có đuôi @cmsmart.net và giữ lại những email còn lại\n    const validEmails = emailArray.filter(e => !(e.endsWith('@cmsmart.net') || e.endsWith('@netbasejsc.com') || e === 'perlanguyen.ba@gmail.com'));\n    \n    // Nếu có email hợp lệ còn lại, gán vào item.json.emailClient\n    if (validEmails.length > 0) {\n      item.json.emailClient = validEmails.join(', ');  // Gán lại các email còn lại (nếu có)\n    } else {\n      // Nếu không có email hợp lệ, gán giá trị từ email_client_facebook\n      item.json.emailClient = item?.json?.email_client_facebook || null;\n    }\n  } else {\n    // Nếu không có email, gán giá trị từ email_client_facebook\n    item.json.emailClient = item?.json?.email_client_facebook || null;\n  }\n}\n\nreturn $input.all();\n"
      },
      "id": "3841451a-a391-4d45-a976-78b45df3fad9",
      "name": "Filter email",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        360,
        1220
      ]
    },
    {
      "parameters": {
        "resource": "client",
        "operation": "getmany",
        "additionalFields": {
          "searchLead": "={{ $json.email_worksuit }}"
        },
        "requestOptions": {}
      },
      "id": "d63d50d8-6b7f-4ab2-a12c-873366b2fede",
      "name": "Cloodo CRM",
      "type": "@cloodo/n8n-nodes-cloodo-crm.CloodoLeads",
      "typeVersion": 1,
      "position": [
        1980,
        1320
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "resource": "client",
        "operation": "getmany",
        "additionalFields": {
          "searchLead": "={{ $json.email_worksuit }}"
        },
        "requestOptions": {}
      },
      "id": "df231543-ea23-4aac-8a92-ce69722c7e95",
      "name": "Cloodo CRM1",
      "type": "@cloodo/n8n-nodes-cloodo-crm.CloodoLeads",
      "typeVersion": 1,
      "position": [
        2060,
        2740
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1lM_TG2ExLdbs1YoBcaFzBFscVqB3MOEFjBFnvE9kAa0/edit?gid=0#gid=0",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": 2060972300,
          "mode": "list",
          "cachedResultName": "client_message_cms",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1lM_TG2ExLdbs1YoBcaFzBFscVqB3MOEFjBFnvE9kAa0/edit#gid=2060972300"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "conversation_id": "={{ $json.conversation_id }}",
            "email_worksuit": "={{ $json.emailClient }}"
          },
          "matchingColumns": [
            "conversation_id"
          ],
          "schema": [
            {
              "id": "conversation_id",
              "displayName": "conversation_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "update_time",
              "displayName": "update_time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "id_client_message",
              "displayName": "id_client_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "id_workchat",
              "displayName": "id_workchat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "name_client_facebook",
              "displayName": "name_client_facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email_client_facebook",
              "displayName": "email_client_facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "message_worchat",
              "displayName": "message_worchat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email_worksuit",
              "displayName": "email_worksuit",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "a5d701af-92bc-4df5-8064-2b4418d309e3",
      "name": "Save messaage",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        580,
        1200
      ],
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "P5h6CdXmV7twphIt",
          "name": "Canh Google Sheets"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0381f91b-ba7b-4089-9205-37a8f597452a",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "af9e3231-7e22-4d18-80be-d6e91ade41e0",
      "name": "check data clietn",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2260,
        1320
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0381f91b-ba7b-4089-9205-37a8f597452a",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "0b6a2a9d-a971-472e-a04c-61095282796c",
      "name": "check data client",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2280,
        2740
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://erp-amz.cloodo.com/v4/client-contacts",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json^",
        "body": "={\n    \"title\": \"Facebook\",\n    \"name\": \"{{ $('Loop Over Items').item.json.name_client_facebook }}\",\n    \"email\": \"{{ $('Loop Over Items').item.json.email_client_facebook }}\",\n    \"phone\": \"\",\n    \"user_id\": \"{{ $json.data[0].user.id }}\"\n}",
        "options": {}
      },
      "id": "14fc64f3-c1fe-47c4-a1b4-9669c45e2829",
      "name": "Update contact client3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2800,
        1340
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "resource": "clientDetails",
        "ID": "={{ $('check data clietn').item.json.data[0].user.id }}",
        "requestOptions": {}
      },
      "id": "95c8b558-fa5b-4536-ad42-dc65a12254fc",
      "name": "a Project client",
      "type": "@cloodo/n8n-nodes-cloodo-crm.CloodoLeads",
      "typeVersion": 1,
      "position": [
        3000,
        1340
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a6e0e782-0ba5-49e6-a503-2456e187fc89",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "0a416d59-9e4a-47b8-8e35-a4e764973c4d",
      "name": "If2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3200,
        1340
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT *, (\n  SELECT COUNT(*) FROM user_chats WHERE (user_chats.from = 62844 AND user_chats.to = {{ $('Loop Over Items').item.json.id_workchat }}) OR  (user_chats.from = {{ $('Loop Over Items').item.json.id_workchat }} AND user_chats.to = 62844)\n) AS Total_Messages\nFROM user_chats\nWHERE \n  (user_chats.from = 62844 AND user_chats.to = {{ $('Loop Over Items').item.json.id_workchat }}) \n  OR \n  (user_chats.from = {{ $('Loop Over Items').item.json.id_workchat }} AND user_chats.to = 62844) ORDER BY user_chats.created_at DESC;",
        "options": {}
      },
      "id": "f2008ab2-badc-4419-aad3-2198e888ff3b",
      "name": "Get Detail Messages1",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.2,
      "position": [
        3460,
        1320
      ],
      "credentials": {
        "mySql": {
          "id": "SJei6ksLjiCIXFRS",
          "name": "Worksuite database"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "3f3b13bb-d69c-4f2e-86c8-624455e39b4b",
      "name": "Aggregate1",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        3640,
        1320
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Kiểm tra dữ liệu Aggregate1\nconst listMessages = $node['Aggregate1']?.json?.data || [];\nif (listMessages.length === 0) {\n  throw new Error(\"Node 'Aggregate1' không có dữ liệu hoặc không tồn tại.\");\n}\n\n// ID nhân viên của bạn\nconst employeeId = 62844;\n\n// Bắt đầu tạo nội dung tài liệu\nlet document = 'List Messages sent by client with admin: \\n';\n\n// Duyệt qua danh sách tin nhắn\nfor (const item of listMessages.reverse()) {\n  if (item?.from === employeeId) {\n    document += `Admin sent: ${item?.message} \\n\\n`;\n  } else {\n    document += `Client sent: ${item?.message} \\n\\n`;\n  }\n}\n\n// Tin nhắn cuối cùng gửi bởi khách hàng\nconst lastClientMessage = listMessages.find(\n  (item) => item.from !== employeeId\n)?.message || 'No messages from client';\n\n// Thêm thông tin tin nhắn cuối cùng của khách hàng vào tài liệu\ndocument += `\\n\\nLast message sent by client: ${lastClientMessage}`;\n\n// Kiểm tra dữ liệu từ node \"a Project client\"\nconst inputData = $node['a Project client']?.json?.data || [];\nif (inputData.length === 0) {\n  throw new Error(\"Node 'a Project client' không có dữ liệu hoặc không tồn tại.\");\n}\n\nlet agent = '';\nlet projectId = '';\n\nif (inputData.length === 1) {\n  // Nếu chỉ có một dự án, lấy thông tin thành viên đầu tiên\n  const projectMembers = inputData[0]?.projectMembers || [];\n  if (projectMembers.length > 0) {\n    agent = projectMembers[0]?.id; // Gán ID thành viên đầu tiên làm agent\n  }\n  projectId = inputData[0]?.id || ''; // Gán ID dự án\n} else {\n  // Nếu có nhiều dự án, để trống các giá trị\n  agent = '';\n  projectId = '';\n}\n\n// Log kết quả để debug\nconsole.log({ agent, projectId });\nconsole.log(document);\n\n// Trả về tài liệu đã tạo và thông tin agent, projectId\nreturn { messagesSent: document, agent, projectId };\n"
      },
      "id": "b3ae505e-1af8-490f-8a3d-c44283d04ce8",
      "name": "Get All Messages and id agent1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3840,
        1320
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const inputStr = $input.item.json.output;\n\n// Remove the surrounding Markdown-style code block (```json ... ```)\nconst cleanedInput = inputStr.replace(/^```json|\\n```$/g, '').trim();\n\n// Remove newlines and excessive spaces\nconst formattedInput = cleanedInput.replace(/\\n/g, ' ').replace(/\\s+/g, ' ');\n\n// Remove any trailing comma in the JSON string (before the closing brace)\nconst validJson = formattedInput.replace(/,\\s*}$/g, '}');\n\n// Parse the cleaned-up string into a JSON object\nconst jsonObject = JSON.parse(validJson);\n\n\nreturn {jsonOutput: jsonObject};\n"
      },
      "id": "f17217e8-51ee-424c-8a5d-05fc47f14d50",
      "name": "Code Convert to JSON1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4440,
        1320
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "18d839e2-523c-4fa2-822c-b556cf15f2d5",
              "leftValue": "={{ $json.jsonOutput.type }}",
              "rightValue": "clear issue",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e7ad2128-4a19-4c09-a4a0-e864c6a35a79",
      "name": "check have issue1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4840,
        1320
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://erp-amz.cloodo.com/v4/tickets",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"tags\": [],\n  \"project_id\": \"{{ $('Get All Messages and id agent1').item.json.projectId }}\",\n  \"user_id\": \"{{ $('Cloodo CRM').item.json.data[0].user.id }}\",\n  \"subject\": \"{{ $('check have issue1').item.json.jsonOutput.title }}\",\n  \"priority\": \"medium\",\n  \"agent_id\": \"2c991f1a-6665-4533-bfca-ac969f431eb2\",\n  \"type_id\": \"{{ $json.jsonOutput.type_ticket }}\",\n  \"channel_id\": \"931082dc-2e77-4c9a-86e6-b3c20a5c6b22\",\n  \"status\": \"open\",\n \"message\": \"{{ $json.jsonOutput.description }}\",\n  \"note\": \"{{ $('check have issue1').item.json.jsonOutput.note }}\",\n  \"ticket_files\": [],\n  \"created_at\": \"{{ $('Loop Over Items').item.json.update_time }}\"\n\n}",
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "5c451759-aa30-4735-b37d-681ac4087376",
      "name": "Create Ticket1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        7280,
        2420
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Define the list of IDs\nconst ids = ['61fd7c82-41d1-4cd6-b63d-85b927bb7dff', 'e669712f-22a2-4109-bc2c-92f947b85f58'];\n\n// Loop over input items and add a new field called 'myNewField' with a random ID\nfor (const item of $input.all()) {\n  // Select a random ID from the list\n  const randomId = ids[Math.floor(Math.random() * ids.length)];\n  \n  // Escape special characters in item.json.description\n  if (item.json.description) {\n    item.json.description = item.json.description.replace(/'/g, \"\\\\'\").replace(/\"/g, '\\\\\"');\n  }\n\n  // Add the random ID to the JSON\n  item.json.myNewField = randomId;\n}\n\n// Return the updated input array\nreturn $input.all();\n"
      },
      "id": "0ef2dc35-e0ce-4b7d-a47d-e76b53428963",
      "name": "Chọn ngẫu nhiên agent",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        7540,
        2540
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "dcf259bf-8ece-4123-98f3-131891921a52",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1720,
        1300
      ]
    },
    {
      "parameters": {
        "resource": "engagement",
        "ID": "={{ $json.data.id }}",
        "requestOptions": {}
      },
      "id": "5161a386-0d7c-4b58-8fa8-fc08efdc9a2e",
      "name": "Get Ticket",
      "type": "@cloodo/n8n-nodes-cloodo-crm.CloodoLeads",
      "typeVersion": 1,
      "position": [
        5260,
        1300
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://erp-amz.cloodo.com/v4/ticket-replies",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "={\n  \"message\": \"<p><strong>Dear {{ $('Create Ticket').item.json.data.requester.name }},</strong></p><p>We hope you're doing well. We noticed that it has been a while since we last heard from you regarding your support ticket. To ensure efficiency and focus on active requests, we will be closing this ticket soon.</p><p><strong>If your issue has been resolved</strong>, no further action is needed.</p><p><strong>If you still require assistance</strong>, please reply to this email or reopen the ticket, and we’ll be happy to help.</p><h3><strong>Need Further Support?</strong></h3><p>If you have any additional questions or need further support in the future, feel free to contact us anytime. Our team is always here to assist you.</p><p>Thank you for choosing our services. We appreciate your time and trust.</p><p><strong>Best regards,</strong></p><p><strong>The Support Team</strong></p>\",\n  \"external_link\": \"\",\n  \"ticket_id\": \"{{ $('Create Ticket').item.json.data.id }}\"\n}\n",
        "options": {}
      },
      "id": "998129ac-6e95-4249-89a6-bbb4cc6d27a2",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5460,
        1300
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "resource": "engagement",
        "operation": "update",
        "ID": "={{ $('Create Ticket').item.json.data.id }}",
        "additionalFields": {
          "statusId": "closed"
        },
        "requestOptions": {}
      },
      "id": "3ec8b885-18e0-4698-8f55-582ea4ec3f26",
      "name": "Cloodo CRM2",
      "type": "@cloodo/n8n-nodes-cloodo-crm.CloodoLeads",
      "typeVersion": 1,
      "position": [
        5660,
        1300
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v22.0/213439902114044/messages",
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "recipient",
              "value": "={\"id\":\"{{ $('Loop Over Items').item.json.id_client_message }}\"}"
            },
            {
              "name": "messaging_type",
              "value": "MESSAGE_TAG"
            },
            {
              "name": "tag",
              "value": "ACCOUNT_UPDATE"
            },
            {
              "name": "message",
              "value": "={\"text\":\"Hello {{ $('Loop Over Items').item.json.name_client_facebook }},\\n\\nBased on our conversation, I have opened a support ticket ({{ $('Create Ticket').item.json.data.ticket_number }}) on your behalf. You can check and follow up anytime here:\\n\\n🔗 Cmsmart Dashboard Support Ticket:\\nhttps://dashboard.cmsmart.net/apps/tickets/all-tickets\\n\\n🔹 Login Details:\\n\\nUsername: {{ $('Create Ticket').item.json.data.requester.email }}\\nIf you don't have an account yet, you can create one with your email here: https://cmsmart.net/login?view=registration\\nIf you forgot your password, reset it here: https://cmsmart.net/login?view=reset\\nIf you have any questions, please email support@cmsmart.net or chat with Vincent on WhatsApp:\\n📩 WhatsApp: https://wa.me/+84967319788\\n\\nLet us know if you need more information! 😊\\n\\nBest regards,\\nCmsmart E-commerce Team\"}"
            },
            {
              "name": "access_token",
              "value": "EAA3ZCtCZCe57kBOzXf4fqSrVflYWE5Fk2P0BNfjOerautjGD8cKV0pZAnvdV3zRQwokzJiKmPUZBRWFn8Tmeq2rPD4zCHvZAZCRZCg9943vq93AmFKnbtrFd7bfZBiGBmOgiYYKD7qipJyirD8a3KxZC2GgLXxok3Dj2ZBObBCyBqHoLywAZAdC7mpmnbcTOYKZCZB6wZD"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "7d3acc41-2be3-4fb7-9f40-cd094d967ef3",
      "name": "send fb",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5860,
        1300
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1lM_TG2ExLdbs1YoBcaFzBFscVqB3MOEFjBFnvE9kAa0/edit?gid=0#gid=0",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": 2060972300,
          "mode": "list",
          "cachedResultName": "client_message_cms",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1lM_TG2ExLdbs1YoBcaFzBFscVqB3MOEFjBFnvE9kAa0/edit#gid=2060972300"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id_client_message": "={{ $('Loop Over Items').item.json.id_client_message }}",
            "status_ticket": "ok"
          },
          "matchingColumns": [
            "id_client_message"
          ],
          "schema": [
            {
              "id": "conversation_id",
              "displayName": "conversation_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "update_time",
              "displayName": "update_time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "id_client_message",
              "displayName": "id_client_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "id_workchat",
              "displayName": "id_workchat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "name_client_facebook",
              "displayName": "name_client_facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email_client_facebook",
              "displayName": "email_client_facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "message_worchat",
              "displayName": "message_worchat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email_worksuit",
              "displayName": "email_worksuit",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status_ticket",
              "displayName": "status_ticket",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "f728bb9e-650a-43dc-81c6-bedf589051dd",
      "name": "Save messaage5",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        6100,
        1300
      ],
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "P5h6CdXmV7twphIt",
          "name": "Canh Google Sheets"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9453be76-acac-4cc7-b680-2544ecf4fdf8",
              "leftValue": "={{ $json.status_ticket }}",
              "rightValue": "ok",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "1a4d7b8d-1e12-46e7-8a3c-f06d1e7e92e6",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1220,
        1640
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://erp-amz.cloodo.com/v4/tickets",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"tags\": [],\n  \"project_id\": \"{{ $('Get All Messages and id agent1').item.json.projectId }}\",\n  \"user_id\": \"{{ $('Cloodo CRM').item.json.data[0].user.id }}\",\n  \"subject\": \"{{ $('check have issue1').item.json.jsonOutput.title }}\",\n  \"priority\": \"medium\",\n  \"agent_id\": \"2c991f1a-6665-4533-bfca-ac969f431eb2\",\n  \"type_id\": \"{{ $json.jsonOutput.type_ticket_id }}\",\n  \"channel_id\": \"931082dc-2e77-4c9a-86e6-b3c20a5c6b22\",\n  \"status\": \"open\",\n \"message\": \"{{ $json.output }}\",\n  \"note\": \"{{ $('check have issue1').item.json.jsonOutput.note }}\",\n  \"ticket_files\": [],\n  \"created_at\": \"{{ $('Loop Over Items').item.json.update_time }}\"\n\n}",
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "6f2d1b75-8c0b-40e6-b780-fdb5012f2db1",
      "name": "Create Ticket",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5060,
        1300
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://erp-amz.cloodo.com/v4/tickets",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"tags\": [],\n  \"project_id\": \"{{ $('Get All Messages and id agent1').item.json.projectId }}\",\n  \"user_id\": \"{{ $('Cloodo CRM').item.json.data[0].user.id }}\",\n  \"subject\": \"{{ $('check have issue1').item.json.jsonOutput.title }}\",\n  \"priority\": \"medium\",\n  \"agent_id\": \"2c991f1a-6665-4533-bfca-ac969f431eb2\",\n  \"type_id\": \"{{ $json.jsonOutput.type_ticket }}\",\n  \"channel_id\": \"931082dc-2e77-4c9a-86e6-b3c20a5c6b22\",\n  \"status\": \"open\",\n \"message\": \"{{ $json.jsonOutput.description }}\",\n  \"note\": \"{{ $('check have issue1').item.json.jsonOutput.note }}\",\n  \"ticket_files\": [],\n  \"created_at\": \"{{ $('Loop Over Items').item.json.update_time }}\"\n\n}",
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "b31763fb-e514-4f3a-9f4f-40c78fba3411",
      "name": "Create Ticket2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        7300,
        2580
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v22.0/213439902114044/messages",
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "recipient",
              "value": "={\"id\":\"{{ $('Loop Over Items').item.json.id_client_message }}\"}"
            },
            {
              "name": "messaging_type",
              "value": "MESSAGE_TAG"
            },
            {
              "name": "tag",
              "value": "ACCOUNT_UPDATE"
            },
            {
              "name": "message",
              "value": "={\"text\":\"Hello {{ $('Cloodo CRM').item.json.data[0].user.name }},\\n\\nBased on our conversation, I have created an account on your behalf to better assist you. You can check and follow up anytime here:\\n\\n🔗 Cmsmart Dashboard Support Ticket:\\nhttps://dashboard.cmsmart.net/apps/tickets/all-tickets\\n\\n🔹 Login Details:\\n\\nUsername: {{ $('Cloodo CRM').item.json.data[0].user.email }}\\nIf you don't have an account yet, you can create one with your email here: https://cmsmart.net/login?view=registration\\nIf you forgot your password, reset it here: https://cmsmart.net/login?view=reset\\nIf you have any questions, please email support@cmsmart.net or chat with Vincent on WhatsApp:\\n📩 WhatsApp: https://wa.me/+84967319788\\n\\nLet us know if you need more information! 😊\\n\\nBest regards,\\nCmsmart E-commerce Team\"}"
            },
            {
              "name": "access_token",
              "value": "EAA3ZCtCZCe57kBOzXf4fqSrVflYWE5Fk2P0BNfjOerautjGD8cKV0pZAnvdV3zRQwokzJiKmPUZBRWFn8Tmeq2rPD4zCHvZAZCRZCg9943vq93AmFKnbtrFd7bfZBiGBmOgiYYKD7qipJyirD8a3KxZC2GgLXxok3Dj2ZBObBCyBqHoLywAZAdC7mpmnbcTOYKZCZB6wZD"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "3cb60d2b-4dbe-49c7-90ac-3549f722d028",
      "name": "send fb1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5060,
        1600
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1lM_TG2ExLdbs1YoBcaFzBFscVqB3MOEFjBFnvE9kAa0/edit?gid=0#gid=0",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": 2060972300,
          "mode": "list",
          "cachedResultName": "client_message_cms",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1lM_TG2ExLdbs1YoBcaFzBFscVqB3MOEFjBFnvE9kAa0/edit#gid=2060972300"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id_client_message": "={{ $('Loop Over Items').item.json.id_client_message }}",
            "status_ticket": "ok"
          },
          "matchingColumns": [
            "id_client_message"
          ],
          "schema": [
            {
              "id": "conversation_id",
              "displayName": "conversation_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "update_time",
              "displayName": "update_time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "id_client_message",
              "displayName": "id_client_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "id_workchat",
              "displayName": "id_workchat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "name_client_facebook",
              "displayName": "name_client_facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email_client_facebook",
              "displayName": "email_client_facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "message_worchat",
              "displayName": "message_worchat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email_worksuit",
              "displayName": "email_worksuit",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status_ticket",
              "displayName": "status_ticket",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "977400b5-8501-40b7-8e18-14623add2ee2",
      "name": "Save messaage6",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        5280,
        1600
      ],
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "P5h6CdXmV7twphIt",
          "name": "Canh Google Sheets"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  let messagerAI = $node['Code Convert to JSON1']?.json?.jsonOutput?.description\n  messagerAI = messagerAI.replace(/\\n\\n/g, '\\\\n\\\\n');\n  messagerAI = messagerAI.replace(/\\n/g, '\\\\n');\n  messagerAI = messagerAI.replace(/<br><br>/g, '\\\\n');\n  item.json.output = messagerAI;\n}\n\nreturn $input.all();\n"
      },
      "id": "46054287-d3a1-4cfa-90e6-23dec78b9e2f",
      "name": "Code8",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4640,
        1320
      ]
    },
    {
      "parameters": {
        "resource": "project",
        "operation": "create",
        "projectName": "={{ $('Cloodo CRM').item.json.data[0].user.name }} Project",
        "start_date": "={{ $now }}",
        "user_id": "=[\"{{ $('Cloodo CRM').item.json.data[0].added_by.id }}\"]",
        "additionalFields": {
          "client_id": "=\"{{ $('Cloodo CRM').item.json.data[0].user.id }}\""
        },
        "requestOptions": {}
      },
      "id": "6ac7de9b-9ecd-4c53-bd21-9731d894826d",
      "name": "Cloodo CRM3",
      "type": "@cloodo/n8n-nodes-cloodo-crm.CloodoLeads",
      "typeVersion": 1,
      "position": [
        7080,
        2660
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "12e4720b-3919-4684-8fa2-1031f30157b7",
              "leftValue": "={{ $('Cloodo CRM').item.json.data[0].added_by.email }}",
              "rightValue": "sales@cmsmart.net",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e1535035-4b11-4f36-be63-376b182712b4",
      "name": "If1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6860,
        2620
      ]
    },
    {
      "parameters": {
        "jsCode": "const strings = [\n  \"61fd7c82-41d1-4cd6-b63d-85b927bb7dff\",\n  \"e4eead4b-0a3c-4a42-88aa-90586f30bafd\",\n  \"b26c8a1a-2603-4d11-a92c-effccf6217db\"\n];\n\nlet index = $runIndex % strings.length;\nfor (const item of $input.all()) {\n  item.json.myNewField = strings[index];\n  index = (index + 1) % strings.length;\n}\nreturn $input.all();\n"
      },
      "id": "9011d4c0-e691-4a29-9775-86bf0b2d647f",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        7540,
        2720
      ]
    },
    {
      "parameters": {
        "resource": "project",
        "operation": "create",
        "projectName": "={{ $('Cloodo CRM').item.json.data[0].user.name }} Project",
        "start_date": "={{ $now }}",
        "user_id": "=[\"5b731bad-fc3a-4abd-b768-4a69da1df5ad\"]",
        "additionalFields": {
          "client_id": "=\"{{ $('Cloodo CRM').item.json.data[0].user.id }}\""
        },
        "requestOptions": {}
      },
      "id": "50bb5f77-2ab1-4ca3-aa09-402d0da01795",
      "name": "Cloodo CRM4",
      "type": "@cloodo/n8n-nodes-cloodo-crm.CloodoLeads",
      "typeVersion": 1,
      "position": [
        3380,
        1920
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "9e6a8526-f8b7-428a-beb5-a8c2f8a854ff",
      "name": "Loop Over Items1",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1700,
        2700
      ]
    },
    {
      "parameters": {
        "resource": "client",
        "operation": "create",
        "name": "=Leslie Lam",
        "passwordClinet": "=x7M&dL!9wQ#2tV4%",
        "clientEmail": "=9688702104491139@facebook.com",
        "additionalFields": {},
        "requestOptions": {}
      },
      "id": "804fcf8b-ec87-4ed0-a884-f938025949a6",
      "name": "Cloodo CRM5",
      "type": "@cloodo/n8n-nodes-cloodo-crm.CloodoLeads",
      "typeVersion": 1,
      "position": [
        20,
        4480
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://erp-amz.cloodo.com/v4/client-contacts",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json^",
        "body": "={\n    \"title\": \"Facebook\",\n    \"name\": \"{{ $('Loop Over Items1').item.json.name_client_facebook }}\",\n    \"email\": \"{{ $('Loop Over Items1').item.json.email_client_facebook }}\",\n    \"phone\": \"\",\n    \"user_id\": \"{{ $json.data[0].user.id }}\"\n}",
        "options": {}
      },
      "id": "bd4dfc7d-2404-4619-8815-8b65bed78c06",
      "name": "Update contact client",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        340,
        4460
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT *, (\n  SELECT COUNT(*) FROM user_chats WHERE (user_chats.from = 62844 AND user_chats.to = {{ $('Loop Over Items1').item.json.id_workchat }}) OR  (user_chats.from = {{ $('Loop Over Items1').item.json.id_workchat }} AND user_chats.to = 62844)\n) AS Total_Messages\nFROM user_chats\nWHERE \n  (user_chats.from = 62844 AND user_chats.to = {{ $('Loop Over Items1').item.json.id_workchat }}) \n  OR \n  (user_chats.from = {{ $('Loop Over Items1').item.json.id_workchat }} AND user_chats.to = 62844) ORDER BY user_chats.created_at DESC;",
        "options": {}
      },
      "id": "d4ac83e3-ddfe-4613-a990-91437874226e",
      "name": "Get Detail Messages",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.2,
      "position": [
        840,
        4460
      ],
      "credentials": {
        "mySql": {
          "id": "SJei6ksLjiCIXFRS",
          "name": "Worksuite database"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "f3bfc8ee-b102-43dd-a3ae-fb80fc73fc51",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1020,
        4460
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Kiểm tra dữ liệu Aggregate1\nconst listMessages = $node['Aggregate']?.json?.data || [];\nif (listMessages.length === 0) {\n  throw new Error(\"Node 'Aggregate1' không có dữ liệu hoặc không tồn tại.\");\n}\n\n// ID nhân viên của bạn\nconst employeeId = 62844;\n\n// Bắt đầu tạo nội dung tài liệu\nlet document = 'List Messages sent by client with admin: \\n';\n\n// Duyệt qua danh sách tin nhắn\nfor (const item of listMessages.reverse()) {\n  if (item?.from === employeeId) {\n    document += `Admin sent: ${item?.message} \\n\\n`;\n  } else {\n    document += `Client sent: ${item?.message} \\n\\n`;\n  }\n}\n\n// Tin nhắn cuối cùng gửi bởi khách hàng\nconst lastClientMessage = listMessages.find(\n  (item) => item.from !== employeeId\n)?.message || 'No messages from client';\n\n// Thêm thông tin tin nhắn cuối cùng của khách hàng vào tài liệu\ndocument += `\\n\\nLast message sent by client: ${lastClientMessage}`;\n\n// Kiểm tra dữ liệu từ node \"a Project client\"\nconst inputData = $node['a Project client']?.json?.data || [];\nif (inputData.length === 0) {\n  throw new Error(\"Node 'a Project client' không có dữ liệu hoặc không tồn tại.\");\n}\n\nlet agent = '';\nlet projectId = '';\n\nif (inputData.length === 1) {\n  // Nếu chỉ có một dự án, lấy thông tin thành viên đầu tiên\n  const projectMembers = inputData[0]?.projectMembers || [];\n  if (projectMembers.length > 0) {\n    agent = projectMembers[0]?.id; // Gán ID thành viên đầu tiên làm agent\n  }\n  projectId = inputData[0]?.id || ''; // Gán ID dự án\n} else {\n  // Nếu có nhiều dự án, để trống các giá trị\n  agent = '';\n  projectId = '';\n}\n\n// Log kết quả để debug\nconsole.log({ agent, projectId });\nconsole.log(document);\n\n// Trả về tài liệu đã tạo và thông tin agent, projectId\nreturn { messagesSent: document, agent, projectId };\n"
      },
      "id": "d6bee6f3-d506-4f80-a61b-6eea84541fe0",
      "name": "Get All Messages and id agent",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1220,
        4460
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const inputStr = $input.item.json.output;\n\n// Remove the surrounding Markdown-style code block (```json ... ```)\nconst cleanedInput = inputStr.replace(/^```json|\\n```$/g, '').trim();\n\n// Remove newlines and excessive spaces\nconst formattedInput = cleanedInput.replace(/\\n/g, ' ').replace(/\\s+/g, ' ');\n\n// Remove any trailing comma in the JSON string (before the closing brace)\nconst validJson = formattedInput.replace(/,\\s*}$/g, '}');\n\n// Parse the cleaned-up string into a JSON object\nconst jsonObject = JSON.parse(validJson);\n\n\nreturn {jsonOutput: jsonObject};\n"
      },
      "id": "415f4193-1873-4edd-b465-21f113356ad1",
      "name": "Code Convert to JSON",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1820,
        4460
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "18d839e2-523c-4fa2-822c-b556cf15f2d5",
              "leftValue": "={{ $json.jsonOutput.type }}",
              "rightValue": "clear issue",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "67866a11-122d-4c3d-8ec6-56edeb13d593",
      "name": "check have issue",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2220,
        4460
      ]
    },
    {
      "parameters": {
        "resource": "engagement",
        "ID": "={{ $json.data.id }}",
        "requestOptions": {}
      },
      "id": "8f6266a8-aef4-431c-b8b3-56bdadc9a4cf",
      "name": "Get Ticket1",
      "type": "@cloodo/n8n-nodes-cloodo-crm.CloodoLeads",
      "typeVersion": 1,
      "position": [
        2640,
        4440
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://erp-amz.cloodo.com/v4/ticket-replies",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "={\n  \"message\": \"<p><strong>Dear {{ $('Create Ticket3').item.json.data.requester.name }},</strong></p><p>We hope you're doing well. We noticed that it has been a while since we last heard from you regarding your support ticket. To ensure efficiency and focus on active requests, we will be closing this ticket soon.</p><p><strong>If your issue has been resolved</strong>, no further action is needed.</p><p><strong>If you still require assistance</strong>, please reply to this email or reopen the ticket, and we’ll be happy to help.</p><h3><strong>Need Further Support?</strong></h3><p>If you have any additional questions or need further support in the future, feel free to contact us anytime. Our team is always here to assist you.</p><p>Thank you for choosing our services. We appreciate your time and trust.</p><p><strong>Best regards,</strong></p><p><strong>The Support Team</strong></p>\",\n  \"external_link\": \"\",\n  \"ticket_id\": \"{{ $('Create Ticket3').item.json.data.id }}\"\n}\n",
        "options": {}
      },
      "id": "a28e3cc1-0d53-48ae-9e7d-5b7cfadc9e89",
      "name": "HTTP Request1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2840,
        4440
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "resource": "engagement",
        "operation": "update",
        "ID": "={{ $('Create Ticket3').item.json.data.id }}",
        "additionalFields": {
          "statusId": "closed"
        },
        "requestOptions": {}
      },
      "id": "af8f92e0-7dd0-4cde-9ad2-31978d463dfe",
      "name": "Cloodo CRM7",
      "type": "@cloodo/n8n-nodes-cloodo-crm.CloodoLeads",
      "typeVersion": 1,
      "position": [
        3040,
        4440
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v22.0/213439902114044/messages",
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "recipient",
              "value": "={\"id\":\"{{ $('Loop Over Items1').item.json.id_client_message }}\"}"
            },
            {
              "name": "messaging_type",
              "value": "MESSAGE_TAG"
            },
            {
              "name": "tag",
              "value": "ACCOUNT_UPDATE"
            },
            {
              "name": "message",
              "value": "={\"text\":\"Dear {{ $('Loop Over Items1').item.json.name_client_facebook }},\\n\\nWe hope you are well. We are reaching out to you regarding your support request {{ $('Get Ticket1').item.json.data.ticket_number }}. Due to a long period of inactivity, we have closed the request.\\n\\nIf you still need assistance or have any questions, please contact us. We are always happy to help!\\n\\nYou can access your account and submit a new request through our support portal:\\n🔗 https://worksuite.cloodo.com/apps/tickets/all-tickets/{{ $('Get Ticket1').item.json.data.id }}\\n\\nThis is a project management and ticket management website with your clients. us\\n\\nYour login information:\\n- **Username:** {{ $('Get Ticket1').item.json.data.requester.email }}\\n- **Password:** j*tC53v4d5tM \\n\\nWhen logging in, you need to change your email information as well as your password to facilitate your work:\\n🔗 [Reset Password](https://worksuite.cloudo.com/forgot-password)\\n\\nIf you have any other questions, please contact us.\\n\\nBest regards,\\nCmsmart Ecommerce\"}"
            },
            {
              "name": "access_token",
              "value": "EAA3ZCtCZCe57kBOzXf4fqSrVflYWE5Fk2P0BNfjOerautjGD8cKV0pZAnvdV3zRQwokzJiKmPUZBRWFn8Tmeq2rPD4zCHvZAZCRZCg9943vq93AmFKnbtrFd7bfZBiGBmOgiYYKD7qipJyirD8a3KxZC2GgLXxok3Dj2ZBObBCyBqHoLywAZAdC7mpmnbcTOYKZCZB6wZD"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "b6f6e130-a3e6-4ac0-9299-49aefdc48bc6",
      "name": "send fb2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3460,
        4440
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1lM_TG2ExLdbs1YoBcaFzBFscVqB3MOEFjBFnvE9kAa0/edit?gid=0#gid=0",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": 2060972300,
          "mode": "list",
          "cachedResultName": "client_message_cms",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1lM_TG2ExLdbs1YoBcaFzBFscVqB3MOEFjBFnvE9kAa0/edit#gid=2060972300"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id_client_message": "={{ $('Loop Over Items1').item.json.id_client_message }}",
            "status_ticket": "ok"
          },
          "matchingColumns": [
            "id_client_message"
          ],
          "schema": [
            {
              "id": "conversation_id",
              "displayName": "conversation_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "update_time",
              "displayName": "update_time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "id_client_message",
              "displayName": "id_client_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "id_workchat",
              "displayName": "id_workchat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "name_client_facebook",
              "displayName": "name_client_facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email_client_facebook",
              "displayName": "email_client_facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "message_worchat",
              "displayName": "message_worchat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email_worksuit",
              "displayName": "email_worksuit",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status_ticket",
              "displayName": "status_ticket",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "863981a4-34fb-41ea-a762-9768429a8533",
      "name": "Save messaage7",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        3680,
        4440
      ],
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "P5h6CdXmV7twphIt",
          "name": "Canh Google Sheets"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://erp-amz.cloodo.com/v4/tickets",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"tags\": [],\n  \"project_id\": \"{{ $('Get All Messages and id agent').item.json.projectId }}\",\n  \"user_id\": \"{{ $('Cloodo CRM1').item.json.data[0].user.id }}\",\n  \"subject\": \"{{ $('check have issue').item.json.jsonOutput.title }}\",\n  \"priority\": \"medium\",\n  \"agent_id\": \"2c991f1a-6665-4533-bfca-ac969f431eb2\",\n  \"type_id\": \"{{ $json.jsonOutput.type_ticket }}\",\n  \"channel_id\": \"931082dc-2e77-4c9a-86e6-b3c20a5c6b22\",\n  \"status\": \"open\",\n \"message\": \"{{ $json.jsonOutput.description }}\",\n  \"note\": \"{{ $('check have issue').item.json.jsonOutput.note }}\",\n  \"ticket_files\": [],\n  \"created_at\": \"{{ $('Loop Over Items1').item.json.update_time }}\"\n\n}",
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "894613db-68a4-475a-9169-9e3833c32c07",
      "name": "Create Ticket3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2440,
        4440
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v22.0/213439902114044/messages",
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "recipient",
              "value": "={\"id\":\"{{ $('Loop Over Items1').item.json.id_client_message }}\"}"
            },
            {
              "name": "messaging_type",
              "value": "MESSAGE_TAG"
            },
            {
              "name": "tag",
              "value": "ACCOUNT_UPDATE"
            },
            {
              "name": "message",
              "value": "={\"text\":\"{{ $json.jsonOutput.description }}\"}"
            },
            {
              "name": "access_token",
              "value": "EAA3ZCtCZCe57kBOzXf4fqSrVflYWE5Fk2P0BNfjOerautjGD8cKV0pZAnvdV3zRQwokzJiKmPUZBRWFn8Tmeq2rPD4zCHvZAZCRZCg9943vq93AmFKnbtrFd7bfZBiGBmOgiYYKD7qipJyirD8a3KxZC2GgLXxok3Dj2ZBObBCyBqHoLywAZAdC7mpmnbcTOYKZCZB6wZD"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "fd2f2812-02b4-440b-9bd3-86d14e800d97",
      "name": "send fb3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2580,
        4720
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1lM_TG2ExLdbs1YoBcaFzBFscVqB3MOEFjBFnvE9kAa0/edit?gid=0#gid=0",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": 2060972300,
          "mode": "list",
          "cachedResultName": "client_message_cms",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1lM_TG2ExLdbs1YoBcaFzBFscVqB3MOEFjBFnvE9kAa0/edit#gid=2060972300"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id_client_message": "={{ $('Loop Over Items1').item.json.id_client_message }}",
            "status_ticket": "ok"
          },
          "matchingColumns": [
            "id_client_message"
          ],
          "schema": [
            {
              "id": "conversation_id",
              "displayName": "conversation_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "update_time",
              "displayName": "update_time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "id_client_message",
              "displayName": "id_client_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "id_workchat",
              "displayName": "id_workchat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "name_client_facebook",
              "displayName": "name_client_facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email_client_facebook",
              "displayName": "email_client_facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "message_worchat",
              "displayName": "message_worchat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email_worksuit",
              "displayName": "email_worksuit",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status_ticket",
              "displayName": "status_ticket",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "06737191-91e0-4576-b208-7702ae9f5593",
      "name": "Save messaage8",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        2800,
        4720
      ],
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "P5h6CdXmV7twphIt",
          "name": "Canh Google Sheets"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  let messagerAI = $node['Code Convert to JSON']?.json?.jsonOutput?.description\n  messagerAI = messagerAI.replace(/\\n\\n/g, '\\\\n\\\\n');\n  messagerAI = messagerAI.replace(/\\n/g, '\\\\n');\n  messagerAI = messagerAI.replace(/<br><br>/g, '\\\\n');\n  item.json.output = messagerAI;\n}\n\nreturn $input.all();\n"
      },
      "id": "df2af554-0832-41f8-9295-43a7e88d562a",
      "name": "Code9",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2020,
        4460
      ]
    },
    {
      "parameters": {
        "resource": "project",
        "operation": "create",
        "projectName": "={{ $('Cloodo CRM1').item.json.data[0].user.name }} Project",
        "start_date": "={{ $now }}",
        "user_id": "=[\"5b731bad-fc3a-4abd-b768-4a69da1df5ad\"]",
        "additionalFields": {
          "client_id": "=\"{{ $('Cloodo CRM1').item.json.data[0].user.id }}\""
        },
        "requestOptions": {}
      },
      "id": "086761c6-daff-42bb-8419-4798da3796b5",
      "name": "Create Project",
      "type": "@cloodo/n8n-nodes-cloodo-crm.CloodoLeads",
      "typeVersion": 1,
      "position": [
        600,
        4460
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "resource": "assistant",
        "assistantId": {
          "__rl": true,
          "value": "asst_zcZjKKD7msrnRvUMoHUoWzhV",
          "mode": "list",
          "cachedResultName": "Cmsmart AI"
        },
        "prompt": "define",
        "text": "=You are a project assistant whom responsible for creating client-facing tickets based on provided chat or email content. \n\nAnalyze the following conversation messages between the client and admin. Focus on the most recent messages sent by the client, especially the last one, to determine the client's intent and construct a JSON object based on the following format:\n{\n  \"title\": \"\",\n  \"description\": \"\",\n  \"note\":\"\",\n  \"type\":\"\",\n  \"type_ticket\"\n\n}\n\nInstructions:  \n1. title: Title of the problem the customer encountered:\n2. description: is a detailed description of the problem, \nThe description must include the following sections:\n\n2.1. Summary of Request: A concise overview of what the client is asking for, written in a client-friendly tone.\n2.2 Proposed Next Steps: Clearly outline what actions will be taken by the team and any required input from the client.\n2.3. Action Items: Break down actionable tasks for the internal team and the client.\n\nUse this format:\n\nSummary of Request\n[Summarize the client’s request in a professional and client-friendly tone.]\n\nProposed Next Steps\n[List the steps the team will take to address the request, as well as any input required from the client.]\n\nAction Items\nFor Our Team:\n[List specific tasks for the team to complete.]\nFor You:\n[List any actions required from the client, if applicable.]\n\nMake sure the ticket is clear, actionable, and formatted for both internal use and client review. Use professional and concise language throughout.\n\nSample Input:\n\"tung wants to add a 'Manage Cart' feature to the Auto Reply from WF 50 project.\"\n\nExpected Output:\nA complete ticket with all required sections and a professional tone, formatted as per the structure above.\n\nBase on summary problem provided and History chat messages, let create an object with subject anb message.\n3. note: additional notes, notes, further explanations of the problem and the last .\n4. Ensure the JSON is correctly formatted, valid, and accurately reflects the client’s most recent intent.   \n5. Do not include any explanation, only return the JSON object in the exact specified format.\n6. Remember alway Write description with format like a detail email profesional for our client (Dear [client name]) and focus on problem what client need to help, what client need to help. use html tag for text effect like <strong> for bold text .\n7. type is an analysis of whether the customer conversation has a clear issue if it is a \"clear issue\" or  \"not clear issue\", in which the not clear issue is the conversations such as greeting , unspecified problem...\n8. type_ticket : I have: \na7449e63-6ce3-4840-ab67-27298faf086f -> Product Enquiry,\n0c8ba87a-f6ae-44c2-9c4d-404c49ec255b -> Payment & Billing,\n00f4494e-68c5-4926-9ff1-3faafe812e94 -> Setup Assistance ,\n2b32b674-741a-4833-8328-925a48bef030 -> Feature Requests,\n4bbfa6dd-beb7-43af-926c-f736ca00bdd3 -> Project Maintenance ,\n28cab752-15e1-433e-8abf-609fde9b5b7f -> Renewal and Upsell ,\nf58a0a7e-9561-4cac-a326-6e0cfe93360b -> Onboarding and Training,\n6dc7b7c5-a130-4357-9d83-03030a8a134f -> Custom Development ,\n7abb55c6-8135-44db-b99a-8cabd31aeab0 -> Business Meeting,\n89050de5-8c35-4947-92d2-2c108b32aaa4 -> Extra Service ,\n\n\nare the ids are the names of the ticket types, please classify that content by the ticket type name whichever is appropriate and give me that type of ticket\nCategorization rules:  \n\n1. Product Inquiry  \n   - Keywords: Form requests, new client messages, pricing, product details, compatibility, feature comparisons, demos, trials.  \n   - Client Context: Questions from new or potential clients about product features, compatibility, pricing, or demo requests.  \n   - Examples:  \n     - \"What’s the cost of the Printshop Premium package?\"  \n     - \"Can I see a demo of the Product Designer tool?\"  \n\n2. Payment & Billing  \n   - Keywords: Cancel subscription, refund request, renewal inquiries, invoices, payment errors, prorated upgrades/downgrades.  \n   - Client Context: Issues related to payments, subscriptions, or invoices from clients.  \n   - Examples:  \n     - \"How can I get a refund for my subscription?\"  \n     - \"I need to renew my license for another year.\"  \n\n3. Setup Assistance  \n   - Keywords: Installation, download issues, free plugins, domain setup, hosting issues, product configuration, API setup.  \n   - Client Context: Clients seeking help with the initial setup of a system, plugin, or eCommerce platform.  \n   - Examples:  \n     - \"Help me set up my domain and hosting.\"  \n     - \"I need assistance installing free plugins.\"  \n\n4. Feature Request  \n   - Keywords: Add feature, new functionality, expand capabilities, request enhancement, tool improvement, custom modules.  \n   - Client Context: Clients requesting new features or enhancements for existing tools.  \n   - Examples:  \n     - \"Can you add a one-click checkout feature?\"  \n     - \"I’d like a feature for advanced reporting.\"  \n\n5. Project Maintenance  \n   - Keywords: Bug fix, performance issues, general support requests, system downtime, error reports, minor improvements.  \n   - Client Context: Ongoing support requests from existing clients for bugs, performance optimization, or fixes.  \n   - Examples:  \n     - \"Fix the 500 error on the homepage.\"  \n     - \"The checkout page isn’t working properly.\"  \n\n6. Renewal and Upsell  \n   - Keywords: Contract renewal, subscription upsell, add-on features, expanding services.  \n   - Client Context: Clients looking to renew contracts, subscriptions, or add additional services.  \n   - Examples:  \n     - \"I’d like to renew my subscription for another year.\"  \n     - \"Can you provide an upsell package for advanced analytics?\"  \n\n7. Onboarding and Training  \n   - Keywords: Training session, onboarding assistance, platform overview, user training.  \n   - Client Context: New clients needing guidance to get started with a product or service.  \n   - Examples:  \n     - \"Can you guide me through the platform setup?\"  \n     - \"We need training for our team on the new software.\"  \n\n8. Custom Development  \n   - Keywords: Bespoke features, tailor-made solutions, custom-built modules, specific functionality.  \n   - Client Context: Clients requesting customized solutions tailored to their specific business needs.  \n   - Examples:  \n     - \"We need a custom-built module for order tracking.\"  \n     - \"Can you create a feature that integrates with our existing CRM?\"  \n\n9. Business Meeting  \n   - Keywords: Scheduling meetings, meeting memo, project discussions, progress updates.  \n   - Client Context: Coordination and scheduling of meetings between clients and team members.  \n   - Examples:  \n     - \"Let’s schedule a meeting to discuss the project roadmap.\"  \n     - \"We need to have a progress review with your team next week.\"  \n\n10. Extra Service  \n    - Keywords: Additional service, beyond scope, add-on requests, non-standard service.  \n    - Client Context: Clients requesting extra services beyond what is included in their plan.  \n    - Examples:  \n      - \"Can you provide a custom report for our sales data?\"  \n      - \"We’d like additional security monitoring for our servers.\"  \n\nHere are the history conversation messages: \n\nInformation of client\nclient name: {{ $('Loop Over Items1').item.json.name_client_facebook }}\nproject name : {{ $('Create Project').item.json.data[0].name }}\nSummary problem:\n{{ $json.messagesSent }}\n\nALWAYS respond only with the correctly formatted JSON object.",
        "options": {}
      },
      "id": "3da4638d-4f16-4c10-b246-3bd8be186668",
      "name": "OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.7,
      "position": [
        1440,
        4460
      ],
      "credentials": {
        "openAiApi": {
          "id": "wXCGwiut9MvtTGmk",
          "name": "OpenAI CMS"
        }
      }
    },
    {
      "parameters": {
        "resource": "client",
        "operation": "update",
        "ID": "={{ $json.data[0].user.id }}",
        "additionalFields": {
          "name": "={{ $('Loop Over Items1').item.json.name_client_facebook }}"
        },
        "requestOptions": {}
      },
      "id": "87aa13e1-5a66-42f0-bc65-e4d491ebafc1",
      "name": "Cloodo CRM6",
      "type": "@cloodo/n8n-nodes-cloodo-crm.CloodoLeads",
      "typeVersion": 1,
      "position": [
        -140,
        4480
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.cloodo.com/link_account_fb.php",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "email",
              "value": "={{ $('Loop Over Items1').item.json.email_client_facebook }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "271a0ec6-c8d9-40c5-8742-7a19cfb6ff34",
      "name": "getLink",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6040,
        2740
      ],
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://erp-amz.cloodo.com/v4/clients",
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json^",
        "body": "^^{^\\^name^\\^:^\\^Stephane",
        "options": {}
      },
      "id": "d488b6e2-18aa-46b1-84d2-b06b98837ff8",
      "name": "HTTP Request2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -300,
        4460
      ]
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1lM_TG2ExLdbs1YoBcaFzBFscVqB3MOEFjBFnvE9kAa0/edit?gid=0#gid=0",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": 2060972300,
          "mode": "list",
          "cachedResultName": "client_message_cms",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1lM_TG2ExLdbs1YoBcaFzBFscVqB3MOEFjBFnvE9kAa0/edit#gid=2060972300"
        },
        "options": {
          "dataLocationOnSheet": {
            "values": {
              "rangeDefinition": "specifyRange",
              "firstDataRow": 755
            }
          }
        }
      },
      "id": "1eed7283-3d7f-41cb-b5ec-673b01a9a325",
      "name": "Save messaage9",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        220,
        1960
      ],
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "P5h6CdXmV7twphIt",
          "name": "Canh Google Sheets"
        }
      }
    },
    {
      "parameters": {
        "resource": "client",
        "operation": "create",
        "name": "={{ $('Loop Over Items').item.json.name_client_facebook }}",
        "passwordClinet": "=x7M&dL!9wQ#2tV4%",
        "clientEmail": "={{ $('Loop Over Items').item.json.email_worksuit }}",
        "additionalFields": {},
        "requestOptions": {}
      },
      "id": "c39de4d0-01be-4cfc-95a4-68467125340a",
      "name": "Cloodo CRM8",
      "type": "@cloodo/n8n-nodes-cloodo-crm.CloodoLeads",
      "typeVersion": 1,
      "position": [
        2620,
        820
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://erp-amz.cloodo.com/v4/client-contacts",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json^",
        "body": "={\n    \"title\": \"Facebook\",\n    \"name\": \"{{ $('Loop Over Items').item.json.name_client_facebook }}\",\n    \"email\": \"{{ $('Loop Over Items').item.json.email_client_facebook }}\",\n    \"phone\": \"\",\n    \"user_id\": \"{{ $json.data.user.id }}\"\n}",
        "options": {}
      },
      "id": "a061e022-2cd4-4279-91ed-1f373fc15fbd",
      "name": "Update contact client4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2860,
        820
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "resource": "project",
        "operation": "create",
        "projectName": "={{ $('Cloodo CRM8').item.json.data.user.name }} Project",
        "start_date": "={{ $now }}",
        "user_id": "=[\"5b731bad-fc3a-4abd-b768-4a69da1df5ad\"]",
        "additionalFields": {
          "client_id": "=\"{{ $('Cloodo CRM8').item.json.data.user.id }}\""
        },
        "requestOptions": {}
      },
      "id": "dc9e9d5a-50b4-4d20-9c10-e1243079499f",
      "name": "Cloodo CRM9",
      "type": "@cloodo/n8n-nodes-cloodo-crm.CloodoLeads",
      "typeVersion": 1,
      "position": [
        3140,
        820
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT *, (\n  SELECT COUNT(*) FROM user_chats WHERE (user_chats.from = 62844 AND user_chats.to = {{ $('Loop Over Items').item.json.id_workchat }}) OR  (user_chats.from = {{ $('Loop Over Items').item.json.id_workchat }} AND user_chats.to = 62844)\n) AS Total_Messages\nFROM user_chats\nWHERE \n  (user_chats.from = 62844 AND user_chats.to = {{ $('Loop Over Items').item.json.id_workchat }}) \n  OR \n  (user_chats.from = {{ $('Loop Over Items').item.json.id_workchat }} AND user_chats.to = 62844) ORDER BY user_chats.created_at DESC;",
        "options": {}
      },
      "id": "599fd867-2799-487f-8058-75a333517f60",
      "name": "Get Detail Messages2",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.2,
      "position": [
        3360,
        820
      ],
      "credentials": {
        "mySql": {
          "id": "SJei6ksLjiCIXFRS",
          "name": "Worksuite database"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "87b125aa-20c9-4ccd-aff8-8314cc103c8a",
      "name": "Aggregate2",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        3540,
        820
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Kiểm tra dữ liệu Aggregate1\nconst listMessages = $node['Aggregate2']?.json?.data || [];\nif (listMessages.length === 0) {\n  throw new Error(\"Node 'Aggregate1' không có dữ liệu hoặc không tồn tại.\");\n}\n\n// ID nhân viên của bạn\nconst employeeId = 62844;\n\n// Bắt đầu tạo nội dung tài liệu\nlet document = 'List Messages sent by client with admin: \\n';\n\n// Duyệt qua danh sách tin nhắn\nfor (const item of listMessages.reverse()) {\n  if (item?.from === employeeId) {\n    document += `Admin sent: ${item?.message} \\n\\n`;\n  } else {\n    document += `Client sent: ${item?.message} \\n\\n`;\n  }\n}\n\n// Tin nhắn cuối cùng gửi bởi khách hàng\nconst lastClientMessage = listMessages.find(\n  (item) => item.from !== employeeId\n)?.message || 'No messages from client';\n\n// Thêm thông tin tin nhắn cuối cùng của khách hàng vào tài liệu\ndocument += `\\n\\nLast message sent by client: ${lastClientMessage}`;\n\n// Kiểm tra dữ liệu từ node \"a Project client\"\nconst inputData = $node['Cloodo CRM9']?.json?.data || [];\nif (inputData.length === 0) {\n  throw new Error(\"Node 'a Project client' không có dữ liệu hoặc không tồn tại.\");\n}\n\nlet agent = '';\nlet projectId = '';\n\nif (inputData.length === 1) {\n  // Nếu chỉ có một dự án, lấy thông tin thành viên đầu tiên\n  const projectMembers = inputData[0]?.projectMembers || [];\n  if (projectMembers.length > 0) {\n    agent = projectMembers[0]?.id; // Gán ID thành viên đầu tiên làm agent\n  }\n  projectId = inputData[0]?.id || ''; // Gán ID dự án\n} else {\n  // Nếu có nhiều dự án, để trống các giá trị\n  agent = '';\n  projectId = '';\n}\n\n// Log kết quả để debug\nconsole.log({ agent, projectId });\nconsole.log(document);\n\n// Trả về tài liệu đã tạo và thông tin agent, projectId\nreturn { messagesSent: document, agent, projectId };\n"
      },
      "id": "7520f9e3-27fc-44c4-a53e-4e135ad16b5d",
      "name": "Get All Messages and id agent2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3740,
        820
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const inputStr = $input.item.json.output;\n\n// Remove the surrounding Markdown-style code block (```json ... ```)\nconst cleanedInput = inputStr.replace(/^```json|\\n```$/g, '').trim();\n\n// Remove newlines and excessive spaces\nconst formattedInput = cleanedInput.replace(/\\n/g, ' ').replace(/\\s+/g, ' ');\n\n// Remove any trailing comma in the JSON string (before the closing brace)\nconst validJson = formattedInput.replace(/,\\s*}$/g, '}');\n\n// Parse the cleaned-up string into a JSON object\nconst jsonObject = JSON.parse(validJson);\n\n\nreturn {jsonOutput: jsonObject};\n"
      },
      "id": "50803bf4-685e-4f3c-b4ab-607c54c6c6f5",
      "name": "Code Convert to JSON2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4340,
        820
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "18d839e2-523c-4fa2-822c-b556cf15f2d5",
              "leftValue": "={{ $json.jsonOutput.type }}",
              "rightValue": "clear issue",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9f60fead-bca3-4faf-ad79-91199670d648",
      "name": "check have issue2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4740,
        820
      ]
    },
    {
      "parameters": {
        "resource": "engagement",
        "ID": "={{ $json.data.id }}",
        "requestOptions": {}
      },
      "id": "a7fb5255-8447-4d52-b75d-0d8c55a92cd1",
      "name": "Get Ticket2",
      "type": "@cloodo/n8n-nodes-cloodo-crm.CloodoLeads",
      "typeVersion": 1,
      "position": [
        5160,
        800
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://erp-amz.cloodo.com/v4/ticket-replies",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "={\n  \"message\": \"<p><strong>Dear {{ $('Create Ticket4').item.json.data.requester.name }},</strong></p><p>We hope you're doing well. We noticed that it has been a while since we last heard from you regarding your support ticket. To ensure efficiency and focus on active requests, we will be closing this ticket soon.</p><p><strong>If your issue has been resolved</strong>, no further action is needed.</p><p><strong>If you still require assistance</strong>, please reply to this email or reopen the ticket, and we’ll be happy to help.</p><h3><strong>Need Further Support?</strong></h3><p>If you have any additional questions or need further support in the future, feel free to contact us anytime. Our team is always here to assist you.</p><p>Thank you for choosing our services. We appreciate your time and trust.</p><p><strong>Best regards,</strong></p><p><strong>The Support Team</strong></p>\",\n  \"external_link\": \"\",\n  \"ticket_id\": \"{{ $('Create Ticket4').item.json.data.id }}\"\n}\n",
        "options": {}
      },
      "id": "53ded029-ecc2-49c5-8485-e88c613be619",
      "name": "HTTP Request3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5360,
        800
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "resource": "engagement",
        "operation": "update",
        "ID": "={{ $('Create Ticket4').item.json.data.id }}",
        "additionalFields": {
          "statusId": "closed"
        },
        "requestOptions": {}
      },
      "id": "aba7e5fe-8ab2-4a14-98de-c031f4e86b96",
      "name": "Cloodo CRM10",
      "type": "@cloodo/n8n-nodes-cloodo-crm.CloodoLeads",
      "typeVersion": 1,
      "position": [
        5560,
        800
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v22.0/213439902114044/messages",
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "recipient",
              "value": "={\"id\":\"{{ $('Loop Over Items').item.json.id_client_message }}\"}"
            },
            {
              "name": "messaging_type",
              "value": "MESSAGE_TAG"
            },
            {
              "name": "tag",
              "value": "ACCOUNT_UPDATE"
            },
            {
              "name": "message",
              "value": "={\"text\":\"Hello {{ $('Loop Over Items').item.json.name_client_facebook }},\\n\\nBased on our conversation, I have opened a support ticket ({{ $('Create Ticket4').item.json.data.ticket_number }}) on your behalf. You can check and follow up anytime here:\\n\\n🔗 Cmsmart Dashboard Support Ticket:\\nhttps://dashboard.cmsmart.net/apps/tickets/all-tickets\\n\\n🔹 Login Details:\\n\\nUsername: {{ $('Create Ticket4').item.json.data.requester.email }}\\nIf you don't have an account yet, you can create one with your email here: https://cmsmart.net/login?view=registration\\nIf you forgot your password, reset it here: https://cmsmart.net/login?view=reset\\nIf you have any questions, please email support@cmsmart.net or chat with Vincent on WhatsApp:\\n📩 WhatsApp: https://wa.me/+84967319788\\n\\nLet us know if you need more information! 😊\\n\\nBest regards,\\nCmsmart E-commerce Team\"}"
            },
            {
              "name": "access_token",
              "value": "EAA3ZCtCZCe57kBOzXf4fqSrVflYWE5Fk2P0BNfjOerautjGD8cKV0pZAnvdV3zRQwokzJiKmPUZBRWFn8Tmeq2rPD4zCHvZAZCRZCg9943vq93AmFKnbtrFd7bfZBiGBmOgiYYKD7qipJyirD8a3KxZC2GgLXxok3Dj2ZBObBCyBqHoLywAZAdC7mpmnbcTOYKZCZB6wZD"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "321fe064-8be8-4ad6-bd0e-78de6afd7a0b",
      "name": "send fb4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5760,
        800
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1lM_TG2ExLdbs1YoBcaFzBFscVqB3MOEFjBFnvE9kAa0/edit?gid=0#gid=0",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": 2060972300,
          "mode": "list",
          "cachedResultName": "client_message_cms",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1lM_TG2ExLdbs1YoBcaFzBFscVqB3MOEFjBFnvE9kAa0/edit#gid=2060972300"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id_client_message": "={{ $('Loop Over Items').item.json.id_client_message }}",
            "status_ticket": "ok"
          },
          "matchingColumns": [
            "id_client_message"
          ],
          "schema": [
            {
              "id": "conversation_id",
              "displayName": "conversation_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "update_time",
              "displayName": "update_time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "id_client_message",
              "displayName": "id_client_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "id_workchat",
              "displayName": "id_workchat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "name_client_facebook",
              "displayName": "name_client_facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email_client_facebook",
              "displayName": "email_client_facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "message_worchat",
              "displayName": "message_worchat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email_worksuit",
              "displayName": "email_worksuit",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status_ticket",
              "displayName": "status_ticket",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "83030a47-0a3d-44dc-b8bb-8c31a80405bc",
      "name": "Save messaage10",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        5980,
        800
      ],
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "P5h6CdXmV7twphIt",
          "name": "Canh Google Sheets"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://erp-amz.cloodo.com/v4/tickets",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"tags\": [],\n  \"project_id\": \"{{ $('Cloodo CRM9').item.json.data.id }}\",\n  \"user_id\": \"{{ $('Cloodo CRM8').item.json.data.user.id }}\",\n  \"subject\": \"{{ $('check have issue2').item.json.jsonOutput.title }}\",\n  \"priority\": \"medium\",\n  \"agent_id\": \"2c991f1a-6665-4533-bfca-ac969f431eb2\",\n  \"type_id\": \"{{ $json.jsonOutput.type_ticket_id }}\",\n  \"channel_id\": \"931082dc-2e77-4c9a-86e6-b3c20a5c6b22\",\n  \"status\": \"open\",\n \"message\": \"{{ $json.output }}\",\n  \"note\": \"{{ $('check have issue2').item.json.jsonOutput.note }}\",\n  \"ticket_files\": [],\n  \"created_at\": \"{{ $('Loop Over Items').item.json.update_time }}\"\n\n}",
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "013e2335-25e9-4cf3-afb2-08a689a847f7",
      "name": "Create Ticket4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4960,
        800
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v22.0/213439902114044/messages",
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "recipient",
              "value": "={\"id\":\"{{ $('Loop Over Items').item.json.id_client_message }}\"}"
            },
            {
              "name": "messaging_type",
              "value": "MESSAGE_TAG"
            },
            {
              "name": "tag",
              "value": "ACCOUNT_UPDATE"
            },
            {
              "name": "message",
              "value": "={\"text\":\"Hello {{ $('Cloodo CRM8').item.json.data.user.name }},\\n\\nBased on our conversation, I have created an account on your behalf to better assist you. You can check and follow up anytime here:\\n\\n🔗 Cmsmart Dashboard Support Ticket:\\nhttps://dashboard.cmsmart.net/apps/tickets/all-tickets\\n\\n🔹 Login Details:\\n\\nUsername: {{ $('Cloodo CRM8').item.json.data.user.email }}\\nIf you don't have an account yet, you can create one with your email here: https://cmsmart.net/login?view=registration\\nIf you forgot your password, reset it here: https://cmsmart.net/login?view=reset\\nIf you have any questions, please email support@cmsmart.net or chat with Vincent on WhatsApp:\\n📩 WhatsApp: https://wa.me/+84967319788\\n\\nLet us know if you need more information! 😊\\n\\nBest regards,\\nCmsmart E-commerce Team\"}"
            },
            {
              "name": "access_token",
              "value": "EAA3ZCtCZCe57kBOzXf4fqSrVflYWE5Fk2P0BNfjOerautjGD8cKV0pZAnvdV3zRQwokzJiKmPUZBRWFn8Tmeq2rPD4zCHvZAZCRZCg9943vq93AmFKnbtrFd7bfZBiGBmOgiYYKD7qipJyirD8a3KxZC2GgLXxok3Dj2ZBObBCyBqHoLywAZAdC7mpmnbcTOYKZCZB6wZD"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "02386b26-8526-4060-8d37-efadf88bdfd7",
      "name": "send fb5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4960,
        1100
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1lM_TG2ExLdbs1YoBcaFzBFscVqB3MOEFjBFnvE9kAa0/edit?gid=0#gid=0",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": 2060972300,
          "mode": "list",
          "cachedResultName": "client_message_cms",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1lM_TG2ExLdbs1YoBcaFzBFscVqB3MOEFjBFnvE9kAa0/edit#gid=2060972300"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id_client_message": "={{ $('Loop Over Items').item.json.id_client_message }}",
            "status_ticket": "ok"
          },
          "matchingColumns": [
            "id_client_message"
          ],
          "schema": [
            {
              "id": "conversation_id",
              "displayName": "conversation_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "update_time",
              "displayName": "update_time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "id_client_message",
              "displayName": "id_client_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "id_workchat",
              "displayName": "id_workchat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "name_client_facebook",
              "displayName": "name_client_facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email_client_facebook",
              "displayName": "email_client_facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "message_worchat",
              "displayName": "message_worchat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email_worksuit",
              "displayName": "email_worksuit",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status_ticket",
              "displayName": "status_ticket",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "3e4d9f8c-2e06-4421-89b8-deb14c4c3a21",
      "name": "Save messaage11",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        5180,
        1100
      ],
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "P5h6CdXmV7twphIt",
          "name": "Canh Google Sheets"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  let messagerAI = $node['Code Convert to JSON2']?.json?.jsonOutput?.description\n  messagerAI = messagerAI.replace(/\\n\\n/g, '\\\\n\\\\n');\n  messagerAI = messagerAI.replace(/\\n/g, '\\\\n');\n  messagerAI = messagerAI.replace(/<br><br>/g, '\\\\n');\n  item.json.output = messagerAI;\n}\n\nreturn $input.all();\n"
      },
      "id": "def2f03f-cd7b-44fe-8a6b-937486d8d8ef",
      "name": "Code10",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4540,
        820
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v22.0/213439902114044/messages",
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "recipient",
              "value": "={\"id\":\"8142858525816870\"}"
            },
            {
              "name": "messaging_type",
              "value": "MESSAGE_TAG"
            },
            {
              "name": "tag",
              "value": "ACCOUNT_UPDATE"
            },
            {
              "name": "message",
              "value": "={\"text\":\"Hello ΓΙΩΡΓΟΣ ΤΖΙΝΟ ΚΑΡΑΘΑΝΟΣ,\\n\\nBased on our conversation, I have opened a support ticket (#33112) on your behalf. You can check and follow up anytime here:\\n\\n🔗 Cmsmart Dashboard Support Ticket:\\nhttps://dashboard.cmsmart.net/apps/tickets/all-tickets\\n\\n🔹 Login Details:\\n\\nUsername: info@toca.gr\\nIf you don't have an account yet, you can create one with your email here: https://cmsmart.net/login?view=registration\\nIf you forgot your password, reset it here: https://cmsmart.net/login?view=reset\\nIf you have any questions, please email support@cmsmart.net or chat with Vincent on WhatsApp:\\n📩 WhatsApp: https://wa.me/+84967319788\\n\\nI've also created an account for you on 🔗 https://worksuite.cloodo.com/apps/tickets/all-tickets/2342323.\\nThis is my client's project management and ticketing website. Please visit the link above with your login information:\\n- **Username:** ll \\n- **Password:** x7M&dL!9wQ#2tV4%\\n\\nWhen you log in, you need to change your personal information and password, Click on transfer company to CmsMart. If you forgot your password or need to change it, you can reset it via the following link:\\n🔗 [Reset Password](https://worksuite.cloodo.com/forgot-password)\\n\\nIf you have any other questions, please contact us.\\n\\nLet us know if you need more information! 😊\\n\\nBest regards,\\nCmsmart E-commerce Team\"}"
            },
            {
              "name": "access_token",
              "value": "EAA3ZCtCZCe57kBOzXf4fqSrVflYWE5Fk2P0BNfjOerautjGD8cKV0pZAnvdV3zRQwokzJiKmPUZBRWFn8Tmeq2rPD4zCHvZAZCRZCg9943vq93AmFKnbtrFd7bfZBiGBmOgiYYKD7qipJyirD8a3KxZC2GgLXxok3Dj2ZBObBCyBqHoLywAZAdC7mpmnbcTOYKZCZB6wZD"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "629c0404-a453-4d8c-9966-8986b7aa2d71",
      "name": "send fb6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2380,
        160
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.cloodo.com/mautic.php",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {}
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "email",
              "value": "={{ $json.data[0].agenEmail }}"
            },
            {
              "name": "uname",
              "value": "={{ $json.data[0].agentName }}"
            },
            {
              "name": "subject",
              "value": "=Respond to tickets when customers respond"
            },
            {
              "name": "send_mail",
              "value": "cmsmart"
            },
            {
              "name": "email_id",
              "value": "109"
            },
            {
              "name": "content",
              "value": "=<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Ticket Closure Reminder</title>\n</head>\n\n<body style=\"font-family: Arial, sans-serif; color: #333; line-height: 1.6; margin: 0;\">\n    <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"background-color: #fff;\">\n        <!-- Content -->\n        <tr>\n            <td style=\"font-size: 14px; color: black\">\n                <p>Dear {{ $json.data[0].agentName }},</p>\n<p>I hope this message finds you well.</p>\n<p>This is a friendly reminder to please ensure that all customer tickets are responded to in a timely manner. Once a customer responds, it is important to follow up within 24 hours. Failure to do so will result in points being deducted from the CmsMart Admin system.</p>\n\n<p>Key points to remember:</p>\n\n<ul>\n<li>Ensure timely responses to customer feedback.</li>\n<li>Reply within 24 hours to avoid penalties.</li>\n<li>Points will be deducted from the CmsMart Admin for slow responses.</li>\n</ul>\n\n<p>We appreciate your cooperation and concern for this issue.</p>\n\n<p>Here is the ticket you need to respond to:</p>\n\n                <table width=\"100%\" cellpadding=\"5\" cellspacing=\"0\" style=\"border-collapse: collapse;\">\n                    <tr>\n                        <th style=\"border-bottom: 1px solid #ddd; text-align: left;\">Ticket ID</th>\n<th style=\"border-bottom: 1px solid #ddd; text-align: left;\">Subject</th>\n<th style=\"border-bottom: 1px solid #ddd; text-align: left;\">Client</th>\n<th style=\"border-bottom: 1px solid #ddd; text-align: left;\">Status</th>\n<th style=\"border-bottom: 1px solid #ddd; text-align: left;\">Type</th>\n<th style=\"border-bottom: 1px solid #ddd; text-align: left;\">Project</th>\n<th style=\"border-bottom: 1px solid #ddd; text-align: left;\">Agent</th>\n                      \n                    </tr>\n\n               {{ $json[\"data\"].map(item => `\n                <tr>\n                    <td style=\"border-bottom: 1px solid #ddd; padding: 8px;\"><a href=\"https://worksuite.cloodo.com/apps/tickets/all-tickets/${item.idTicket}\" style=\"color: #007bff; text-decoration: none;\">Ticket${item.numberTicket}</a></td>\n<td style=\"border-bottom: 1px solid #ddd; padding: 8px;\">${item.subjectTicket}</td>\n<td style=\"border-bottom: 1px solid #ddd; padding: 8px;\">${item.nameClient}</td>\n<td style=\"border-bottom: 1px solid #ddd; padding: 8px;\">${item.statusTicket}</td>\n<td style=\"border-bottom: 1px solid #ddd; padding: 8px;\">${item.typeTicket}</td>\n<td style=\"border-bottom: 1px solid #ddd; padding: 8px;\">${item.projectTicket}</td>\n<td style=\"border-bottom: 1px solid #ddd; padding: 8px;\">${item.agentName}</td>\n                </tr>\n                `).join('') }}\n                </table>\n\n                <p>Best regards,</p>\n                <p>Cms Admin</p>\n            </td>\n        </tr>\n    </table>\n</body>\n\n</html>\n"
            }
          ]
        },
        "options": {}
      },
      "id": "f55eff91-f671-41a6-8719-d0ac17726b01",
      "name": "Send mail Reply Ticket1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6980,
        2440
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.cloodo.com/mautic.php",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {}
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "email",
              "value": "={{ $('Set Value').item.json.Agent.email }}"
            },
            {
              "name": "uname",
              "value": "={{ $('Set Value').item.json.Agent.name }}"
            },
            {
              "name": "subject",
              "value": "="
            },
            {
              "name": "send_mail",
              "value": "cmsmart"
            },
            {
              "name": "email_id",
              "value": "109"
            },
            {
              "name": "content",
              "value": "=<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n</head>\n\n<body style=\"font-family: Arial, sans-serif; color: #333; line-height: 1.6; margin: 0;\">\n    <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\" background-color: #fff;\">\n        <!-- Content -->\n        <tr>\n            <td style=\"font-size: 14px; color: black\">\n                <p>Dear {{ $('Set Value').item.json.Agent.name }},</p></br>\n                <p>{{ $('Standardize').item.json.textHtml }}</p>\n<strong>Link project: <a href=\"https://worksuite.cloodo.com/apps/work/project/{{ $('Set Value').item.json.Project.id }}\">{{ $('Set Value').item.json.Project.name }}</a></strong>\n                <p>Best Regards,</p>\n                <p>CmsMart Admin</p>\n            </td>\n        </tr>\n        \n \n    </table>\n</body>\n\n</html>\n\n"
            }
          ]
        },
        "options": {}
      },
      "id": "eb09c696-d018-4285-999c-2be1b73d8535",
      "name": "send mail",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1940,
        180
      ]
    },
    {
      "parameters": {
        "jsCode": "let oldData = $input.all()[0]?.json?.output;\n\n// Replace new lines with <br> tags\noldData = oldData.replace(/\\n\\n<br>\\n\\n/g, '<br>');\noldData = oldData.replace(/\\n\\n/g, '');\noldData = oldData.replace(/\\n/g, '');\noldData = oldData.replace(/```html/g, '');\noldData = oldData.replace(/```/g, '');\n\n\n// Replace ** with <strong> tags for bold text\noldData = oldData.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\n\n// Replace ### with <h3> tags for subheadings\noldData = oldData.replace(/###\\s*(.*?)(<br>|$)/g, '<h3>$1</h3>');\n\nreturn { textHtml: oldData };\n\n"
      },
      "id": "6339f726-1c58-4f59-a872-acbdbae59e50",
      "name": "Standardize",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1180,
        320
      ]
    },
    {
      "parameters": {
        "resource": "assistant",
        "assistantId": {
          "__rl": true,
          "value": "asst_zcZjKKD7msrnRvUMoHUoWzhV",
          "mode": "list",
          "cachedResultName": "Cmsmart AI"
        },
        "prompt": "define",
        "text": "=Using card html ex: Only user card (<p>, <strong>, <ul>, <li>) \nReturn require start Dear and end Best regards,\nCmsmart E-commerce Team\nGenerate a personalized email notification for a Cmsmart user regarding the creation of a support ticket. The email should include:\n\nA friendly greeting with the user's full name \nConfirmation that a support ticket has been created on their behalf, including the ticket number (#33112).\nA direct link to check and follow up on the ticket: https://dashboard.cmsmart.net/apps/tickets/all-tickets\nLogin details (if available), with guidance on account creation or password reset:\nSign in: https://cmsmart.net/login\nRegister an account: https://cmsmart.net/login?view=registration\nPassword reset: https://cmsmart.net/login?view=reset\nCmsmart support email: support@cmsmart.net\nWhatsApp support contact for direct chat with Cmsmart's customer support (Vincent): https://wa.me/+84978847058\nA warm closing message encouraging the user to reach out if they need any further assistance.\nEnsure the message is concise, professional, and engaging while maintaining a supportive and customer-friendly tone.",
        "options": {}
      },
      "id": "ab7cadd2-517d-4c3b-b38e-16b943c2542b",
      "name": "OpenAI3",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.7,
      "position": [
        780,
        320
      ],
      "credentials": {
        "openAiApi": {
          "id": "wXCGwiut9MvtTGmk",
          "name": "OpenAI CMS"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT *, (\n  SELECT COUNT(*) FROM user_chats WHERE (user_chats.from = 62844 AND user_chats.to = {{ $('Loop Over Items').item.json.id_workchat }}) OR  (user_chats.from = {{ $('Loop Over Items').item.json.id_workchat }} AND user_chats.to = 62844)\n) AS Total_Messages\nFROM user_chats\nWHERE \n  (user_chats.from = 62844 AND user_chats.to = {{ $('Loop Over Items').item.json.id_workchat }}) \n  OR \n  (user_chats.from = {{ $('Loop Over Items').item.json.id_workchat }} AND user_chats.to = 62844) ORDER BY user_chats.created_at DESC;",
        "options": {}
      },
      "id": "67678055-750a-4d7c-9ee6-2479074f8977",
      "name": "Get Detail Messages3",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.2,
      "position": [
        3560,
        1920
      ],
      "credentials": {
        "mySql": {
          "id": "SJei6ksLjiCIXFRS",
          "name": "Worksuite database"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "f0593d78-81a5-4b57-a4c9-e8d73e3ad108",
      "name": "Aggregate3",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        3740,
        1920
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Kiểm tra dữ liệu Aggregate1\nconst listMessages = $node['Aggregate3']?.json?.data || [];\nif (listMessages.length === 0) {\n  throw new Error(\"Node 'Aggregate1' không có dữ liệu hoặc không tồn tại.\");\n}\n\n// ID nhân viên của bạn\nconst employeeId = 62844;\n\n// Bắt đầu tạo nội dung tài liệu\nlet document = 'List Messages sent by client with admin: \\n';\n\n// Duyệt qua danh sách tin nhắn\nfor (const item of listMessages.reverse()) {\n  if (item?.from === employeeId) {\n    document += `Admin sent: ${item?.message} \\n\\n`;\n  } else {\n    document += `Client sent: ${item?.message} \\n\\n`;\n  }\n}\n\n// Tin nhắn cuối cùng gửi bởi khách hàng\nconst lastClientMessage = listMessages.find(\n  (item) => item.from !== employeeId\n)?.message || 'No messages from client';\n\n// Thêm thông tin tin nhắn cuối cùng của khách hàng vào tài liệu\ndocument += `\\n\\nLast message sent by client: ${lastClientMessage}`;\n\n// Kiểm tra dữ liệu từ node \"a Project client\"\nconst inputData = $node['Cloodo CRM4']?.json?.data || [];\nif (inputData.length === 0) {\n  throw new Error(\"Node 'a Project client' không có dữ liệu hoặc không tồn tại.\");\n}\n\nlet agent = '';\nlet projectId = '';\n\nif (inputData.length === 1) {\n  // Nếu chỉ có một dự án, lấy thông tin thành viên đầu tiên\n  const projectMembers = inputData[0]?.projectMembers || [];\n  if (projectMembers.length > 0) {\n    agent = projectMembers[0]?.id; // Gán ID thành viên đầu tiên làm agent\n  }\n  projectId = inputData[0]?.id || ''; // Gán ID dự án\n} else {\n  // Nếu có nhiều dự án, để trống các giá trị\n  agent = '';\n  projectId = '';\n}\n\n// Log kết quả để debug\nconsole.log({ agent, projectId });\nconsole.log(document);\n\n// Trả về tài liệu đã tạo và thông tin agent, projectId\nreturn { messagesSent: document, agent, projectId };\n"
      },
      "id": "22b15de2-cae2-4f07-9539-eb76d13bf79f",
      "name": "Get All Messages and id agent3",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3940,
        1920
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const inputStr = $input.item.json.output;\n\n// Remove the surrounding Markdown-style code block (```json ... ```)\nconst cleanedInput = inputStr.replace(/^```json|\\n```$/g, '').trim();\n\n// Remove newlines and excessive spaces\nconst formattedInput = cleanedInput.replace(/\\n/g, ' ').replace(/\\s+/g, ' ');\n\n// Remove any trailing comma in the JSON string (before the closing brace)\nconst validJson = formattedInput.replace(/,\\s*}$/g, '}');\n\n// Parse the cleaned-up string into a JSON object\nconst jsonObject = JSON.parse(validJson);\n\n\nreturn {jsonOutput: jsonObject};\n"
      },
      "id": "bf38c24c-d674-45cf-b727-740242b43c81",
      "name": "Code Convert to JSON3",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4540,
        1920
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "18d839e2-523c-4fa2-822c-b556cf15f2d5",
              "leftValue": "={{ $json.jsonOutput.type }}",
              "rightValue": "clear issue",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5f605341-07c6-4e0d-b519-583168928f56",
      "name": "check have issue3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4940,
        1920
      ]
    },
    {
      "parameters": {
        "resource": "engagement",
        "ID": "={{ $json.data.id }}",
        "requestOptions": {}
      },
      "id": "61834c6d-ea47-4069-a43b-d31a70b22066",
      "name": "Get Ticket3",
      "type": "@cloodo/n8n-nodes-cloodo-crm.CloodoLeads",
      "typeVersion": 1,
      "position": [
        5360,
        1900
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://erp-amz.cloodo.com/v4/ticket-replies",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "={\n  \"message\": \"<p><strong>Dear {{ $('Create Ticket5').item.json.data.requester.name }},</strong></p><p>We hope you're doing well. We noticed that it has been a while since we last heard from you regarding your support ticket. To ensure efficiency and focus on active requests, we will be closing this ticket soon.</p><p><strong>If your issue has been resolved</strong>, no further action is needed.</p><p><strong>If you still require assistance</strong>, please reply to this email or reopen the ticket, and we’ll be happy to help.</p><h3><strong>Need Further Support?</strong></h3><p>If you have any additional questions or need further support in the future, feel free to contact us anytime. Our team is always here to assist you.</p><p>Thank you for choosing our services. We appreciate your time and trust.</p><p><strong>Best regards,</strong></p><p><strong>The Support Team</strong></p>\",\n  \"external_link\": \"\",\n  \"ticket_id\": \"{{ $('Create Ticket5').item.json.data.id }}\"\n}\n",
        "options": {}
      },
      "id": "f19c60c9-4414-4a57-971f-5c2c5881504b",
      "name": "HTTP Request4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5560,
        1900
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "resource": "engagement",
        "operation": "update",
        "ID": "={{ $('Create Ticket5').item.json.data.id }}",
        "additionalFields": {
          "statusId": "closed"
        },
        "requestOptions": {}
      },
      "id": "591a50de-5855-48ef-8310-4c2034973584",
      "name": "Cloodo CRM11",
      "type": "@cloodo/n8n-nodes-cloodo-crm.CloodoLeads",
      "typeVersion": 1,
      "position": [
        5760,
        1900
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v22.0/213439902114044/messages",
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "recipient",
              "value": "={\"id\":\"{{ $('Loop Over Items').item.json.id_client_message }}\"}"
            },
            {
              "name": "messaging_type",
              "value": "MESSAGE_TAG"
            },
            {
              "name": "tag",
              "value": "ACCOUNT_UPDATE"
            },
            {
              "name": "message",
              "value": "={\"text\":\"Hello {{ $('Loop Over Items').item.json.name_client_facebook }},\\n\\nBased on our conversation, I have opened a support ticket ({{ $('Create Ticket5').item.json.data.ticket_number }}) on your behalf. You can check and follow up anytime here:\\n\\n🔗 Cmsmart Dashboard Support Ticket:\\nhttps://dashboard.cmsmart.net/apps/tickets/all-tickets\\n\\n🔹 Login Details:\\n\\nUsername: {{ $('Create Ticket5').item.json.data.requester.email }}\\nIf you don't have an account yet, you can create one with your email here: https://cmsmart.net/login?view=registration\\nIf you forgot your password, reset it here: https://cmsmart.net/login?view=reset\\nIf you have any questions, please email support@cmsmart.net or chat with Vincent on WhatsApp:\\n📩 WhatsApp: https://wa.me/+84967319788\\n\\nLet us know if you need more information! 😊\\n\\nBest regards,\\nCmsmart E-commerce Team\"}"
            },
            {
              "name": "access_token",
              "value": "EAA3ZCtCZCe57kBOzXf4fqSrVflYWE5Fk2P0BNfjOerautjGD8cKV0pZAnvdV3zRQwokzJiKmPUZBRWFn8Tmeq2rPD4zCHvZAZCRZCg9943vq93AmFKnbtrFd7bfZBiGBmOgiYYKD7qipJyirD8a3KxZC2GgLXxok3Dj2ZBObBCyBqHoLywAZAdC7mpmnbcTOYKZCZB6wZD"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "ce90d0e8-340c-47f7-9fb9-2fe7dd862564",
      "name": "send fb7",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5960,
        1900
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1lM_TG2ExLdbs1YoBcaFzBFscVqB3MOEFjBFnvE9kAa0/edit?gid=0#gid=0",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": 2060972300,
          "mode": "list",
          "cachedResultName": "client_message_cms",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1lM_TG2ExLdbs1YoBcaFzBFscVqB3MOEFjBFnvE9kAa0/edit#gid=2060972300"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id_client_message": "={{ $('Loop Over Items').item.json.id_client_message }}",
            "status_ticket": "ok"
          },
          "matchingColumns": [
            "id_client_message"
          ],
          "schema": [
            {
              "id": "conversation_id",
              "displayName": "conversation_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "update_time",
              "displayName": "update_time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "id_client_message",
              "displayName": "id_client_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "id_workchat",
              "displayName": "id_workchat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "name_client_facebook",
              "displayName": "name_client_facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email_client_facebook",
              "displayName": "email_client_facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "message_worchat",
              "displayName": "message_worchat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email_worksuit",
              "displayName": "email_worksuit",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status_ticket",
              "displayName": "status_ticket",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "17e60d16-6192-4af3-a012-4a845fffa685",
      "name": "Save messaage12",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        6180,
        1900
      ],
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "P5h6CdXmV7twphIt",
          "name": "Canh Google Sheets"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://erp-amz.cloodo.com/v4/tickets",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"tags\": [],\n  \"project_id\": \"{{ $('Cloodo CRM4').item.json.data.id }}\",\n  \"user_id\": \"{{ $('Cloodo CRM').item.json.data[0].user.id }}\",\n  \"subject\": \"{{ $('check have issue3').item.json.jsonOutput.title }}\",\n  \"priority\": \"medium\",\n  \"agent_id\": \"2c991f1a-6665-4533-bfca-ac969f431eb2\",\n  \"type_id\": \"{{ $json.jsonOutput.type_ticket }}\",\n  \"channel_id\": \"931082dc-2e77-4c9a-86e6-b3c20a5c6b22\",\n  \"status\": \"open\",\n \"message\": \"{{ $json.output }}\",\n  \"note\": \"{{ $('check have issue3').item.json.jsonOutput.note }}\",\n  \"ticket_files\": [],\n  \"created_at\": \"{{ $('Loop Over Items').item.json.update_time }}\"\n\n}",
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "5ab2a474-75b1-4231-aeed-bee9a6313ff8",
      "name": "Create Ticket5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5160,
        1900
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v22.0/213439902114044/messages",
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "recipient",
              "value": "={\"id\":\"{{ $('Loop Over Items').item.json.id_client_message }}\"}"
            },
            {
              "name": "messaging_type",
              "value": "MESSAGE_TAG"
            },
            {
              "name": "tag",
              "value": "ACCOUNT_UPDATE"
            },
            {
              "name": "message",
              "value": "={\"text\":\"Hello {{ $('Cloodo CRM').item.json.data[0].user.name }},\\n\\nBased on our conversation, I have created an account on your behalf to better assist you. You can check and follow up anytime here:\\n\\n🔗 Cmsmart Dashboard Support Ticket:\\nhttps://dashboard.cmsmart.net/apps/tickets/all-tickets\\n\\n🔹 Login Details:\\n\\nUsername: {{ $('Cloodo CRM').item.json.data[0].user.email }}\\nIf you don't have an account yet, you can create one with your email here: https://cmsmart.net/login?view=registration\\nIf you forgot your password, reset it here: https://cmsmart.net/login?view=reset\\nIf you have any questions, please email support@cmsmart.net or chat with Vincent on WhatsApp:\\n📩 WhatsApp: https://wa.me/+84967319788\\n\\nLet us know if you need more information! 😊\\n\\nBest regards,\\nCmsmart E-commerce Team\"}"
            },
            {
              "name": "access_token",
              "value": "EAA3ZCtCZCe57kBOzXf4fqSrVflYWE5Fk2P0BNfjOerautjGD8cKV0pZAnvdV3zRQwokzJiKmPUZBRWFn8Tmeq2rPD4zCHvZAZCRZCg9943vq93AmFKnbtrFd7bfZBiGBmOgiYYKD7qipJyirD8a3KxZC2GgLXxok3Dj2ZBObBCyBqHoLywAZAdC7mpmnbcTOYKZCZB6wZD"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "b112bc4c-e98a-4ae9-b07a-63e7277632bb",
      "name": "send fb8",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5160,
        2200
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1lM_TG2ExLdbs1YoBcaFzBFscVqB3MOEFjBFnvE9kAa0/edit?gid=0#gid=0",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": 2060972300,
          "mode": "list",
          "cachedResultName": "client_message_cms",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1lM_TG2ExLdbs1YoBcaFzBFscVqB3MOEFjBFnvE9kAa0/edit#gid=2060972300"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id_client_message": "={{ $('Loop Over Items').item.json.id_client_message }}",
            "status_ticket": "ok"
          },
          "matchingColumns": [
            "id_client_message"
          ],
          "schema": [
            {
              "id": "conversation_id",
              "displayName": "conversation_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "update_time",
              "displayName": "update_time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "id_client_message",
              "displayName": "id_client_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "id_workchat",
              "displayName": "id_workchat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "name_client_facebook",
              "displayName": "name_client_facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email_client_facebook",
              "displayName": "email_client_facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "message_worchat",
              "displayName": "message_worchat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email_worksuit",
              "displayName": "email_worksuit",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status_ticket",
              "displayName": "status_ticket",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "1f7e2481-d6fd-42c5-9eed-57ceb95fc1f5",
      "name": "Save messaage13",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        5380,
        2200
      ],
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "P5h6CdXmV7twphIt",
          "name": "Canh Google Sheets"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  let messagerAI = $node['Code Convert to JSON3']?.json?.jsonOutput?.description\n  messagerAI = messagerAI.replace(/\\n\\n/g, '\\\\n\\\\n');\n  messagerAI = messagerAI.replace(/\\n/g, '\\\\n');\n  messagerAI = messagerAI.replace(/<br><br>/g, '\\\\n');\n  item.json.output = messagerAI;\n}\n\nreturn $input.all();\n"
      },
      "id": "b50bb62f-7920-44a4-978c-6860691e2979",
      "name": "Code11",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4740,
        1920
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.cloodo.com/link_account_fb.php",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "email",
              "value": "={{ $('Loop Over Items1').item.json.email_client_facebook }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "22eea41f-6666-4121-81d0-9bd576004635",
      "name": "getLink1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2380,
        4720
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9453be76-acac-4cc7-b680-2544ecf4fdf8",
              "leftValue": "={{ $json.status_ticket }}",
              "rightValue": "ok",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f01c3534-55cb-4893-a0d9-da562df4273f",
      "name": "If3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1400,
        2720
      ]
    },
    {
      "parameters": {
        "resource": "client",
        "operation": "create",
        "name": "={{ $('Loop Over Items1').item.json.name_client_facebook }}",
        "passwordClinet": "=x7M&dL!9wQ#2tV4%",
        "clientEmail": "={{ $('Loop Over Items1').item.json.email_worksuit }}",
        "additionalFields": {},
        "requestOptions": {}
      },
      "id": "89977740-c27e-4434-bc95-070922836b41",
      "name": "Cloodo CRM12",
      "type": "@cloodo/n8n-nodes-cloodo-crm.CloodoLeads",
      "typeVersion": 1,
      "position": [
        2660,
        2760
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://erp-amz.cloodo.com/v4/client-contacts",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json^",
        "body": "={\n    \"title\": \"Facebook\",\n    \"name\": \"{{ $('Loop Over Items1').item.json.name_client_facebook }}\",\n    \"email\": \"{{ $('Loop Over Items1').item.json.email_client_facebook }}\",\n    \"phone\": \"\",\n    \"user_id\": \"{{ $('Cloodo CRM12').item.json.data.user.id }}\"\n}",
        "options": {}
      },
      "id": "da8ec370-c307-4568-8094-9afb36636991",
      "name": "Update contact client5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3120,
        2760
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "resource": "project",
        "operation": "create",
        "projectName": "={{ $('Cloodo CRM12').item.json.data.user.name }} Project",
        "start_date": "={{ $now }}",
        "user_id": "=[\"5b731bad-fc3a-4abd-b768-4a69da1df5ad\"]",
        "additionalFields": {
          "client_id": "=\"{{ $('Cloodo CRM12').item.json.data.user.id }}\""
        },
        "requestOptions": {}
      },
      "id": "923291d5-1253-43bc-9e0e-47c56900fbfc",
      "name": "Cloodo CRM13",
      "type": "@cloodo/n8n-nodes-cloodo-crm.CloodoLeads",
      "typeVersion": 1,
      "position": [
        3400,
        2760
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT *, (\n  SELECT COUNT(*) FROM user_chats WHERE (user_chats.from = 62844 AND user_chats.to = {{ $('Loop Over Items1').item.json.id_workchat }}) OR  (user_chats.from = {{ $('Loop Over Items1').item.json.id_workchat }} AND user_chats.to = 62844)\n) AS Total_Messages\nFROM user_chats\nWHERE \n  (user_chats.from = 62844 AND user_chats.to = {{ $('Loop Over Items1').item.json.id_workchat }}) \n  OR \n  (user_chats.from = {{ $('Loop Over Items1').item.json.id_workchat }} AND user_chats.to = 62844) ORDER BY user_chats.created_at DESC;",
        "options": {}
      },
      "id": "ce02f7c5-2075-4eba-8742-041552047a39",
      "name": "Get Detail Messages4",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.2,
      "position": [
        3620,
        2760
      ],
      "alwaysOutputData": true,
      "credentials": {
        "mySql": {
          "id": "SJei6ksLjiCIXFRS",
          "name": "Worksuite database"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "4e6d78da-099f-4b1f-a558-0c81208f9e95",
      "name": "Aggregate4",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        3800,
        2760
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Kiểm tra dữ liệu Aggregate1\nconst listMessages = $node['Aggregate4']?.json?.data || [];\nif (listMessages.length === 0) {\n  throw new Error(\"Node 'Aggregate1' không có dữ liệu hoặc không tồn tại.\");\n}\n\n// ID nhân viên của bạn\nconst employeeId = 62844;\n\n// Bắt đầu tạo nội dung tài liệu\nlet document = 'List Messages sent by client with admin: \\n';\n\n// Duyệt qua danh sách tin nhắn\nfor (const item of listMessages.reverse()) {\n  if (item?.from === employeeId) {\n    document += `Admin sent: ${item?.message} \\n\\n`;\n  } else {\n    document += `Client sent: ${item?.message} \\n\\n`;\n  }\n}\n\n// Tin nhắn cuối cùng gửi bởi khách hàng\nconst lastClientMessage = listMessages.find(\n  (item) => item.from !== employeeId\n)?.message || 'No messages from client';\n\n// Thêm thông tin tin nhắn cuối cùng của khách hàng vào tài liệu\ndocument += `\\n\\nLast message sent by client: ${lastClientMessage}`;\n\n// Kiểm tra dữ liệu từ node \"a Project client\"\nconst inputData = $node['Cloodo CRM13']?.json?.data || [];\nif (inputData.length === 0) {\n  throw new Error(\"Node 'a Project client' không có dữ liệu hoặc không tồn tại.\");\n}\n\nlet agent = '';\nlet projectId = '';\n\nif (inputData.length === 1) {\n  // Nếu chỉ có một dự án, lấy thông tin thành viên đầu tiên\n  const projectMembers = inputData[0]?.projectMembers || [];\n  if (projectMembers.length > 0) {\n    agent = projectMembers[0]?.id; // Gán ID thành viên đầu tiên làm agent\n  }\n  projectId = inputData[0]?.id || ''; // Gán ID dự án\n} else {\n  // Nếu có nhiều dự án, để trống các giá trị\n  agent = '';\n  projectId = '';\n}\n\n// Log kết quả để debug\nconsole.log({ agent, projectId });\nconsole.log(document);\n\n// Trả về tài liệu đã tạo và thông tin agent, projectId\nreturn { messagesSent: document, agent, projectId };\n"
      },
      "id": "da8f5311-ac7f-4fc1-ab13-df085c168600",
      "name": "Get All Messages and id agent4",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4000,
        2760
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const inputStr = $input.item.json.output;\n\n// Remove the surrounding Markdown-style code block (```json ... ```)\nconst cleanedInput = inputStr.replace(/^```json|\\n```$/g, '').trim();\n\n// Remove newlines and excessive spaces\nconst formattedInput = cleanedInput.replace(/\\n/g, ' ').replace(/\\s+/g, ' ');\n\n// Remove any trailing comma in the JSON string (before the closing brace)\nconst validJson = formattedInput.replace(/,\\s*}$/g, '}');\n\n// Parse the cleaned-up string into a JSON object\nconst jsonObject = JSON.parse(validJson);\n\n\nreturn {jsonOutput: jsonObject};\n"
      },
      "id": "de433026-cab3-4065-a3a0-6b49746decd3",
      "name": "Code Convert to JSON4",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4600,
        2760
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "18d839e2-523c-4fa2-822c-b556cf15f2d5",
              "leftValue": "={{ $json.jsonOutput.type }}",
              "rightValue": "clear issue",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "485c01c9-a2d0-4e66-b545-c3612f8bd7e1",
      "name": "check have issue4",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5000,
        2760
      ]
    },
    {
      "parameters": {
        "resource": "engagement",
        "ID": "={{ $json.data.id }}",
        "requestOptions": {}
      },
      "id": "e663c38f-d4f5-4696-ae9e-8e2dbb4d0c5f",
      "name": "Get Ticket4",
      "type": "@cloodo/n8n-nodes-cloodo-crm.CloodoLeads",
      "typeVersion": 1,
      "position": [
        5420,
        2740
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://erp-amz.cloodo.com/v4/ticket-replies",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "={\n  \"message\": \"<p><strong>Dear {{ $('Create Ticket6').item.json.data.requester.name }},</strong></p><p>We hope you're doing well. We noticed that it has been a while since we last heard from you regarding your support ticket. To ensure efficiency and focus on active requests, we will be closing this ticket soon.</p><p><strong>If your issue has been resolved</strong>, no further action is needed.</p><p><strong>If you still require assistance</strong>, please reply to this email or reopen the ticket, and we’ll be happy to help.</p><h3><strong>Need Further Support?</strong></h3><p>If you have any additional questions or need further support in the future, feel free to contact us anytime. Our team is always here to assist you.</p><p>Thank you for choosing our services. We appreciate your time and trust.</p><p><strong>Best regards,</strong></p><p><strong>The Support Team</strong></p>\",\n  \"external_link\": \"\",\n  \"ticket_id\": \"{{ $('Create Ticket6').item.json.data.id }}\"\n}\n",
        "options": {}
      },
      "id": "3262a391-487f-448c-ae55-0f5ff5c0c6cf",
      "name": "HTTP Request5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5620,
        2740
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "resource": "engagement",
        "operation": "update",
        "ID": "={{ $('Create Ticket6').item.json.data.id }}",
        "additionalFields": {
          "statusId": "closed"
        },
        "requestOptions": {}
      },
      "id": "fb9249e9-4950-493e-a583-3205335d8a50",
      "name": "Cloodo CRM14",
      "type": "@cloodo/n8n-nodes-cloodo-crm.CloodoLeads",
      "typeVersion": 1,
      "position": [
        5820,
        2740
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v22.0/213439902114044/messages",
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "recipient",
              "value": "={\"id\":\"{{ $('Loop Over Items1').item.json.id_client_message }}\"}"
            },
            {
              "name": "messaging_type",
              "value": "MESSAGE_TAG"
            },
            {
              "name": "tag",
              "value": "ACCOUNT_UPDATE"
            },
            {
              "name": "message",
              "value": "={\"text\":\"Hello {{ $('Loop Over Items1').item.json.name_client_facebook }},\\n\\nBased on our conversation, I have created an account on your behalf to better assist you. You can check and follow up anytime here:\\n\\n🔗 Cmsmart Dashboard Support Ticket:\\nhttps://dashboard.cmsmart.net/apps/tickets/all-tickets\\n\\n🔹 Login Details:\\n\\nUsername: {{ $('Create Ticket6').item.json.data.requester.name }}\\nIf you don't have an account yet, you can create one with your email here: https://cmsmart.net/login?view=registration\\nIf you forgot your password, reset it here: https://cmsmart.net/login?view=reset\\nIf you have any questions, please email support@cmsmart.net or chat with Vincent on WhatsApp:\\n📩 WhatsApp: https://wa.me/+84967319788\\n\\nLet us know if you need more information! 😊\\n\\nBest regards,\\nCmsmart E-commerce Team\"}"
            },
            {
              "name": "access_token",
              "value": "EAA3ZCtCZCe57kBOzXf4fqSrVflYWE5Fk2P0BNfjOerautjGD8cKV0pZAnvdV3zRQwokzJiKmPUZBRWFn8Tmeq2rPD4zCHvZAZCRZCg9943vq93AmFKnbtrFd7bfZBiGBmOgiYYKD7qipJyirD8a3KxZC2GgLXxok3Dj2ZBObBCyBqHoLywAZAdC7mpmnbcTOYKZCZB6wZD"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "e6cb9ab0-80ec-4f96-9893-7e0ba2af532d",
      "name": "send fb9",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6240,
        2740
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1lM_TG2ExLdbs1YoBcaFzBFscVqB3MOEFjBFnvE9kAa0/edit?gid=0#gid=0",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": 2060972300,
          "mode": "list",
          "cachedResultName": "client_message_cms",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1lM_TG2ExLdbs1YoBcaFzBFscVqB3MOEFjBFnvE9kAa0/edit#gid=2060972300"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id_client_message": "={{ $('Loop Over Items1').item.json.id_client_message }}",
            "status_ticket": "ok"
          },
          "matchingColumns": [
            "id_client_message"
          ],
          "schema": [
            {
              "id": "conversation_id",
              "displayName": "conversation_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "update_time",
              "displayName": "update_time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "id_client_message",
              "displayName": "id_client_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "id_workchat",
              "displayName": "id_workchat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "name_client_facebook",
              "displayName": "name_client_facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email_client_facebook",
              "displayName": "email_client_facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "message_worchat",
              "displayName": "message_worchat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email_worksuit",
              "displayName": "email_worksuit",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status_ticket",
              "displayName": "status_ticket",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "b495d1b0-1843-41fe-bd09-8c38e0ca5044",
      "name": "Save messaage14",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        6460,
        2740
      ],
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "P5h6CdXmV7twphIt",
          "name": "Canh Google Sheets"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://erp-amz.cloodo.com/v4/tickets",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"tags\": [],\n  \"project_id\": \"{{ $('Cloodo CRM13').item.json.data.id }}\",\n  \"user_id\": \"{{ $('Cloodo CRM12').item.json.data.user.id }}\",\n  \"subject\": \"{{ $('check have issue4').item.json.jsonOutput.title }}\",\n  \"priority\": \"medium\",\n  \"agent_id\": \"2c991f1a-6665-4533-bfca-ac969f431eb2\",\n  \"type_id\": \"{{ $json.jsonOutput.type_ticket_id }}\",\n  \"channel_id\": \"931082dc-2e77-4c9a-86e6-b3c20a5c6b22\",\n  \"status\": \"open\",\n \"message\": \"{{ $json.output }}\",\n  \"note\": \"{{ $('check have issue4').item.json.jsonOutput.note }}\",\n  \"ticket_files\": [],\n  \"created_at\": \"{{ $('Loop Over Items1').item.json.update_time }}\"\n\n}",
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "4e490eca-8424-4009-88e8-0e0c84549b32",
      "name": "Create Ticket6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5220,
        2740
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v22.0/213439902114044/messages",
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "recipient",
              "value": "={\"id\":\"{{ $('Loop Over Items1').item.json.id_client_message }}\"}"
            },
            {
              "name": "messaging_type",
              "value": "MESSAGE_TAG"
            },
            {
              "name": "tag",
              "value": "ACCOUNT_UPDATE"
            },
            {
              "name": "message",
              "value": "={\"text\":\"Hello {{ $('Loop Over Items1').item.json.name_client_facebook }},\\n\\nBased on our conversation, I have created an account on your behalf to better assist you. You can check and follow up anytime here:\\n\\n🔗 Cmsmart Dashboard Support Ticket:\\nhttps://dashboard.cmsmart.net/apps/tickets/all-tickets\\n\\n🔹 Login Details:\\n\\nUsername: {{ $('HTTP Request6').item.json.data.user.name }}\\nIf you don't have an account yet, you can create one with your email here: https://cmsmart.net/login?view=registration\\nIf you forgot your password, reset it here: https://cmsmart.net/login?view=reset\\nIf you have any questions, please email support@cmsmart.net or chat with Vincent on WhatsApp:\\n📩 WhatsApp: https://wa.me/+84967319788\\n\\nLet us know if you need more information! 😊\\n\\nBest regards,\\nCmsmart E-commerce Team\"}"
            },
            {
              "name": "access_token",
              "value": "EAA3ZCtCZCe57kBOzXf4fqSrVflYWE5Fk2P0BNfjOerautjGD8cKV0pZAnvdV3zRQwokzJiKmPUZBRWFn8Tmeq2rPD4zCHvZAZCRZCg9943vq93AmFKnbtrFd7bfZBiGBmOgiYYKD7qipJyirD8a3KxZC2GgLXxok3Dj2ZBObBCyBqHoLywAZAdC7mpmnbcTOYKZCZB6wZD"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "d129a79f-6997-4202-9684-e27ea9917bf4",
      "name": "send fb10",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5400,
        3040
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1lM_TG2ExLdbs1YoBcaFzBFscVqB3MOEFjBFnvE9kAa0/edit?gid=0#gid=0",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": 2060972300,
          "mode": "list",
          "cachedResultName": "client_message_cms",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1lM_TG2ExLdbs1YoBcaFzBFscVqB3MOEFjBFnvE9kAa0/edit#gid=2060972300"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id_client_message": "={{ $('Loop Over Items1').item.json.id_client_message }}",
            "status_ticket": "ok"
          },
          "matchingColumns": [
            "id_client_message"
          ],
          "schema": [
            {
              "id": "conversation_id",
              "displayName": "conversation_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "update_time",
              "displayName": "update_time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "id_client_message",
              "displayName": "id_client_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "id_workchat",
              "displayName": "id_workchat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "name_client_facebook",
              "displayName": "name_client_facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email_client_facebook",
              "displayName": "email_client_facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "message_worchat",
              "displayName": "message_worchat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email_worksuit",
              "displayName": "email_worksuit",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status_ticket",
              "displayName": "status_ticket",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "f732b1ec-b1e4-4f2b-be99-3ac96b38e990",
      "name": "Save messaage15",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        5620,
        3040
      ],
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "P5h6CdXmV7twphIt",
          "name": "Canh Google Sheets"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  let messagerAI = $node['Code Convert to JSON4']?.json?.jsonOutput?.description\n  messagerAI = messagerAI.replace(/\\n\\n/g, '');\n  messagerAI = messagerAI.replace(/\\n/g, '');\n  messagerAI = messagerAI.replace(/<br><br>/g, '');\n  messagerAI = messagerAI.replace(/\"/g, '');\n  item.json.output = messagerAI;\n}\n\nreturn $input.all();\n"
      },
      "id": "94b1df80-c2d6-4f5e-a05b-26e4b64916d9",
      "name": "Code12",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4800,
        2760
      ]
    },
    {
      "parameters": {
        "resource": "assistant",
        "assistantId": {
          "__rl": true,
          "value": "asst_zcZjKKD7msrnRvUMoHUoWzhV",
          "mode": "list",
          "cachedResultName": "Cmsmart AI"
        },
        "prompt": "define",
        "text": "=You are a project assistant whom responsible for creating client-facing tickets based on provided chat or email content. \n\nAnalyze the following conversation messages between the client and admin. Focus on the most recent messages sent by the client, especially the last one, to determine the client's intent and construct a JSON object based on the following format:\n{\n  \"title\": \"\",\n  \"description\": \"\",\n  \"note\":\"\",\n  \"type\":\"\",\n  \"type_ticket\"\n\n}\n\nInstructions:  \n1. title: Title of the problem the customer encountered:\n2. description: is a detailed description of the problem, \nThe description must include the following sections:\n\n2.1. Summary of Request: A concise overview of what the client is asking for, written in a client-friendly tone.\n2.2 Proposed Next Steps: Clearly outline what actions will be taken by the team and any required input from the client.\n2.3. Action Items: Break down actionable tasks for the internal team and the client.\n\nUse this format:\n\nSummary of Request\n[Summarize the client’s request in a professional and client-friendly tone.]\n\nProposed Next Steps\n[List the steps the team will take to address the request, as well as any input required from the client.]\n\nAction Items\nFor Our Team:\n[List specific tasks for the team to complete.]\nFor You:\n[List any actions required from the client, if applicable.]\n\nMake sure the ticket is clear, actionable, and formatted for both internal use and client review. Use professional and concise language throughout.\n\nSample Input:\n\"tung wants to add a 'Manage Cart' feature to the Auto Reply from WF 50 project.\"\n\nExpected Output:\nA complete ticket with all required sections and a professional tone, formatted as per the structure above.\n\nBase on summary problem provided and History chat messages, let create an object with subject anb message.\n3. note: additional notes, notes, further explanations of the problem and the last .\n4. Ensure the JSON is correctly formatted, valid, and accurately reflects the client’s most recent intent.   \n5. Do not include any explanation, only return the JSON object in the exact specified format.\n6. Remember alway Write description with format like a detail email profesional for our client (Dear [client name]) and focus on problem what client need to help, what client need to help. use html tag for text effect like <strong> for bold text .\n7. type is an analysis of whether the customer conversation has a clear issue if it is a \"clear issue\" or  \"not clear issue\", in which the not clear issue is the conversations such as greeting , unspecified problem...\n8. type_ticket : I have: \na7449e63-6ce3-4840-ab67-27298faf086f -> Product Enquiry,\n0c8ba87a-f6ae-44c2-9c4d-404c49ec255b -> Payment & Billing,\n00f4494e-68c5-4926-9ff1-3faafe812e94 -> Setup Assistance ,\n2b32b674-741a-4833-8328-925a48bef030 -> Feature Requests,\n4bbfa6dd-beb7-43af-926c-f736ca00bdd3 -> Project Maintenance ,\n28cab752-15e1-433e-8abf-609fde9b5b7f -> Renewal and Upsell ,\nf58a0a7e-9561-4cac-a326-6e0cfe93360b -> Onboarding and Training,\n6dc7b7c5-a130-4357-9d83-03030a8a134f -> Custom Development ,\n7abb55c6-8135-44db-b99a-8cabd31aeab0 -> Business Meeting,\n89050de5-8c35-4947-92d2-2c108b32aaa4 -> Extra Service ,\n\n\nare the ids are the names of the ticket types, please classify that content by the ticket type name whichever is appropriate and give me that type of ticket\nCategorization rules:  \n\n1. Product Inquiry  \n   - Keywords: Form requests, new client messages, pricing, product details, compatibility, feature comparisons, demos, trials.  \n   - Client Context: Questions from new or potential clients about product features, compatibility, pricing, or demo requests.  \n   - Examples:  \n     - \"What’s the cost of the Printshop Premium package?\"  \n     - \"Can I see a demo of the Product Designer tool?\"  \n\n2. Payment & Billing  \n   - Keywords: Cancel subscription, refund request, renewal inquiries, invoices, payment errors, prorated upgrades/downgrades.  \n   - Client Context: Issues related to payments, subscriptions, or invoices from clients.  \n   - Examples:  \n     - \"How can I get a refund for my subscription?\"  \n     - \"I need to renew my license for another year.\"  \n\n3. Setup Assistance  \n   - Keywords: Installation, download issues, free plugins, domain setup, hosting issues, product configuration, API setup.  \n   - Client Context: Clients seeking help with the initial setup of a system, plugin, or eCommerce platform.  \n   - Examples:  \n     - \"Help me set up my domain and hosting.\"  \n     - \"I need assistance installing free plugins.\"  \n\n4. Feature Request  \n   - Keywords: Add feature, new functionality, expand capabilities, request enhancement, tool improvement, custom modules.  \n   - Client Context: Clients requesting new features or enhancements for existing tools.  \n   - Examples:  \n     - \"Can you add a one-click checkout feature?\"  \n     - \"I’d like a feature for advanced reporting.\"  \n\n5. Project Maintenance  \n   - Keywords: Bug fix, performance issues, general support requests, system downtime, error reports, minor improvements.  \n   - Client Context: Ongoing support requests from existing clients for bugs, performance optimization, or fixes.  \n   - Examples:  \n     - \"Fix the 500 error on the homepage.\"  \n     - \"The checkout page isn’t working properly.\"  \n\n6. Renewal and Upsell  \n   - Keywords: Contract renewal, subscription upsell, add-on features, expanding services.  \n   - Client Context: Clients looking to renew contracts, subscriptions, or add additional services.  \n   - Examples:  \n     - \"I’d like to renew my subscription for another year.\"  \n     - \"Can you provide an upsell package for advanced analytics?\"  \n\n7. Onboarding and Training  \n   - Keywords: Training session, onboarding assistance, platform overview, user training.  \n   - Client Context: New clients needing guidance to get started with a product or service.  \n   - Examples:  \n     - \"Can you guide me through the platform setup?\"  \n     - \"We need training for our team on the new software.\"  \n\n8. Custom Development  \n   - Keywords: Bespoke features, tailor-made solutions, custom-built modules, specific functionality.  \n   - Client Context: Clients requesting customized solutions tailored to their specific business needs.  \n   - Examples:  \n     - \"We need a custom-built module for order tracking.\"  \n     - \"Can you create a feature that integrates with our existing CRM?\"  \n\n9. Business Meeting  \n   - Keywords: Scheduling meetings, meeting memo, project discussions, progress updates.  \n   - Client Context: Coordination and scheduling of meetings between clients and team members.  \n   - Examples:  \n     - \"Let’s schedule a meeting to discuss the project roadmap.\"  \n     - \"We need to have a progress review with your team next week.\"  \n\n10. Extra Service  \n    - Keywords: Additional service, beyond scope, add-on requests, non-standard service.  \n    - Client Context: Clients requesting extra services beyond what is included in their plan.  \n    - Examples:  \n      - \"Can you provide a custom report for our sales data?\"  \n      - \"We’d like additional security monitoring for our servers.\"  \n\nHere are the history conversation messages: \n\nInformation of client\nclient name: {{ $('Loop Over Items').item.json.name_client_facebook }}\nproject name : {{ $('Cloodo CRM4').item.json.data.name }}\nSummary problem:\n{{ $json.messagesSent }}\n\nALWAYS respond only with the correctly formatted JSON object.",
        "options": {}
      },
      "id": "404189b5-57cf-4016-8c47-5345901a3e5b",
      "name": "OpenAI4",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.7,
      "position": [
        4160,
        1920
      ],
      "credentials": {
        "openAiApi": {
          "id": "wXCGwiut9MvtTGmk",
          "name": "OpenAI CMS"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.cloodo.com/link_account_fb.php",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "email",
              "value": "={{ $('Loop Over Items1').item.json.email_client_facebook }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "5f13b57c-b338-4a75-bb4b-b86e98941724",
      "name": "getLink2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3240,
        4420
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.cloodo.com/link_account_fb.php",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "email",
              "value": "={{ $('Loop Over Items1').item.json.email_client_facebook }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "1fc31312-06d1-4863-b853-134c175a5e4a",
      "name": "getLink3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5180,
        3040
      ],
      "disabled": true
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "=https://erp-amz.cloodo.com/v4/clients/{{ $json.data.user.id }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"id\": \"{{ $json.data.user.id }}\",\n    \"name\": \"{{ $('Loop Over Items1').item.json.name_client_facebook }}\",\n    \"email\": \"{{ $json.data.user.email }}\",\n    \"password\": \"x7M&dL^!9wQ^#2tV4%\",\n    \"country_id\": \"588964da-703b-4761-9bd0-7e015a110f11\",\n    \"image\": \"\"\n}",
        "options": {}
      },
      "id": "5b707a55-eb64-4fed-916d-72603ba1226d",
      "name": "HTTP Request6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2880,
        2760
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.cloodo.com/link_account_fb.php",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "email",
              "value": "={{ $('Loop Over Items1').item.json.email_client_facebook }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "5fa7bc37-99f7-4872-b9bf-e5a6099878a7",
      "name": "getLink4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5300,
        3440
      ],
      "disabled": true
    },
    {
      "parameters": {
        "resource": "client",
        "operation": "create",
        "name": "={{ $('Loop Over Items1').item.json.name_client_facebook }}",
        "passwordClinet": "=x7M&dL!9wQ#2tV4%",
        "clientEmail": "={{ $('Loop Over Items1').item.json.email_worksuit }}",
        "additionalFields": {},
        "requestOptions": {}
      },
      "id": "6b348b51-3e2c-4ee5-8502-e2e8b2b10733",
      "name": "Cloodo CRM15",
      "type": "@cloodo/n8n-nodes-cloodo-crm.CloodoLeads",
      "typeVersion": 1,
      "position": [
        4100,
        4560
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://erp-amz.cloodo.com/v4/client-contacts",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json^",
        "body": "={\n    \"title\": \"Facebook\",\n    \"name\": \"{{ $('Loop Over Items1').item.json.name_client_facebook }}\",\n    \"email\": \"{{ $('Loop Over Items1').item.json.email_client_facebook }}\",\n    \"phone\": \"\",\n    \"user_id\": \"{{ $('Cloodo CRM15').item.json.data.user.id }}\"\n}",
        "options": {}
      },
      "id": "b60e15ad-df8e-42cb-a670-6b835ee37db9",
      "name": "Update contact client6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4560,
        4560
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "resource": "project",
        "operation": "create",
        "projectName": "={{ $('Cloodo CRM15').item.json.data.user.name }} Project",
        "start_date": "={{ $now }}",
        "user_id": "=[\"5b731bad-fc3a-4abd-b768-4a69da1df5ad\"]",
        "additionalFields": {
          "client_id": "=\"{{ $('Cloodo CRM15').item.json.data.user.id }}\""
        },
        "requestOptions": {}
      },
      "id": "e2129a7e-efeb-4c85-a2d4-1c8bad9970f4",
      "name": "Cloodo CRM16",
      "type": "@cloodo/n8n-nodes-cloodo-crm.CloodoLeads",
      "typeVersion": 1,
      "position": [
        4840,
        4560
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT *, (\n  SELECT COUNT(*) FROM user_chats WHERE (user_chats.from = 62844 AND user_chats.to = {{ $('Loop Over Items1').item.json.id_workchat }}) OR  (user_chats.from = {{ $('Loop Over Items1').item.json.id_workchat }} AND user_chats.to = 62844)\n) AS Total_Messages\nFROM user_chats\nWHERE \n  (user_chats.from = 62844 AND user_chats.to = {{ $('Loop Over Items1').item.json.id_workchat }}) \n  OR \n  (user_chats.from = {{ $('Loop Over Items1').item.json.id_workchat }} AND user_chats.to = 62844) ORDER BY user_chats.created_at DESC;",
        "options": {}
      },
      "id": "1e5bd880-7c0c-4825-ad77-13921e8955bb",
      "name": "Get Detail Messages5",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.2,
      "position": [
        2880,
        3460
      ],
      "alwaysOutputData": true,
      "credentials": {
        "mySql": {
          "id": "SJei6ksLjiCIXFRS",
          "name": "Worksuite database"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "5b636f01-ea71-47ca-8332-77e999f8b6f9",
      "name": "Aggregate5",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        3060,
        3460
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Kiểm tra dữ liệu Aggregate1\nconst listMessages = $node['Aggregate5']?.json?.data || [];\nif (listMessages.length === 0) {\n  throw new Error(\"Node 'Aggregate1' không có dữ liệu hoặc không tồn tại.\");\n}\n\n// ID nhân viên của bạn\nconst employeeId = 62844;\n\n// Bắt đầu tạo nội dung tài liệu\nlet document = 'List Messages sent by client with admin: \\n';\n\n// Duyệt qua danh sách tin nhắn\nfor (const item of listMessages.reverse()) {\n  if (item?.from === employeeId) {\n    document += `Admin sent: ${item?.message} \\n\\n`;\n  } else {\n    document += `Client sent: ${item?.message} \\n\\n`;\n  }\n}\n\n// Tin nhắn cuối cùng gửi bởi khách hàng\nconst lastClientMessage = listMessages.find(\n  (item) => item.from !== employeeId\n)?.message || 'No messages from client';\n\n// Thêm thông tin tin nhắn cuối cùng của khách hàng vào tài liệu\ndocument += `\\n\\nLast message sent by client: ${lastClientMessage}`;\n\n// Kiểm tra dữ liệu từ node \"a Project client\"\nconst inputData = $node['Cloodo CRM18']?.json?.data || [];\nif (inputData.length === 0) {\n  throw new Error(\"Node 'a Project client' không có dữ liệu hoặc không tồn tại.\");\n}\n\nlet agent = '';\nlet projectId = '';\n\nif (inputData.length === 1) {\n  // Nếu chỉ có một dự án, lấy thông tin thành viên đầu tiên\n  const projectMembers = inputData[0]?.projectMembers || [];\n  if (projectMembers.length > 0) {\n    agent = projectMembers[0]?.id; // Gán ID thành viên đầu tiên làm agent\n  }\n  projectId = inputData[0]?.id || ''; // Gán ID dự án\n} else {\n  // Nếu có nhiều dự án, để trống các giá trị\n  agent = '';\n  projectId = '';\n}\n\n// Log kết quả để debug\nconsole.log({ agent, projectId });\nconsole.log(document);\n\n// Trả về tài liệu đã tạo và thông tin agent, projectId\nreturn { messagesSent: document, agent, projectId };\n"
      },
      "id": "b73e7f76-66d3-41ee-82ef-90bdb9ce26eb",
      "name": "Get All Messages and id agent5",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3260,
        3460
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const inputStr = $input.item.json.output;\n\n// Remove the surrounding Markdown-style code block (```json ... ```)\nconst cleanedInput = inputStr.replace(/^```json|\\n```$/g, '').trim();\n\n// Remove newlines and excessive spaces\nconst formattedInput = cleanedInput.replace(/\\n/g, ' ').replace(/\\s+/g, ' ');\n\n// Remove any trailing comma in the JSON string (before the closing brace)\nconst validJson = formattedInput.replace(/,\\s*}$/g, '}');\n\n// Parse the cleaned-up string into a JSON object\nconst jsonObject = JSON.parse(validJson);\n\n\nreturn {jsonOutput: jsonObject};\n"
      },
      "id": "00f25b1b-4c64-4907-a5ad-4dcda00ae8b7",
      "name": "Code Convert to JSON5",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3860,
        3460
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "18d839e2-523c-4fa2-822c-b556cf15f2d5",
              "leftValue": "={{ $json.jsonOutput.type }}",
              "rightValue": "clear issue",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d00ff53f-5977-4d5f-8796-697102885b0e",
      "name": "check have issue5",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4260,
        3460
      ]
    },
    {
      "parameters": {
        "resource": "engagement",
        "ID": "={{ $json.data.id }}",
        "requestOptions": {}
      },
      "id": "241ff569-b0e6-4f9b-a943-e01e436f9f6a",
      "name": "Get Ticket5",
      "type": "@cloodo/n8n-nodes-cloodo-crm.CloodoLeads",
      "typeVersion": 1,
      "position": [
        4680,
        3440
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://erp-amz.cloodo.com/v4/ticket-replies",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "={\n  \"message\": \"<p><strong>Dear {{ $('Create Ticket7').item.json.data.requester.name }},</strong></p><p>We hope you're doing well. We noticed that it has been a while since we last heard from you regarding your support ticket. To ensure efficiency and focus on active requests, we will be closing this ticket soon.</p><p><strong>If your issue has been resolved</strong>, no further action is needed.</p><p><strong>If you still require assistance</strong>, please reply to this email or reopen the ticket, and we’ll be happy to help.</p><h3><strong>Need Further Support?</strong></h3><p>If you have any additional questions or need further support in the future, feel free to contact us anytime. Our team is always here to assist you.</p><p>Thank you for choosing our services. We appreciate your time and trust.</p><p><strong>Best regards,</strong></p><p><strong>The Support Team</strong></p>\",\n  \"external_link\": \"\",\n  \"ticket_id\": \"{{ $('Create Ticket7').item.json.data.id }}\"\n}\n",
        "options": {}
      },
      "id": "25eb25ec-b0fe-4a9b-bebd-22cc5f34d7af",
      "name": "HTTP Request7",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4880,
        3440
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "resource": "engagement",
        "operation": "update",
        "ID": "={{ $('Create Ticket7').item.json.data.id }}",
        "additionalFields": {
          "statusId": "closed"
        },
        "requestOptions": {}
      },
      "id": "dec78cfc-c4fa-45cc-9254-e9902185afd7",
      "name": "Cloodo CRM17",
      "type": "@cloodo/n8n-nodes-cloodo-crm.CloodoLeads",
      "typeVersion": 1,
      "position": [
        5080,
        3440
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v22.0/213439902114044/messages",
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "recipient",
              "value": "={\"id\":\"{{ $('Loop Over Items1').item.json.id_client_message }}\"}"
            },
            {
              "name": "messaging_type",
              "value": "MESSAGE_TAG"
            },
            {
              "name": "tag",
              "value": "ACCOUNT_UPDATE"
            },
            {
              "name": "message",
              "value": "={\"text\":\"Hello {{ $('Loop Over Items1').item.json.name_client_facebook }},\\n\\nBased on our conversation, I have created an account on your behalf to better assist you. You can check and follow up anytime here:\\n\\n🔗 Cmsmart Dashboard Support Ticket:\\nhttps://dashboard.cmsmart.net/apps/tickets/all-tickets\\n\\n🔹 Login Details:\\n\\nUsername: {{ $('Create Ticket7').item.json.data.requester.name }}\\nIf you don't have an account yet, you can create one with your email here: https://cmsmart.net/login?view=registration\\nIf you forgot your password, reset it here: https://cmsmart.net/login?view=reset\\nIf you have any questions, please email support@cmsmart.net or chat with Vincent on WhatsApp:\\n📩 WhatsApp: https://wa.me/+84967319788\\n\\nLet us know if you need more information! 😊\\n\\nBest regards,\\nCmsmart E-commerce Team\"}"
            },
            {
              "name": "access_token",
              "value": "EAA3ZCtCZCe57kBOzXf4fqSrVflYWE5Fk2P0BNfjOerautjGD8cKV0pZAnvdV3zRQwokzJiKmPUZBRWFn8Tmeq2rPD4zCHvZAZCRZCg9943vq93AmFKnbtrFd7bfZBiGBmOgiYYKD7qipJyirD8a3KxZC2GgLXxok3Dj2ZBObBCyBqHoLywAZAdC7mpmnbcTOYKZCZB6wZD"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "03df89f2-1418-42ca-9834-f4d33538e627",
      "name": "send fb11",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5500,
        3440
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1lM_TG2ExLdbs1YoBcaFzBFscVqB3MOEFjBFnvE9kAa0/edit?gid=0#gid=0",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": 2060972300,
          "mode": "list",
          "cachedResultName": "client_message_cms",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1lM_TG2ExLdbs1YoBcaFzBFscVqB3MOEFjBFnvE9kAa0/edit#gid=2060972300"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id_client_message": "={{ $('Loop Over Items1').item.json.id_client_message }}",
            "status_ticket": "ok"
          },
          "matchingColumns": [
            "id_client_message"
          ],
          "schema": [
            {
              "id": "conversation_id",
              "displayName": "conversation_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "update_time",
              "displayName": "update_time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "id_client_message",
              "displayName": "id_client_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "id_workchat",
              "displayName": "id_workchat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "name_client_facebook",
              "displayName": "name_client_facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email_client_facebook",
              "displayName": "email_client_facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "message_worchat",
              "displayName": "message_worchat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email_worksuit",
              "displayName": "email_worksuit",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status_ticket",
              "displayName": "status_ticket",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "a61152a1-9e7f-45f0-a7b5-7176c22825a7",
      "name": "Save messaage16",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        5720,
        3440
      ],
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "P5h6CdXmV7twphIt",
          "name": "Canh Google Sheets"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://erp-amz.cloodo.com/v4/tickets",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"tags\": [],\n  \"project_id\": \"{{ $('Cloodo CRM18').item.json.data[0].id }}\",\n  \"user_id\": \"{{ $('Cloodo CRM1').item.json.data[0].user.id }}\",\n  \"subject\": \"{{ $('check have issue5').item.json.jsonOutput.title }}\",\n  \"priority\": \"medium\",\n  \"agent_id\": \"2c991f1a-6665-4533-bfca-ac969f431eb2\",\n  \"type_id\": \"{{ $json.jsonOutput.type_ticket }}\",\n  \"channel_id\": \"931082dc-2e77-4c9a-86e6-b3c20a5c6b22\",\n  \"status\": \"open\",\n \"message\": \"{{ $json.output }}\",\n  \"note\": \"{{ $('check have issue5').item.json.jsonOutput.note }}\",\n  \"ticket_files\": [],\n  \"created_at\": \"{{ $('Loop Over Items1').item.json.update_time }}\"\n\n}",
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "defe0bc0-f148-4ca2-8ee1-30e5d0dbcc5a",
      "name": "Create Ticket7",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4480,
        3440
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v22.0/213439902114044/messages",
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "recipient",
              "value": "={\"id\":\"{{ $('Loop Over Items1').item.json.id_client_message }}\"}"
            },
            {
              "name": "messaging_type",
              "value": "MESSAGE_TAG"
            },
            {
              "name": "tag",
              "value": "ACCOUNT_UPDATE"
            },
            {
              "name": "message",
              "value": "={\"text\":\"Hello {{ $('Loop Over Items1').item.json.name_client_facebook }},\\n\\nBased on our conversation, I have created an account on your behalf to better assist you. You can check and follow up anytime here:\\n\\n🔗 Cmsmart Dashboard Support Ticket:\\nhttps://dashboard.cmsmart.net/apps/tickets/all-tickets\\n\\n🔹 Login Details:\\n\\nUsername: {{ $('Cloodo CRM1').item.json.data[0].user.name }}\\nIf you don't have an account yet, you can create one with your email here: https://cmsmart.net/login?view=registration\\nIf you forgot your password, reset it here: https://cmsmart.net/login?view=reset\\nIf you have any questions, please email support@cmsmart.net or chat with Vincent on WhatsApp:\\n📩 WhatsApp: https://wa.me/+84967319788\\n\\nLet us know if you need more information! 😊\\n\\nBest regards,\\nCmsmart E-commerce Team\"}"
            },
            {
              "name": "access_token",
              "value": "EAA3ZCtCZCe57kBOzXf4fqSrVflYWE5Fk2P0BNfjOerautjGD8cKV0pZAnvdV3zRQwokzJiKmPUZBRWFn8Tmeq2rPD4zCHvZAZCRZCg9943vq93AmFKnbtrFd7bfZBiGBmOgiYYKD7qipJyirD8a3KxZC2GgLXxok3Dj2ZBObBCyBqHoLywAZAdC7mpmnbcTOYKZCZB6wZD"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "a5d36f94-2457-45e2-a295-9a3e318b37eb",
      "name": "send fb12",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4660,
        3740
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1lM_TG2ExLdbs1YoBcaFzBFscVqB3MOEFjBFnvE9kAa0/edit?gid=0#gid=0",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": 2060972300,
          "mode": "list",
          "cachedResultName": "client_message_cms",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1lM_TG2ExLdbs1YoBcaFzBFscVqB3MOEFjBFnvE9kAa0/edit#gid=2060972300"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id_client_message": "={{ $('Loop Over Items1').item.json.id_client_message }}",
            "status_ticket": "ok"
          },
          "matchingColumns": [
            "id_client_message"
          ],
          "schema": [
            {
              "id": "conversation_id",
              "displayName": "conversation_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "update_time",
              "displayName": "update_time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "id_client_message",
              "displayName": "id_client_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "id_workchat",
              "displayName": "id_workchat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "name_client_facebook",
              "displayName": "name_client_facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email_client_facebook",
              "displayName": "email_client_facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "message_worchat",
              "displayName": "message_worchat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email_worksuit",
              "displayName": "email_worksuit",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status_ticket",
              "displayName": "status_ticket",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "8c6a4502-9c14-4a5a-869c-8da9f664b5ff",
      "name": "Save messaage17",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        4880,
        3740
      ],
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "P5h6CdXmV7twphIt",
          "name": "Canh Google Sheets"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  let messagerAI = $node['Code Convert to JSON5']?.json?.jsonOutput?.description\n  messagerAI = messagerAI.replace(/\\n\\n/g, '');\n  messagerAI = messagerAI.replace(/\\n/g, '');\n  messagerAI = messagerAI.replace(/<br><br>/g, '');\n  item.json.output = messagerAI;\n}\n\nreturn $input.all();\n"
      },
      "id": "f5ef17cf-d9f9-4b23-a556-58a4a3122212",
      "name": "Code13",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4060,
        3460
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.cloodo.com/link_account_fb.php",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "email",
              "value": "={{ $('Loop Over Items1').item.json.email_client_facebook }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "16425892-6b1d-4d00-9adf-ed0683f64679",
      "name": "getLink5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4440,
        3740
      ],
      "disabled": true
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "=https://erp-amz.cloodo.com/v4/clients/{{ $json.data.user.id }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"id\": \"{{ $json.data.user.id }}\",\n    \"name\": \"{{ $('Loop Over Items1').item.json.name_client_facebook }}\",\n    \"email\": \"{{ $json.data.user.email }}\",\n    \"password\": \"x7M&dL^!9wQ^#2tV4%\",\n    \"country_id\": \"588964da-703b-4761-9bd0-7e015a110f11\",\n    \"image\": \"\"\n}",
        "options": {}
      },
      "id": "f00dcf76-6dde-4b48-bdb7-04c82b63cd63",
      "name": "HTTP Request8",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4320,
        4560
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "resource": "clientDetails",
        "ID": "={{ $json.data[0].user.id }}",
        "requestOptions": {}
      },
      "id": "36d5a5ea-81a6-4024-81ee-16f04c3e1a61",
      "name": "Cloodo CRM18",
      "type": "@cloodo/n8n-nodes-cloodo-crm.CloodoLeads",
      "typeVersion": 1,
      "position": [
        2460,
        3280
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.email_worksuit }}",
                    "rightValue": "@facebook.com",
                    "operator": {
                      "type": "string",
                      "operation": "notContains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "email"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e644adb6-1d64-4dce-8228-35d7c8bfe276",
                    "leftValue": "={{ $json.email_worksuit }}",
                    "rightValue": "@facebook.com",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "emailFacebook"
            }
          ]
        },
        "options": {}
      },
      "id": "d1be9ab0-5481-4ee5-9a26-56a077f53934",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        680,
        1920
      ]
    },
    {
      "parameters": {
        "resource": "assistant",
        "assistantId": {
          "__rl": true,
          "value": "asst_zcZjKKD7msrnRvUMoHUoWzhV",
          "mode": "list",
          "cachedResultName": "Cmsmart AI"
        },
        "prompt": "define",
        "text": "=You are a project assistant whom responsible for creating client-facing tickets based on provided chat or email content. \n\nAnalyze the following conversation messages between the client and admin. Focus on the most recent messages sent by the client, especially the last one, to determine the client's intent and construct a JSON object based on the following format:\n{\n  \"title\": \"\",\n  \"description\": \"\",\n  \"note\":\"\",\n  \"type\":\"\",\n  \"type_ticket\"\n\n}\n\nInstructions:  \n1. title: Title of the problem the customer encountered:\n2. description: is a detailed description of the problem, \nThe description must include the following sections:\n\n2.1. Summary of Request: A concise overview of what the client is asking for, written in a client-friendly tone.\n2.2 Proposed Next Steps: Clearly outline what actions will be taken by the team and any required input from the client.\n2.3. Action Items: Break down actionable tasks for the internal team and the client.\n\nUse this format:\n\nSummary of Request\n[Summarize the client’s request in a professional and client-friendly tone.]\n\nProposed Next Steps\n[List the steps the team will take to address the request, as well as any input required from the client.]\n\nAction Items\nFor Our Team:\n[List specific tasks for the team to complete.]\nFor You:\n[List any actions required from the client, if applicable.]\n\nMake sure the ticket is clear, actionable, and formatted for both internal use and client review. Use professional and concise language throughout.\n\nSample Input:\n\"tung wants to add a 'Manage Cart' feature to the Auto Reply from WF 50 project.\"\n\nExpected Output:\nA complete ticket with all required sections and a professional tone, formatted as per the structure above.\n\nBase on summary problem provided and History chat messages, let create an object with subject anb message.\n3. note: additional notes, notes, further explanations of the problem and the last .\n4. Ensure the JSON is correctly formatted, valid, and accurately reflects the client’s most recent intent.   \n5. Do not include any explanation, only return the JSON object in the exact specified format.\n6. Remember alway Write description with format like a detail email profesional for our client (Dear [client name]) and focus on problem what client need to help, what client need to help. use html tag for text effect like <strong> for bold text .\n7. type is an analysis of whether the customer conversation has a clear issue if it is a \"clear issue\" or  \"not clear issue\", in which the not clear issue is the conversations such as greeting , unspecified problem...\n8. type_ticket : I have: \na7449e63-6ce3-4840-ab67-27298faf086f -> Product Enquiry,\n0c8ba87a-f6ae-44c2-9c4d-404c49ec255b -> Payment & Billing,\n00f4494e-68c5-4926-9ff1-3faafe812e94 -> Setup Assistance ,\n2b32b674-741a-4833-8328-925a48bef030 -> Feature Requests,\n4bbfa6dd-beb7-43af-926c-f736ca00bdd3 -> Project Maintenance ,\n28cab752-15e1-433e-8abf-609fde9b5b7f -> Renewal and Upsell ,\nf58a0a7e-9561-4cac-a326-6e0cfe93360b -> Onboarding and Training,\n6dc7b7c5-a130-4357-9d83-03030a8a134f -> Custom Development ,\n7abb55c6-8135-44db-b99a-8cabd31aeab0 -> Business Meeting,\n89050de5-8c35-4947-92d2-2c108b32aaa4 -> Extra Service ,\n\n\nare the ids are the names of the ticket types, please classify that content by the ticket type name whichever is appropriate and give me that type of ticket\nCategorization rules:  \n\n1. Product Inquiry  \n   - Keywords: Form requests, new client messages, pricing, product details, compatibility, feature comparisons, demos, trials.  \n   - Client Context: Questions from new or potential clients about product features, compatibility, pricing, or demo requests.  \n   - Examples:  \n     - \"What’s the cost of the Printshop Premium package?\"  \n     - \"Can I see a demo of the Product Designer tool?\"  \n\n2. Payment & Billing  \n   - Keywords: Cancel subscription, refund request, renewal inquiries, invoices, payment errors, prorated upgrades/downgrades.  \n   - Client Context: Issues related to payments, subscriptions, or invoices from clients.  \n   - Examples:  \n     - \"How can I get a refund for my subscription?\"  \n     - \"I need to renew my license for another year.\"  \n\n3. Setup Assistance  \n   - Keywords: Installation, download issues, free plugins, domain setup, hosting issues, product configuration, API setup.  \n   - Client Context: Clients seeking help with the initial setup of a system, plugin, or eCommerce platform.  \n   - Examples:  \n     - \"Help me set up my domain and hosting.\"  \n     - \"I need assistance installing free plugins.\"  \n\n4. Feature Request  \n   - Keywords: Add feature, new functionality, expand capabilities, request enhancement, tool improvement, custom modules.  \n   - Client Context: Clients requesting new features or enhancements for existing tools.  \n   - Examples:  \n     - \"Can you add a one-click checkout feature?\"  \n     - \"I’d like a feature for advanced reporting.\"  \n\n5. Project Maintenance  \n   - Keywords: Bug fix, performance issues, general support requests, system downtime, error reports, minor improvements.  \n   - Client Context: Ongoing support requests from existing clients for bugs, performance optimization, or fixes.  \n   - Examples:  \n     - \"Fix the 500 error on the homepage.\"  \n     - \"The checkout page isn’t working properly.\"  \n\n6. Renewal and Upsell  \n   - Keywords: Contract renewal, subscription upsell, add-on features, expanding services.  \n   - Client Context: Clients looking to renew contracts, subscriptions, or add additional services.  \n   - Examples:  \n     - \"I’d like to renew my subscription for another year.\"  \n     - \"Can you provide an upsell package for advanced analytics?\"  \n\n7. Onboarding and Training  \n   - Keywords: Training session, onboarding assistance, platform overview, user training.  \n   - Client Context: New clients needing guidance to get started with a product or service.  \n   - Examples:  \n     - \"Can you guide me through the platform setup?\"  \n     - \"We need training for our team on the new software.\"  \n\n8. Custom Development  \n   - Keywords: Bespoke features, tailor-made solutions, custom-built modules, specific functionality.  \n   - Client Context: Clients requesting customized solutions tailored to their specific business needs.  \n   - Examples:  \n     - \"We need a custom-built module for order tracking.\"  \n     - \"Can you create a feature that integrates with our existing CRM?\"  \n\n9. Business Meeting  \n   - Keywords: Scheduling meetings, meeting memo, project discussions, progress updates.  \n   - Client Context: Coordination and scheduling of meetings between clients and team members.  \n   - Examples:  \n     - \"Let’s schedule a meeting to discuss the project roadmap.\"  \n     - \"We need to have a progress review with your team next week.\"  \n\n10. Extra Service  \n    - Keywords: Additional service, beyond scope, add-on requests, non-standard service.  \n    - Client Context: Clients requesting extra services beyond what is included in their plan.  \n    - Examples:  \n      - \"Can you provide a custom report for our sales data?\"  \n      - \"We’d like additional security monitoring for our servers.\"  \n\nHere are the history conversation messages: \n\nInformation of client\nclient name: {{ $('Loop Over Items1').item.json.name_client_facebook }}\nproject name : {{ $('Cloodo CRM18').item.json.data[0].name }}\nSummary problem:\n{{ $json.messagesSent }}\n\nALWAYS respond only with the correctly formatted JSON object.",
        "options": {}
      },
      "id": "dc3a2c6e-ae2d-4e75-afd7-e97c6c840d68",
      "name": "OpenAI6",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.7,
      "position": [
        3520,
        3460
      ],
      "credentials": {
        "openAiApi": {
          "id": "wXCGwiut9MvtTGmk",
          "name": "OpenAI CMS"
        }
      }
    },
    {
      "parameters": {
        "resource": "assistant",
        "assistantId": {
          "__rl": true,
          "value": "asst_zcZjKKD7msrnRvUMoHUoWzhV",
          "mode": "list",
          "cachedResultName": "Cmsmart AI"
        },
        "prompt": "define",
        "text": "=You are a project assistant whom responsible for creating client-facing tickets based on provided chat or email content. \n\nAnalyze the following conversation messages between the client and admin. Focus on the most recent messages sent by the client, especially the last one, to determine the client's intent and construct a JSON object based on the following format:\n{\n  \"title\": \"\",\n  \"description\": \"\",\n  \"note\":\"\",\n  \"type\":\"\",\n  \"type_ticket_id\": \n\n}\n\nInstructions:  \n1. title: Title of the problem the customer encountered:\n2. description: is a detailed description of the problem, \nThe description must include the following sections:\n\n2.1. Summary of Request: A concise overview of what the client is asking for, written in a client-friendly tone.\n2.2 Proposed Next Steps: Clearly outline what actions will be taken by the team and any required input from the client.\n2.3. Action Items: Break down actionable tasks for the internal team and the client.\n\nUse this format:\n\nSummary of Request\n[Summarize the client’s request in a professional and client-friendly tone.]\n\nProposed Next Steps\n[List the steps the team will take to address the request, as well as any input required from the client.]\n\nAction Items\nFor Our Team:\n[List specific tasks for the team to complete.]\nFor You:\n[List any actions required from the client, if applicable.]\n\nMake sure the ticket is clear, actionable, and formatted for both internal use and client review. Use professional and concise language throughout.\n\nSample Input:\n\"tung wants to add a 'Manage Cart' feature to the Auto Reply from WF 50 project.\"\n\nExpected Output:\nA complete ticket with all required sections and a professional tone, formatted as per the structure above.\n\nBase on summary problem provided and History chat messages, let create an object with subject anb message.\n3. note: additional notes, notes, further explanations of the problem and the last .\n4. Ensure the JSON is correctly formatted, valid, and accurately reflects the client’s most recent intent.   \n5. Do not include any explanation, only return the JSON object in the exact specified format.\n6. Remember alway Write description with format like a detail email profesional for our client (Dear [client name]) and focus on problem what client need to help, what client need to help. use html tag for text effect like <strong> for bold text .\n7. type is an analysis of whether the customer conversation has a clear issue if it is a \"clear issue\" or  \"not clear issue\", in which the not clear issue is the conversations such as greeting , unspecified problem...\n8. type_ticket : I have: \na7449e63-6ce3-4840-ab67-27298faf086f -> Product Enquiry,\n0c8ba87a-f6ae-44c2-9c4d-404c49ec255b -> Payment & Billing,\n00f4494e-68c5-4926-9ff1-3faafe812e94 -> Setup Assistance ,\n2b32b674-741a-4833-8328-925a48bef030 -> Feature Requests,\n4bbfa6dd-beb7-43af-926c-f736ca00bdd3 -> Project Maintenance ,\n28cab752-15e1-433e-8abf-609fde9b5b7f -> Renewal and Upsell ,\nf58a0a7e-9561-4cac-a326-6e0cfe93360b -> Onboarding and Training,\n6dc7b7c5-a130-4357-9d83-03030a8a134f -> Custom Development ,\n7abb55c6-8135-44db-b99a-8cabd31aeab0 -> Business Meeting,\n89050de5-8c35-4947-92d2-2c108b32aaa4 -> Extra Service ,\n\n\nare the ids are the names of the ticket types, please classify that content by the ticket type name whichever is appropriate and give me that type of ticket\nCategorization rules:  \n\n1. Product Inquiry  \n   - Keywords: Form requests, new client messages, pricing, product details, compatibility, feature comparisons, demos, trials.  \n   - Client Context: Questions from new or potential clients about product features, compatibility, pricing, or demo requests.  \n   - Examples:  \n     - \"What’s the cost of the Printshop Premium package?\"  \n     - \"Can I see a demo of the Product Designer tool?\"  \n\n2. Payment & Billing  \n   - Keywords: Cancel subscription, refund request, renewal inquiries, invoices, payment errors, prorated upgrades/downgrades.  \n   - Client Context: Issues related to payments, subscriptions, or invoices from clients.  \n   - Examples:  \n     - \"How can I get a refund for my subscription?\"  \n     - \"I need to renew my license for another year.\"  \n\n3. Setup Assistance  \n   - Keywords: Installation, download issues, free plugins, domain setup, hosting issues, product configuration, API setup.  \n   - Client Context: Clients seeking help with the initial setup of a system, plugin, or eCommerce platform.  \n   - Examples:  \n     - \"Help me set up my domain and hosting.\"  \n     - \"I need assistance installing free plugins.\"  \n\n4. Feature Request  \n   - Keywords: Add feature, new functionality, expand capabilities, request enhancement, tool improvement, custom modules.  \n   - Client Context: Clients requesting new features or enhancements for existing tools.  \n   - Examples:  \n     - \"Can you add a one-click checkout feature?\"  \n     - \"I’d like a feature for advanced reporting.\"  \n\n5. Project Maintenance  \n   - Keywords: Bug fix, performance issues, general support requests, system downtime, error reports, minor improvements.  \n   - Client Context: Ongoing support requests from existing clients for bugs, performance optimization, or fixes.  \n   - Examples:  \n     - \"Fix the 500 error on the homepage.\"  \n     - \"The checkout page isn’t working properly.\"  \n\n6. Renewal and Upsell  \n   - Keywords: Contract renewal, subscription upsell, add-on features, expanding services.  \n   - Client Context: Clients looking to renew contracts, subscriptions, or add additional services.  \n   - Examples:  \n     - \"I’d like to renew my subscription for another year.\"  \n     - \"Can you provide an upsell package for advanced analytics?\"  \n\n7. Onboarding and Training  \n   - Keywords: Training session, onboarding assistance, platform overview, user training.  \n   - Client Context: New clients needing guidance to get started with a product or service.  \n   - Examples:  \n     - \"Can you guide me through the platform setup?\"  \n     - \"We need training for our team on the new software.\"  \n\n8. Custom Development  \n   - Keywords: Bespoke features, tailor-made solutions, custom-built modules, specific functionality.  \n   - Client Context: Clients requesting customized solutions tailored to their specific business needs.  \n   - Examples:  \n     - \"We need a custom-built module for order tracking.\"  \n     - \"Can you create a feature that integrates with our existing CRM?\"  \n\n9. Business Meeting  \n   - Keywords: Scheduling meetings, meeting memo, project discussions, progress updates.  \n   - Client Context: Coordination and scheduling of meetings between clients and team members.  \n   - Examples:  \n     - \"Let’s schedule a meeting to discuss the project roadmap.\"  \n     - \"We need to have a progress review with your team next week.\"  \n\n10. Extra Service  \n    - Keywords: Additional service, beyond scope, add-on requests, non-standard service.  \n    - Client Context: Clients requesting extra services beyond what is included in their plan.  \n    - Examples:  \n      - \"Can you provide a custom report for our sales data?\"  \n      - \"We’d like additional security monitoring for our servers.\"  \n\nHere are the history conversation messages: \n\nInformation of client\nclient name: {{ $('Loop Over Items').item.json.name_client_facebook }}\nproject name : {{ $('a Project client').item.json.data[0].name }}\nSummary problem:\n{{ $json.messagesSent }}\n\nALWAYS respond only with the correctly formatted JSON object.",
        "options": {}
      },
      "id": "7a0aeff2-accc-4536-9b6d-ffe711926259",
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.7,
      "position": [
        4060,
        1320
      ],
      "credentials": {
        "openAiApi": {
          "id": "wXCGwiut9MvtTGmk",
          "name": "OpenAI CMS"
        }
      }
    },
    {
      "parameters": {
        "resource": "assistant",
        "assistantId": {
          "__rl": true,
          "value": "asst_zcZjKKD7msrnRvUMoHUoWzhV",
          "mode": "list",
          "cachedResultName": "Cmsmart AI"
        },
        "prompt": "define",
        "text": "=You are a project assistant whom responsible for creating client-facing tickets based on provided chat or email content. \n\nAnalyze the following conversation messages between the client and admin. Focus on the most recent messages sent by the client, especially the last one, to determine the client's intent and construct a JSON object based on the following format:\n{\n  \"title\": \"\",\n  \"description\": \"\",\n  \"note\":\"\",\n  \"type\":\"\",\n  \"type_ticket_id\":\n\n}\n\nInstructions:  \n1. title: Title of the problem the customer encountered:\n2. description: is a detailed description of the problem, \nThe description must include the following sections:\n\n2.1. Summary of Request: A concise overview of what the client is asking for, written in a client-friendly tone.\n2.2 Proposed Next Steps: Clearly outline what actions will be taken by the team and any required input from the client.\n2.3. Action Items: Break down actionable tasks for the internal team and the client.\n\nUse this format:\n\nSummary of Request\n[Summarize the client’s request in a professional and client-friendly tone.]\n\nProposed Next Steps\n[List the steps the team will take to address the request, as well as any input required from the client.]\n\nAction Items\nFor Our Team:\n[List specific tasks for the team to complete.]\nFor You:\n[List any actions required from the client, if applicable.]\n\nMake sure the ticket is clear, actionable, and formatted for both internal use and client review. Use professional and concise language throughout.\n\nSample Input:\n\"tung wants to add a 'Manage Cart' feature to the Auto Reply from WF 50 project.\"\n\nExpected Output:\nA complete ticket with all required sections and a professional tone, formatted as per the structure above.\n\nBase on summary problem provided and History chat messages, let create an object with subject anb message.\n3. note: additional notes, notes, further explanations of the problem and the last .\n4. Ensure the JSON is correctly formatted, valid, and accurately reflects the client’s most recent intent.   \n5. Do not include any explanation, only return the JSON object in the exact specified format.\n6. Remember alway Write description with format like a detail email profesional for our client (Dear [client name]) and focus on problem what client need to help, what client need to help. use html tag for text effect like <strong> for bold text .\n7. type is an analysis of whether the customer conversation has a clear issue if it is a \"clear issue\" or  \"not clear issue\", in which the not clear issue is the conversations such as greeting , unspecified problem...\n8. type_ticket : I have: \na7449e63-6ce3-4840-ab67-27298faf086f -> Product Enquiry,\n0c8ba87a-f6ae-44c2-9c4d-404c49ec255b -> Payment & Billing,\n00f4494e-68c5-4926-9ff1-3faafe812e94 -> Setup Assistance ,\n2b32b674-741a-4833-8328-925a48bef030 -> Feature Requests,\n4bbfa6dd-beb7-43af-926c-f736ca00bdd3 -> Project Maintenance ,\n28cab752-15e1-433e-8abf-609fde9b5b7f -> Renewal and Upsell ,\nf58a0a7e-9561-4cac-a326-6e0cfe93360b -> Onboarding and Training,\n6dc7b7c5-a130-4357-9d83-03030a8a134f -> Custom Development ,\n7abb55c6-8135-44db-b99a-8cabd31aeab0 -> Business Meeting,\n89050de5-8c35-4947-92d2-2c108b32aaa4 -> Extra Service ,\n\n\nare the ids are the names of the ticket types, please classify that content by the ticket type name whichever is appropriate and give me that type of ticket\nCategorization rules:  \n\n1. Product Inquiry  \n   - Keywords: Form requests, new client messages, pricing, product details, compatibility, feature comparisons, demos, trials.  \n   - Client Context: Questions from new or potential clients about product features, compatibility, pricing, or demo requests.  \n   - Examples:  \n     - \"What’s the cost of the Printshop Premium package?\"  \n     - \"Can I see a demo of the Product Designer tool?\"  \n\n2. Payment & Billing  \n   - Keywords: Cancel subscription, refund request, renewal inquiries, invoices, payment errors, prorated upgrades/downgrades.  \n   - Client Context: Issues related to payments, subscriptions, or invoices from clients.  \n   - Examples:  \n     - \"How can I get a refund for my subscription?\"  \n     - \"I need to renew my license for another year.\"  \n\n3. Setup Assistance  \n   - Keywords: Installation, download issues, free plugins, domain setup, hosting issues, product configuration, API setup.  \n   - Client Context: Clients seeking help with the initial setup of a system, plugin, or eCommerce platform.  \n   - Examples:  \n     - \"Help me set up my domain and hosting.\"  \n     - \"I need assistance installing free plugins.\"  \n\n4. Feature Request  \n   - Keywords: Add feature, new functionality, expand capabilities, request enhancement, tool improvement, custom modules.  \n   - Client Context: Clients requesting new features or enhancements for existing tools.  \n   - Examples:  \n     - \"Can you add a one-click checkout feature?\"  \n     - \"I’d like a feature for advanced reporting.\"  \n\n5. Project Maintenance  \n   - Keywords: Bug fix, performance issues, general support requests, system downtime, error reports, minor improvements.  \n   - Client Context: Ongoing support requests from existing clients for bugs, performance optimization, or fixes.  \n   - Examples:  \n     - \"Fix the 500 error on the homepage.\"  \n     - \"The checkout page isn’t working properly.\"  \n\n6. Renewal and Upsell  \n   - Keywords: Contract renewal, subscription upsell, add-on features, expanding services.  \n   - Client Context: Clients looking to renew contracts, subscriptions, or add additional services.  \n   - Examples:  \n     - \"I’d like to renew my subscription for another year.\"  \n     - \"Can you provide an upsell package for advanced analytics?\"  \n\n7. Onboarding and Training  \n   - Keywords: Training session, onboarding assistance, platform overview, user training.  \n   - Client Context: New clients needing guidance to get started with a product or service.  \n   - Examples:  \n     - \"Can you guide me through the platform setup?\"  \n     - \"We need training for our team on the new software.\"  \n\n8. Custom Development  \n   - Keywords: Bespoke features, tailor-made solutions, custom-built modules, specific functionality.  \n   - Client Context: Clients requesting customized solutions tailored to their specific business needs.  \n   - Examples:  \n     - \"We need a custom-built module for order tracking.\"  \n     - \"Can you create a feature that integrates with our existing CRM?\"  \n\n9. Business Meeting  \n   - Keywords: Scheduling meetings, meeting memo, project discussions, progress updates.  \n   - Client Context: Coordination and scheduling of meetings between clients and team members.  \n   - Examples:  \n     - \"Let’s schedule a meeting to discuss the project roadmap.\"  \n     - \"We need to have a progress review with your team next week.\"  \n\n10. Extra Service  \n    - Keywords: Additional service, beyond scope, add-on requests, non-standard service.  \n    - Client Context: Clients requesting extra services beyond what is included in their plan.  \n    - Examples:  \n      - \"Can you provide a custom report for our sales data?\"  \n      - \"We’d like additional security monitoring for our servers.\"  \n\nHere are the history conversation messages: \n\nInformation of client\nclient name: {{ $('Loop Over Items').item.json.name_client_facebook }}\nproject name : {{ $('Cloodo CRM9').item.json.data.name }}\nSummary problem:\n{{ $json.messagesSent }}\n\nALWAYS respond only with the correctly formatted JSON object.",
        "options": {}
      },
      "id": "01d063bf-de58-4c00-a809-5bee870d10c3",
      "name": "OpenAI2",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.7,
      "position": [
        3960,
        820
      ],
      "credentials": {
        "openAiApi": {
          "id": "wXCGwiut9MvtTGmk",
          "name": "OpenAI CMS"
        }
      }
    },
    {
      "parameters": {
        "resource": "assistant",
        "assistantId": {
          "__rl": true,
          "value": "asst_zcZjKKD7msrnRvUMoHUoWzhV",
          "mode": "list",
          "cachedResultName": "Cmsmart AI"
        },
        "prompt": "define",
        "text": "=You are a project assistant whom responsible for creating client-facing tickets based on provided chat or email content. \n\nAnalyze the following conversation messages between the client and admin. Focus on the most recent messages sent by the client, especially the last one, to determine the client's intent and construct a JSON object based on the following format:\n{\n  \"title\": \"\",\n  \"description\": \"\",\n  \"note\":\"\",\n  \"type\":\"\",\n  \"type_ticket_id\"\n\n}\n\nInstructions:  \n1. title: Title of the problem the customer encountered:\n2. description: is a detailed description of the problem, \nThe description must include the following sections:\n\n2.1. Summary of Request: A concise overview of what the client is asking for, written in a client-friendly tone.\n2.2 Proposed Next Steps: Clearly outline what actions will be taken by the team and any required input from the client.\n2.3. Action Items: Break down actionable tasks for the internal team and the client.\n\nUse this format:\n\nSummary of Request\n[Summarize the client’s request in a professional and client-friendly tone.]\n\nProposed Next Steps\n[List the steps the team will take to address the request, as well as any input required from the client.]\n\nAction Items\nFor Our Team:\n[List specific tasks for the team to complete.]\nFor You:\n[List any actions required from the client, if applicable.]\n\nMake sure the ticket is clear, actionable, and formatted for both internal use and client review. Use professional and concise language throughout.\n\nSample Input:\n\"tung wants to add a 'Manage Cart' feature to the Auto Reply from WF 50 project.\"\n\nExpected Output:\nA complete ticket with all required sections and a professional tone, formatted as per the structure above.\n\nBase on summary problem provided and History chat messages, let create an object with subject anb message.\n3. note: additional notes, notes, further explanations of the problem and the last .\n4. Ensure the JSON is correctly formatted, valid, and accurately reflects the client’s most recent intent.   \n5. Do not include any explanation, only return the JSON object in the exact specified format.\n6. Remember alway Write description with format like a detail email profesional for our client (Dear [client name]) and focus on problem what client need to help, what client need to help. use html tag for text effect like <strong> for bold text .\n7. type is an analysis of whether the customer conversation has a clear issue if it is a \"clear issue\" or  \"not clear issue\", in which the not clear issue is the conversations such as greeting , unspecified problem...\n8. type_ticket : I have: \na7449e63-6ce3-4840-ab67-27298faf086f -> Product Enquiry,\n0c8ba87a-f6ae-44c2-9c4d-404c49ec255b -> Payment & Billing,\n00f4494e-68c5-4926-9ff1-3faafe812e94 -> Setup Assistance ,\n2b32b674-741a-4833-8328-925a48bef030 -> Feature Requests,\n4bbfa6dd-beb7-43af-926c-f736ca00bdd3 -> Project Maintenance ,\n28cab752-15e1-433e-8abf-609fde9b5b7f -> Renewal and Upsell ,\nf58a0a7e-9561-4cac-a326-6e0cfe93360b -> Onboarding and Training,\n6dc7b7c5-a130-4357-9d83-03030a8a134f -> Custom Development ,\n7abb55c6-8135-44db-b99a-8cabd31aeab0 -> Business Meeting,\n89050de5-8c35-4947-92d2-2c108b32aaa4 -> Extra Service ,\n\n\ntype_ticket always is id, are the ids are the names of the ticket types, please classify that content by the ticket type name whichever is appropriate and give me that type of ticket\nCategorization rules:  \n\n1. Product Inquiry  \n   - Keywords: Form requests, new client messages, pricing, product details, compatibility, feature comparisons, demos, trials.  \n   - Client Context: Questions from new or potential clients about product features, compatibility, pricing, or demo requests.  \n   - Examples:  \n     - \"What’s the cost of the Printshop Premium package?\"  \n     - \"Can I see a demo of the Product Designer tool?\"  \n\n2. Payment & Billing  \n   - Keywords: Cancel subscription, refund request, renewal inquiries, invoices, payment errors, prorated upgrades/downgrades.  \n   - Client Context: Issues related to payments, subscriptions, or invoices from clients.  \n   - Examples:  \n     - \"How can I get a refund for my subscription?\"  \n     - \"I need to renew my license for another year.\"  \n\n3. Setup Assistance  \n   - Keywords: Installation, download issues, free plugins, domain setup, hosting issues, product configuration, API setup.  \n   - Client Context: Clients seeking help with the initial setup of a system, plugin, or eCommerce platform.  \n   - Examples:  \n     - \"Help me set up my domain and hosting.\"  \n     - \"I need assistance installing free plugins.\"  \n\n4. Feature Request  \n   - Keywords: Add feature, new functionality, expand capabilities, request enhancement, tool improvement, custom modules.  \n   - Client Context: Clients requesting new features or enhancements for existing tools.  \n   - Examples:  \n     - \"Can you add a one-click checkout feature?\"  \n     - \"I’d like a feature for advanced reporting.\"  \n\n5. Project Maintenance  \n   - Keywords: Bug fix, performance issues, general support requests, system downtime, error reports, minor improvements.  \n   - Client Context: Ongoing support requests from existing clients for bugs, performance optimization, or fixes.  \n   - Examples:  \n     - \"Fix the 500 error on the homepage.\"  \n     - \"The checkout page isn’t working properly.\"  \n\n6. Renewal and Upsell  \n   - Keywords: Contract renewal, subscription upsell, add-on features, expanding services.  \n   - Client Context: Clients looking to renew contracts, subscriptions, or add additional services.  \n   - Examples:  \n     - \"I’d like to renew my subscription for another year.\"  \n     - \"Can you provide an upsell package for advanced analytics?\"  \n\n7. Onboarding and Training  \n   - Keywords: Training session, onboarding assistance, platform overview, user training.  \n   - Client Context: New clients needing guidance to get started with a product or service.  \n   - Examples:  \n     - \"Can you guide me through the platform setup?\"  \n     - \"We need training for our team on the new software.\"  \n\n8. Custom Development  \n   - Keywords: Bespoke features, tailor-made solutions, custom-built modules, specific functionality.  \n   - Client Context: Clients requesting customized solutions tailored to their specific business needs.  \n   - Examples:  \n     - \"We need a custom-built module for order tracking.\"  \n     - \"Can you create a feature that integrates with our existing CRM?\"  \n\n9. Business Meeting  \n   - Keywords: Scheduling meetings, meeting memo, project discussions, progress updates.  \n   - Client Context: Coordination and scheduling of meetings between clients and team members.  \n   - Examples:  \n     - \"Let’s schedule a meeting to discuss the project roadmap.\"  \n     - \"We need to have a progress review with your team next week.\"  \n\n10. Extra Service  \n    - Keywords: Additional service, beyond scope, add-on requests, non-standard service.  \n    - Client Context: Clients requesting extra services beyond what is included in their plan.  \n    - Examples:  \n      - \"Can you provide a custom report for our sales data?\"  \n      - \"We’d like additional security monitoring for our servers.\"  \n\nHere are the history conversation messages: \n\nInformation of client\nclient name: {{ $('Loop Over Items1').item.json.name_client_facebook }}\nproject name : {{ $('Cloodo CRM13').item.json.data.name }}\nSummary problem:\n{{ $json.messagesSent }}\n\nALWAYS respond only with the correctly formatted JSON object.",
        "options": {}
      },
      "id": "e7ebccd0-7714-490e-8198-ffc86b7f9a2c",
      "name": "OpenAI5",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.7,
      "position": [
        4260,
        2760
      ],
      "credentials": {
        "openAiApi": {
          "id": "wXCGwiut9MvtTGmk",
          "name": "OpenAI CMS"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b6a54fcd-3f5b-4448-a88b-f8fb6918c426",
              "leftValue": "={{ $json.email_worksuit }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "39b9ef7c-d5fe-4724-be12-acb582b27ab4",
      "name": "If4",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        440,
        1960
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Save messaage9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save messaage4": {
      "main": [
        [
          {
            "node": "Take item",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Take item": {
      "main": [
        [
          {
            "node": "Filter email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo CRM": {
      "main": [
        [
          {
            "node": "check data clietn",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo CRM1": {
      "main": [
        [
          {
            "node": "check data client",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check data clietn": {
      "main": [
        [
          {
            "node": "Cloodo CRM8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update contact client3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check data client": {
      "main": [
        [
          {
            "node": "Cloodo CRM12",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Cloodo CRM18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update contact client3": {
      "main": [
        [
          {
            "node": "a Project client",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "a Project client": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Get Detail Messages1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Cloodo CRM4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Detail Messages1": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate1": {
      "main": [
        [
          {
            "node": "Get All Messages and id agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Messages and id agent1": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code Convert to JSON1": {
      "main": [
        [
          {
            "node": "Code8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check have issue1": {
      "main": [
        [
          {
            "node": "Create Ticket",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "send fb1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Cloodo CRM",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Ticket": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Cloodo CRM2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo CRM2": {
      "main": [
        [
          {
            "node": "send fb",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "send fb": {
      "main": [
        [
          {
            "node": "Save messaage5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save messaage5": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Ticket": {
      "main": [
        [
          {
            "node": "Get Ticket",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "send fb1": {
      "main": [
        [
          {
            "node": "Save messaage6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save messaage6": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code8": {
      "main": [
        [
          {
            "node": "check have issue1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Cloodo CRM3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo CRM4": {
      "main": [
        [
          {
            "node": "Get Detail Messages3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [],
        [
          {
            "node": "Cloodo CRM1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update contact client": {
      "main": [
        [
          {
            "node": "Create Project",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Detail Messages": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Get All Messages and id agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Messages and id agent": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code Convert to JSON": {
      "main": [
        [
          {
            "node": "Code9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check have issue": {
      "main": [
        [
          {
            "node": "Create Ticket3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "getLink1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Ticket1": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Cloodo CRM7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "send fb2": {
      "main": [
        [
          {
            "node": "Save messaage7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Ticket3": {
      "main": [
        [
          {
            "node": "Get Ticket1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "send fb3": {
      "main": [
        [
          {
            "node": "Save messaage8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code9": {
      "main": [
        [
          {
            "node": "check have issue",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Project": {
      "main": [
        [
          {
            "node": "Get Detail Messages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "Code Convert to JSON",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "getLink": {
      "main": [
        [
          {
            "node": "send fb9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save messaage9": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo CRM8": {
      "main": [
        [
          {
            "node": "Update contact client4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update contact client4": {
      "main": [
        [
          {
            "node": "Cloodo CRM9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo CRM9": {
      "main": [
        [
          {
            "node": "Get Detail Messages2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Detail Messages2": {
      "main": [
        [
          {
            "node": "Aggregate2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate2": {
      "main": [
        [
          {
            "node": "Get All Messages and id agent2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Messages and id agent2": {
      "main": [
        [
          {
            "node": "OpenAI2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code Convert to JSON2": {
      "main": [
        [
          {
            "node": "Code10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check have issue2": {
      "main": [
        [
          {
            "node": "Create Ticket4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "send fb5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Ticket2": {
      "main": [
        [
          {
            "node": "HTTP Request3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request3": {
      "main": [
        [
          {
            "node": "Cloodo CRM10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo CRM10": {
      "main": [
        [
          {
            "node": "send fb4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "send fb4": {
      "main": [
        [
          {
            "node": "Save messaage10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save messaage10": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Ticket4": {
      "main": [
        [
          {
            "node": "Get Ticket2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "send fb5": {
      "main": [
        [
          {
            "node": "Save messaage11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save messaage11": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code10": {
      "main": [
        [
          {
            "node": "check have issue2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI3": {
      "main": [
        [
          {
            "node": "Standardize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Detail Messages3": {
      "main": [
        [
          {
            "node": "Aggregate3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate3": {
      "main": [
        [
          {
            "node": "Get All Messages and id agent3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Messages and id agent3": {
      "main": [
        [
          {
            "node": "OpenAI4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code Convert to JSON3": {
      "main": [
        [
          {
            "node": "Code11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check have issue3": {
      "main": [
        [
          {
            "node": "Create Ticket5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "send fb8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Ticket3": {
      "main": [
        [
          {
            "node": "HTTP Request4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request4": {
      "main": [
        [
          {
            "node": "Cloodo CRM11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo CRM11": {
      "main": [
        [
          {
            "node": "send fb7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "send fb7": {
      "main": [
        [
          {
            "node": "Save messaage12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save messaage12": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Ticket5": {
      "main": [
        [
          {
            "node": "Get Ticket3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "send fb8": {
      "main": [
        [
          {
            "node": "Save messaage13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save messaage13": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code11": {
      "main": [
        [
          {
            "node": "check have issue3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "getLink1": {
      "main": [
        [
          {
            "node": "send fb3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo CRM12": {
      "main": [
        [
          {
            "node": "HTTP Request6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update contact client5": {
      "main": [
        [
          {
            "node": "Cloodo CRM13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo CRM13": {
      "main": [
        [
          {
            "node": "Get Detail Messages4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Detail Messages4": {
      "main": [
        [
          {
            "node": "Aggregate4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate4": {
      "main": [
        [
          {
            "node": "Get All Messages and id agent4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Messages and id agent4": {
      "main": [
        [
          {
            "node": "OpenAI5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code Convert to JSON4": {
      "main": [
        [
          {
            "node": "Code12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check have issue4": {
      "main": [
        [
          {
            "node": "Create Ticket6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "getLink3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Ticket4": {
      "main": [
        [
          {
            "node": "HTTP Request5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request5": {
      "main": [
        [
          {
            "node": "Cloodo CRM14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo CRM14": {
      "main": [
        [
          {
            "node": "getLink",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "send fb9": {
      "main": [
        [
          {
            "node": "Save messaage14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save messaage14": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Ticket6": {
      "main": [
        [
          {
            "node": "Get Ticket4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "send fb10": {
      "main": [
        [
          {
            "node": "Save messaage15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save messaage15": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code12": {
      "main": [
        [
          {
            "node": "check have issue4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI4": {
      "main": [
        [
          {
            "node": "Code Convert to JSON3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "getLink3": {
      "main": [
        [
          {
            "node": "send fb10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request6": {
      "main": [
        [
          {
            "node": "Update contact client5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "getLink4": {
      "main": [
        [
          {
            "node": "send fb11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo CRM15": {
      "main": [
        [
          {
            "node": "HTTP Request8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update contact client6": {
      "main": [
        [
          {
            "node": "Cloodo CRM16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Detail Messages5": {
      "main": [
        [
          {
            "node": "Aggregate5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate5": {
      "main": [
        [
          {
            "node": "Get All Messages and id agent5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Messages and id agent5": {
      "main": [
        [
          {
            "node": "OpenAI6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code Convert to JSON5": {
      "main": [
        [
          {
            "node": "Code13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check have issue5": {
      "main": [
        [
          {
            "node": "Create Ticket7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "getLink5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Ticket5": {
      "main": [
        [
          {
            "node": "HTTP Request7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request7": {
      "main": [
        [
          {
            "node": "Cloodo CRM17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo CRM17": {
      "main": [
        [
          {
            "node": "getLink4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "send fb11": {
      "main": [
        [
          {
            "node": "Save messaage16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save messaage16": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Ticket7": {
      "main": [
        [
          {
            "node": "Get Ticket5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "send fb12": {
      "main": [
        [
          {
            "node": "Save messaage17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save messaage17": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code13": {
      "main": [
        [
          {
            "node": "check have issue5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "getLink5": {
      "main": [
        [
          {
            "node": "send fb12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request8": {
      "main": [
        [
          {
            "node": "Update contact client6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo CRM18": {
      "main": [
        [
          {
            "node": "Get Detail Messages5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI6": {
      "main": [
        [
          {
            "node": "Code Convert to JSON5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Code Convert to JSON1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI2": {
      "main": [
        [
          {
            "node": "Code Convert to JSON2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI5": {
      "main": [
        [
          {
            "node": "Code Convert to JSON4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "521585ff-db89-446f-abc1-4af9d77f2402",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "3909475c03ca6926b6e6edc6a6f06c1feb448ce7ac700d69b17002085d9011f8"
  },
  "id": "dILhubsCZGXohMHt",
  "tags": []
}