{
  "name": "QCM 88",
  "nodes": [
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/departments",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "limit",
              "value": "25"
            }
          ]
        },
        "options": {}
      },
      "id": "e2d69a41-f694-4e8c-8feb-2c2cefab1186",
      "name": "Get All Department",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -8160,
        3300
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/departments",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "limit",
              "value": "25"
            }
          ]
        },
        "options": {}
      },
      "id": "60a3fbb1-14b9-4a85-a44a-c1e2e06bfa42",
      "name": "Get All Department1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -8160,
        3500
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/departments",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "limit",
              "value": "25"
            }
          ]
        },
        "options": {}
      },
      "id": "a5cb641a-98f8-40a9-82b4-9c3fcb3dca35",
      "name": "Get All Department2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -8180,
        3720
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "numberInputs": 3
      },
      "id": "e36999f9-0de9-405b-9a1d-b9394a983b8c",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -7660,
        3500
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "10d481bc-4221-4a40-85e6-b03e209bf424",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -7440,
        3500
      ]
    },
    {
      "parameters": {
        "jsCode": "const allDepartment = $input.all()[0]?.json?.data[2]\nconst member = allDepartment?.member\n  \n\nreturn{\n  name: allDepartment?.name,\n  member: member\n}\n"
      },
      "id": "58d4917a-50aa-40a0-8003-d24e855c6f6e",
      "name": "GetMember",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -7940,
        3300
      ]
    },
    {
      "parameters": {
        "jsCode": "const allDepartment = $input.all()[0]?.json?.data[2]\nconst member = allDepartment?.member\n                     \n\nreturn{\n  name: allDepartment?.name,\n  member: member\n}\n"
      },
      "id": "26ea92db-f3d3-423b-978f-600403b030af",
      "name": "GetMember1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -7940,
        3500
      ]
    },
    {
      "parameters": {
        "jsCode": "const allDepartment = $input.all()[0]?.json?.data[2]\nconst member = allDepartment?.member\n\nreturn{\n  name: allDepartment?.name,\n  member: member\n}\n"
      },
      "id": "ec7e6f74-fa5a-447d-9587-1f5c04baa7be",
      "name": "GetMember2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -7940,
        3720
      ]
    },
    {
      "parameters": {
        "jsCode": "let listMembers = []\n\n// Lấy các thành viên của ba công ty\nconst MemberCms = $input.all()[0]?.json?.data[0]?.member;\nconst MemberPrintCart = $input.all()[0]?.json?.data[1]?.member;\nconst MemberCloodo = $input.all()[0]?.json?.data[2]?.member;\n\n// Thêm tên công ty vào các thành viên\nMemberCms.forEach(member => {\n  member.companyName = 'CmsMart';// Tên công ty cho MemberCms\n  listMembers.push(member)\n});\n\nMemberPrintCart.forEach(member => {\n  member.companyName = 'PrintCart';  // Tên công ty cho MemberPrintCart\n  listMembers.push(member)\n});\n\nMemberCloodo.forEach(member => {\n  member.companyName = 'Cloodo';  // Tên công ty cho MemberCloodo\n  listMembers.push(member)\n});\n\n// Đếm số lượng công ty cho mỗi người theo 'name'\nconst nameCountMap = {};\n\n// Duyệt qua danh sách các thành viên và đếm số lượng công ty theo tên\nlistMembers.forEach(member => {\n  const name = member.name;\n\n  // Nếu tên chưa có trong map, khởi tạo giá trị với 0\n  if (!nameCountMap[name]) {\n    nameCountMap[name] = new Set();  // Sử dụng Set để đảm bảo mỗi công ty chỉ được đếm 1 lần\n  }\n\n  // Thêm tên công ty vào Set để đếm duy nhất\n  nameCountMap[name].add(member.companyName);\n});\n\n// Thêm số lượng công ty vào từng thành viên\nlistMembers.forEach(member => {\n  const name = member.name;\n  member.countCompany = nameCountMap[name].size; // Số lượng công ty mà thành viên tham gia\n});\n\n// Trả về các thành viên đã được cập nhật\nreturn listMembers;"
      },
      "id": "0fb34014-f365-4b33-a3c0-f2cf064296e5",
      "name": "CompanyName",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -7260,
        3500
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.countCompany }}",
                    "rightValue": 1,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "1"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ecaeec34-6fa8-41da-aeb6-827e62de92b3",
                    "leftValue": "={{ $json.countCompany }}",
                    "rightValue": 2,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "2"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8d73594f-9a0b-4b50-b347-ac7eb50f0f13",
                    "leftValue": "={{ $json.countCompany }}",
                    "rightValue": 3,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "3"
            }
          ]
        },
        "options": {}
      },
      "id": "e9f3b727-1b88-4b47-8954-83b23200f987",
      "name": "Count Company",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -7020,
        3500
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6e41004a-24bd-4475-9837-4c1b5e68d983",
              "leftValue": "={{ $json.name }}",
              "rightValue": "Nguyen Duc Phat",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "9c7a4c83-0a48-4e31-9d85-beb98a3c28c5",
      "name": "Remove employee leave1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -5120,
        3520
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "86e8819b-2c5b-4be0-a1a6-cebc8bf0812a",
      "name": "Switch Company2",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -2940,
        1220
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "f9f13b87-4b12-4eb6-919b-12b2902d11b1",
      "name": "Switch Company3",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -2760,
        2720
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "d2e45db4-9988-4a3d-bd86-944b3f3ecf65",
      "name": "Switch Company6",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -2900,
        4100
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6e41004a-24bd-4475-9837-4c1b5e68d983",
              "leftValue": "={{ $json.name }}",
              "rightValue": "Vu Duy The",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "d33662e6-0efe-4c0f-bdcd-c66c36444b8c",
      "name": "Remove employee leave2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -6720,
        4960
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "4ebbdf2d-4b37-4cf7-83b1-13c23a5401e7",
      "name": "Switch Company8",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -6280,
        4960
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Vu Van Minh",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Vu Van Minh"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "dbe7be1f-5b60-42df-bca3-3dd1ab846db7",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Vo Tuan Vu",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Vo Tuan Vu"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "3a1ebf8a-3f5c-44e3-b8eb-22452c6d8a32",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Nguyen Ngoc Huy",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Nguyen Ngoc Huy"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "602b04f8-5e81-4b3d-8537-8435fd5ca9f0",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Pham Ngoc Huy",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Pham Ngoc Huy"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8f2d3c75-6e15-44dd-955f-2462cea6fcf8",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Do Hoang Nam",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Do Hoang Nam"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5ddab4fb-4552-442c-b985-ac486038e5f0",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Hoang Anh Dung",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Hoang Anh Dung"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e4ebcd21-3054-433a-a04e-532ba93b1e19",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Nguyen Duc Canh",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Nguyen Duc Canh"
            }
          ]
        },
        "options": {}
      },
      "id": "26029c81-6eca-4a07-a021-fb3bfea19b54",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -3820,
        3480
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "=749757b1-c92c-4f17-bc8a-19307e06011d",
        "points": 3,
        "note": "=QCM 88: Hoang Anh Dung -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}"
      },
      "id": "f26d3b3d-d7b2-456a-9991-fdf0d073b523",
      "name": "Cloodo Point22",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -220,
        4640
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "a8bc55e7-e9ac-499c-b4f5-e435b99676f5",
      "name": "IF not found20",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -460,
        4660
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: Hoang Anh Dung -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "2ee9ce74-1044-4181-8191-410bcd6757d0",
      "name": "Cloodo Point34",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -660,
        4660
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "21ccc3ad-8dcc-495f-9ff5-7f529ea0a250",
      "name": "Stop and Error23",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        200,
        4620
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "848e5bf3-0144-4a7e-aa26-3e6de4cfbcce",
      "name": "If63",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -60,
        4640
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "d27a33ec-e861-4c2c-9b5d-4f304e7e5651",
      "name": "If74",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2080,
        4140
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h UTC)\nconst startOfTodayUTC = new Date(Date.UTC(currentDate.getUTCFullYear(), currentDate.getUTCMonth(), currentDate.getUTCDate(), 0, 0, 0));\n\n// Tính thời điểm bắt đầu của ngày hôm qua (0h UTC)\nconst startOfYesterdayUTC = new Date(startOfTodayUTC);\nstartOfYesterdayUTC.setUTCDate(startOfYesterdayUTC.getUTCDate() - 1 ); // Lùi về ngày hôm qua\n\n// Debug kiểm tra thời gian\n// console.log('Start of Yesterday (UTC):', startOfYesterdayUTC);\n// console.log('Start of Today (UTC):', startOfTodayUTC);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' thuộc ngày hôm qua\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm qua (UTC)\n    const isStartTimeYesterday = startDate >= startOfYesterdayUTC && startDate < startOfTodayUTC;\n\n    // Nếu 'start_time' thuộc ngày hôm qua, thêm vào mảng kết quả\n    if (isStartTimeYesterday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false kèm ID và tên user đầu tiên\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}"
      },
      "id": "f24a81ca-3cd8-4111-a4f1-4b5347a0fd2b",
      "name": "Check create 7d53",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2320,
        4140
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "904db327-54f2-4710-80e6-0a696ec6f8fd",
      "name": "get Timelog10",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2540,
        4140
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "6c523b5c-6a8a-441c-a043-7adcac9cb916",
      "name": "If75",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2080,
        4360
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h UTC)\nconst startOfTodayUTC = new Date(Date.UTC(currentDate.getUTCFullYear(), currentDate.getUTCMonth(), currentDate.getUTCDate(), 0, 0, 0));\n\n// Tính thời điểm bắt đầu của ngày hôm qua (0h UTC)\nconst startOfYesterdayUTC = new Date(startOfTodayUTC);\nstartOfYesterdayUTC.setUTCDate(startOfYesterdayUTC.getUTCDate() - 1 ); // Lùi về ngày hôm qua\n\n// Debug kiểm tra thời gian\n// console.log('Start of Yesterday (UTC):', startOfYesterdayUTC);\n// console.log('Start of Today (UTC):', startOfTodayUTC);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' thuộc ngày hôm qua\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm qua (UTC)\n    const isStartTimeYesterday = startDate >= startOfYesterdayUTC && startDate < startOfTodayUTC;\n\n    // Nếu 'start_time' thuộc ngày hôm qua, thêm vào mảng kết quả\n    if (isStartTimeYesterday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false kèm ID và tên user đầu tiên\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}"
      },
      "id": "8b3a5bbb-fb7d-432e-a43e-c79a2b62dfbf",
      "name": "Check create 7d54",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2320,
        4360
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "97e1c76f-afda-4641-bca2-c563408defdb",
      "name": "get Timelog11",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2540,
        4360
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "96aea404-b5b2-4fff-8ef6-efc9b3f7e8e6",
      "name": "If76",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2100,
        4580
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "91c3f595-0f9a-473c-b17c-248a8aea11b0",
      "name": "Check create 7d55",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2340,
        4580
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "74089913-6230-4ee4-b743-e252b415fbfd",
      "name": "get Timelog12",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2560,
        4580
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If75').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 360, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "69a4a1ea-93f0-483c-b933-46fa60db3a23",
      "name": "Code5",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1280,
        4080
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "acddc1ce-10c7-4f0e-94db-fbb21a858446",
      "name": "If77",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1020,
        4080
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "=749757b1-c92c-4f17-bc8a-19307e06011d",
        "points": 3,
        "note": "=QCM 88: Hoang Anh Dung -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}"
      },
      "id": "8e902e87-4af2-428a-9f26-9887dddc3985",
      "name": "Cloodo Point23",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -300,
        4040
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "8ff88280-dce0-4384-a912-5d8cdad30a11",
      "name": "IF not found21",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -540,
        4060
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: Hoang Anh Dung -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "35eaedf2-dbfe-43b4-be0d-0df482b02a17",
      "name": "Cloodo Point35",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -700,
        4060
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "38769712-a33e-456a-b8da-fb07b88a65c0",
      "name": "Stop and Error24",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        120,
        4020
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5c762444-d831-4af2-bd67-615723fa1181",
      "name": "If78",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -140,
        4040
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If74').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 360, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "c485f6a4-e322-4def-809f-9d66bd433dce",
      "name": "Code6",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1280,
        3640
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "817cdd86-4958-4e19-82d0-35ea05027fe6",
      "name": "If79",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1020,
        3640
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "=749757b1-c92c-4f17-bc8a-19307e06011d",
        "points": 3,
        "note": "=QCM 88: Hoang Anh Dung -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}"
      },
      "id": "35bed679-b20d-4dfd-81ba-b4079222499d",
      "name": "Cloodo Point26",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -300,
        3600
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "277cf60e-3f49-4fc9-ab1e-16a5e1eb0c46",
      "name": "IF not found22",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -540,
        3620
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: Hoang Anh Dung -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "30b3cced-2816-479a-ab13-25c457c229eb",
      "name": "Cloodo Point36",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -740,
        3620
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "1b55bdd0-b126-4007-95bb-78e2f7700002",
      "name": "Stop and Error25",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        120,
        3580
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "0c7d315a-679d-41d4-b79b-e17245aa323b",
      "name": "If80",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -140,
        3600
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "useDataOfInput": 2
      },
      "id": "507b982a-77d4-4950-8823-d35dfbd8bd21",
      "name": "Merge11",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -960,
        4660
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "21baecc5-4c8e-440f-8ea4-43a70ca6a126",
      "name": "If89",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1840,
        2440
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "ab4c81db-f832-404b-81f9-d3bfe8e46f37",
      "name": "Check create 7d59",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2080,
        2440
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "c923f0d3-ad42-4dc5-9fb9-066fb3cf9698",
      "name": "get Timelog16",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2300,
        2440
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "e6d86f91-84e4-4f4b-999b-c9ca78ec7aed",
      "name": "If90",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1840,
        2660
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "dba2eed7-1af1-40ed-8da0-057f27abc378",
      "name": "Check create 7d60",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2080,
        2660
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "4536569f-5071-4c0e-9fd5-f25d9addbc53",
      "name": "get Timelog17",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2300,
        2660
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "c3fbb329-da1b-49d0-b09b-e60ace2c6c0f",
      "name": "If91",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1860,
        2880
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "5c32da47-89c9-4e65-a7f9-89ac62cc044f",
      "name": "Check create 7d61",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2100,
        2880
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "58226de7-cd2c-4b9d-b237-32a5fd51d512",
      "name": "get Timelog18",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2320,
        2880
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "83a095b3-b417-4568-ad37-e1dffee54cc6",
      "name": "If97",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2000,
        1080
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h UTC)\nconst startOfTodayUTC = new Date(Date.UTC(currentDate.getUTCFullYear(), currentDate.getUTCMonth(), currentDate.getUTCDate(), 0, 0, 0));\n\n// Tính thời điểm bắt đầu của ngày hôm qua (0h UTC)\nconst startOfYesterdayUTC = new Date(startOfTodayUTC);\nstartOfYesterdayUTC.setUTCDate(startOfYesterdayUTC.getUTCDate() - 1 ); // Lùi về ngày hôm qua\n\n// Debug kiểm tra thời gian\n// console.log('Start of Yesterday (UTC):', startOfYesterdayUTC);\n// console.log('Start of Today (UTC):', startOfTodayUTC);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' thuộc ngày hôm qua\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm qua (UTC)\n    const isStartTimeYesterday = startDate >= startOfYesterdayUTC && startDate < startOfTodayUTC;\n\n    // Nếu 'start_time' thuộc ngày hôm qua, thêm vào mảng kết quả\n    if (isStartTimeYesterday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false kèm ID và tên user đầu tiên\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}"
      },
      "id": "fe771b9c-322c-4eac-a871-140c51ba1dd9",
      "name": "Check create 7d62",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2240,
        1080
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "dd04d9e0-11b4-412d-b489-453d946210b5",
      "name": "get Timelog19",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2460,
        1080
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "dd7803a4-6436-46c1-ba5c-8cb4888566ab",
      "name": "If98",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2000,
        1300
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h UTC)\nconst startOfTodayUTC = new Date(Date.UTC(currentDate.getUTCFullYear(), currentDate.getUTCMonth(), currentDate.getUTCDate(), 0, 0, 0));\n\n// Tính thời điểm bắt đầu của ngày hôm qua (0h UTC)\nconst startOfYesterdayUTC = new Date(startOfTodayUTC);\nstartOfYesterdayUTC.setUTCDate(startOfYesterdayUTC.getUTCDate() - 1 ); // Lùi về ngày hôm qua\n\n// Debug kiểm tra thời gian\n// console.log('Start of Yesterday (UTC):', startOfYesterdayUTC);\n// console.log('Start of Today (UTC):', startOfTodayUTC);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' thuộc ngày hôm qua\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm qua (UTC)\n    const isStartTimeYesterday = startDate >= startOfYesterdayUTC && startDate < startOfTodayUTC;\n\n    // Nếu 'start_time' thuộc ngày hôm qua, thêm vào mảng kết quả\n    if (isStartTimeYesterday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false kèm ID và tên user đầu tiên\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}"
      },
      "id": "2487059a-041c-46cb-b432-34e4efcc843c",
      "name": "Check create 7d63",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2240,
        1300
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "09b27fdd-ff8d-4044-833a-1c1553dbb2f1",
      "name": "get Timelog20",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2460,
        1300
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "8ed3a8a7-3d1c-40a4-bbfb-0d694387d392",
      "name": "If99",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2020,
        1520
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() - 1 ); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "294f0984-df2a-4e2f-ac6a-36b267a19dd3",
      "name": "Check create 7d64",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2260,
        1520
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "5b881273-a8e1-45ca-8135-f97cd7a0ed79",
      "name": "get Timelog21",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2480,
        1520
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "33e02dd9-1347-4083-98d3-2dcc003fba9b",
      "name": "Check Leave Single2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1540,
        4780
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "181e2cac-51d8-4bcf-b232-2883093b963f",
      "name": "Check Leave Single3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1540,
        4520
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "65ac79bc-7c32-4c01-9662-bedb939f32a9",
      "name": "If6",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1300,
        4780
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ba931e47-0418-4846-b2ed-6506a88df390",
      "name": "If7",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1320,
        4520
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "half day"
            },
            {
              "name": "search",
              "value": "={{ $json.items[0].user.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "1ab9c5d5-db7b-4870-aa10-f11f12135fc7",
      "name": "Check Leave halfday2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1740,
        3760
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9ab552ca-916e-407f-a960-149d8b865a37",
      "name": "If8",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1560,
        3760
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If74').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 180, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "3c141e4c-3e26-4e0e-9ba4-925b1a1c8226",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1280,
        3860
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "eaf5af27-2759-4d96-b99b-217db7549714",
      "name": "If81",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1020,
        3860
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "=749757b1-c92c-4f17-bc8a-19307e06011d",
        "points": 3,
        "note": "=QCM 88: Hoang Anh Dung -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}"
      },
      "id": "63e3e45f-27ec-4035-9730-d35927d48bf3",
      "name": "Cloodo Point27",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -300,
        3820
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "f4453292-5266-4716-b2d7-5d15f4e80598",
      "name": "IF not found23",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -540,
        3840
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: Hoang Anh Dung -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "16cb9173-1134-4d08-959e-97132bb29632",
      "name": "Cloodo Point37",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -740,
        3840
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "3279b654-416c-42d9-af25-32d9bb423a89",
      "name": "Stop and Error26",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        120,
        3800
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "88d6e272-358b-4f21-833b-7f7325d117e3",
      "name": "If82",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -140,
        3820
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "half day"
            },
            {
              "name": "search",
              "value": "={{ $json.items[0].user.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "f4781f94-899b-4d3e-805c-4d5f39620c33",
      "name": "Check Leave halfday3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1740,
        4220
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f2511fa5-77d5-4cd8-8918-ed0bb98e10c9",
      "name": "If9",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1560,
        4220
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If75').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 180, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "1ed3835a-7393-4494-a01d-23f904c4c106",
      "name": "Code7",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1260,
        4300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "29bbcde7-22e8-42ae-b7d7-f76e2f0c9127",
      "name": "If83",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1000,
        4300
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "=749757b1-c92c-4f17-bc8a-19307e06011d",
        "points": 3,
        "note": "=QCM 88: Hoang Anh Dung -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}"
      },
      "id": "cb6c1ea4-3a09-401a-a538-109736a29d2c",
      "name": "Cloodo Point28",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -280,
        4260
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "9ac3c0fb-e244-4163-b6e0-94e57cd414df",
      "name": "IF not found24",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -520,
        4280
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: Hoang Anh Dung -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "928afa40-b8d0-42f8-a828-76a77d840240",
      "name": "Cloodo Point38",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -700,
        4280
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "bd14fa68-7468-4e7e-a9b0-d7f32879e830",
      "name": "Stop and Error27",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        140,
        4240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ad83ea42-60c5-49fa-9121-2cd670e86300",
      "name": "If84",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -120,
        4260
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If89').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If89').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "a061e06f-9e82-4f28-911e-a6dfeae37f89",
      "name": "Cloodo Point29",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        320,
        2980
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "709be76a-10f9-4458-b71a-92bd4022e84b",
      "name": "IF not found",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        80,
        3000
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $('If89').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "8a6abd07-25ba-4a68-a13c-25cb46627698",
      "name": "Cloodo Point39",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -120,
        3000
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "e7551312-a5af-4b56-8916-ec0b62baff80",
      "name": "Stop and Error28",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        740,
        2960
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "88e78216-7476-4230-885b-46454e7ec519",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        480,
        2980
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If90').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 360, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "3913014b-97cf-4758-9aeb-c39d51c402ad",
      "name": "Code8",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -740,
        2420
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "561add2d-db24-474a-b7a1-f375e438c298",
      "name": "If85",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -480,
        2420
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If85').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If85').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "63c7715b-34bb-4709-a264-77136e24db8a",
      "name": "Cloodo Point30",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        240,
        2380
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "e0f9f1e2-aaff-48d4-b697-7d5139635df9",
      "name": "IF not found25",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        0,
        2400
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "70e1270c-59af-47fa-91e7-62d5c75a50ca",
      "name": "Cloodo Point40",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -160,
        2400
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "5656db5c-24a2-42f4-a0d0-116d4edd0b24",
      "name": "Stop and Error29",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        660,
        2360
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7f09b431-0bac-41c2-9819-26e136ae9c97",
      "name": "If86",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        400,
        2380
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If89').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 360, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "839a3031-7e5b-44f1-b48a-b36013764271",
      "name": "Code9",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -740,
        1980
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "573d5823-1e04-45ad-9953-07211d17c903",
      "name": "If87",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -480,
        1980
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If87').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If87').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "440e9a56-8926-4946-b37b-31cc4c48c493",
      "name": "Cloodo Point31",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        240,
        1940
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "e01c32ca-c4d8-483b-803a-33dfa2f6b20b",
      "name": "IF not found26",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        0,
        1960
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "000518fb-4e9e-4a2d-916e-bf9f8ff75510",
      "name": "Cloodo Point41",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -200,
        1960
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "3602c6b4-3886-4ba2-b2ca-d5e2df3a8ccd",
      "name": "Stop and Error30",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        660,
        1920
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "2a22dd8d-eec2-4e5c-8628-abd9bfb9fe83",
      "name": "If88",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        400,
        1940
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "useDataOfInput": 2
      },
      "id": "fa2744ca-b9e6-413f-aa7d-c77f440615b7",
      "name": "Merge12",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -420,
        3000
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "3b9fd291-9743-4c6e-9190-84381abf1747",
      "name": "Check Leave Single4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1000,
        3120
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "517c1f29-1dbf-4daa-8ff2-80c94485eb54",
      "name": "Check Leave Single5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1000,
        2860
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "1c7d5285-f803-471e-bd0e-9a0ad019c51c",
      "name": "If10",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -760,
        3120
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b60dd05b-e65d-41a2-9c66-e1c5d3b0798e",
      "name": "If11",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -780,
        2860
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "half day"
            },
            {
              "name": "search",
              "value": "={{ $json.items[0].user.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "c6b0c12e-3d91-4ac0-89fd-4487a943acb0",
      "name": "Check Leave halfday4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1200,
        2100
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "76fe8f92-3e93-408a-b758-2a37f67885da",
      "name": "If12",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1020,
        2100
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If89').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 180, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "9f5de75f-5d13-45fa-8955-65f80565ea3d",
      "name": "Code1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -740,
        2200
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "d8efb7a7-a23c-47d2-b900-77b304f56a36",
      "name": "If92",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -480,
        2200
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If92').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If92').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "3f38144c-6250-46cb-8025-61f3fd499aaf",
      "name": "Cloodo Point32",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        240,
        2160
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "5e2814f7-3fb6-4c9c-bf80-30128afd500c",
      "name": "IF not found27",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        0,
        2180
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "a2ac4266-7370-440f-8718-a8407f7a310a",
      "name": "Cloodo Point42",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -200,
        2180
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "f0752c05-fe85-49e2-b102-43f42f8d27cf",
      "name": "Stop and Error31",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        660,
        2140
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ca2f023c-e89e-4d84-a40d-01910a6b0950",
      "name": "If93",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        400,
        2160
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "half day"
            },
            {
              "name": "search",
              "value": "={{ $json.items[0].user.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "6bd977d9-bbfd-42bf-9e4d-848772beeafb",
      "name": "Check Leave halfday5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1200,
        2560
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "2462f541-770f-4c28-8f24-c65569348447",
      "name": "If13",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1020,
        2560
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If90').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 180, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "1caa4586-1608-469d-9fb1-9e2faf7dfd88",
      "name": "Code10",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -720,
        2640
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "cd8ebb6b-2d67-4f73-bd70-90fd164cc293",
      "name": "If94",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -460,
        2640
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If94').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If94').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "4d9fdd91-4eaa-4e2a-8f4b-9886f199327b",
      "name": "Cloodo Point33",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        260,
        2600
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "2d30dcb2-b7f5-4a76-86b3-ff475212196d",
      "name": "IF not found31",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        20,
        2620
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "68b90abf-93fc-4895-a155-94b04ba58556",
      "name": "Cloodo Point43",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -160,
        2620
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "9a26cb7b-c617-4df3-855f-0c6aa77b7335",
      "name": "Stop and Error35",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        680,
        2580
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e94f9e09-a3b9-4c0c-bada-a87031d92d20",
      "name": "If95",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        420,
        2600
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "=eb2f59b2-60dd-4294-8b50-9524634b3e1a",
        "points": 3,
        "note": "=QCM 88: Vo Tuan Vu -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}"
      },
      "id": "8d860d91-8fe1-49e5-84a8-6e14f7821c6f",
      "name": "Cloodo Point44",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        120,
        1520
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "1a84705f-73c7-4327-a78b-270b2451aea7",
      "name": "IF not found1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -120,
        1540
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: Vo Tuan Vu -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "3f174398-2f60-45cd-811f-03e1b1f327af",
      "name": "Cloodo Point45",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -320,
        1540
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "dbd3ac15-4ddd-49da-9fec-af551a3d1766",
      "name": "Stop and Error32",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        540,
        1500
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ff7bd806-e40b-4aae-befc-220e76a93cf3",
      "name": "If5",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        280,
        1520
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If98').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 360, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "f8dca1e7-a7bb-4a73-befb-b1320961d04d",
      "name": "Code11",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -920,
        980
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "64931d16-9cc3-4b23-b118-bcc81b6cd6b4",
      "name": "If96",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -660,
        980
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If97').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 360, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "b8485baf-5903-45e0-a9e7-56764b8c32fd",
      "name": "Code12",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -940,
        520
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "5612a2c8-f771-478b-8a61-fbe3c12b6ab4",
      "name": "If101",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -680,
        520
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "useDataOfInput": 2
      },
      "id": "9e2c106e-65e0-45a7-b4c9-e9499be115d2",
      "name": "Merge13",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -620,
        1540
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "a10a3df0-85f6-4cec-8fe7-dfa8af7496b2",
      "name": "Check Leave Single6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1300,
        1680
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "b70c03fc-4732-4c7a-a969-a8e1a008f9d7",
      "name": "Check Leave Single7",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1300,
        1420
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "8b457cfe-9a71-444c-865b-303d3067bd77",
      "name": "If14",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1060,
        1680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3a02982c-8a66-4431-b2be-a9ca7aef22ac",
      "name": "If15",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1080,
        1420
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "half day"
            },
            {
              "name": "search",
              "value": "={{ $json.items[0].user.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "b515ed09-cbd8-4fc9-bead-15e2ed3a326b",
      "name": "Check Leave halfday6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1400,
        640
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7562bd59-f4e5-4e0a-977a-c30653b2a35e",
      "name": "If16",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1220,
        640
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If97').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 180, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "0020ca5d-516f-4202-a8d1-36fda127788d",
      "name": "Code2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -940,
        740
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "e14dddd0-5946-497a-a1e5-f6cd0d615019",
      "name": "If103",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -680,
        740
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "half day"
            },
            {
              "name": "search",
              "value": "={{ $json.items[0].user.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "1c2d0a92-a4bf-41c0-aa7e-2e061d5d49bf",
      "name": "Check Leave halfday7",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1400,
        1100
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "2d89404f-60cc-4ede-85df-cd9f3231699a",
      "name": "If17",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1220,
        1100
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If98').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 180, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "4b368072-4443-410d-8b17-d3eea91e5d22",
      "name": "Code13",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -920,
        1180
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "defd43ab-33f7-4cc1-a835-ba685c315883",
      "name": "If105",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -660,
        1180
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "=d43a580a-d215-4d48-8cf8-465f4537f87c",
        "points": 3,
        "note": "=QCM 88: Ngo Quoc Tien -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}"
      },
      "id": "32818fa7-8d5f-4d61-b57c-d303f0b0d064",
      "name": "Cloodo Point",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -3680,
        5240
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "0271589e-662d-4337-800b-a7ec770d4fad",
      "name": "IF not found33",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -3920,
        5260
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: Ngo Quoc Tien -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "d44cf91a-a6bd-4b8d-999b-0a0eac225930",
      "name": "Cloodo Point54",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -4120,
        5260
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "225c24ec-dd22-4941-b0ca-ab17a242c5f7",
      "name": "Stop and Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -3260,
        5220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "316de04b-9178-46e6-9822-180289e8a2c2",
      "name": "If64",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3520,
        5240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "dfb21df6-d8f0-477b-850f-20fcd670af9f",
      "name": "If107",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -5540,
        4740
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h UTC)\nconst startOfTodayUTC = new Date(Date.UTC(currentDate.getUTCFullYear(), currentDate.getUTCMonth(), currentDate.getUTCDate(), 0, 0, 0));\n\n// Tính thời điểm bắt đầu của ngày hôm qua (0h UTC)\nconst startOfYesterdayUTC = new Date(startOfTodayUTC);\nstartOfYesterdayUTC.setUTCDate(startOfYesterdayUTC.getUTCDate() - 1 ); // Lùi về ngày hôm qua\n\n// Debug kiểm tra thời gian\n// console.log('Start of Yesterday (UTC):', startOfYesterdayUTC);\n// console.log('Start of Today (UTC):', startOfTodayUTC);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' thuộc ngày hôm qua\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm qua (UTC)\n    const isStartTimeYesterday = startDate >= startOfYesterdayUTC && startDate < startOfTodayUTC;\n\n    // Nếu 'start_time' thuộc ngày hôm qua, thêm vào mảng kết quả\n    if (isStartTimeYesterday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false kèm ID và tên user đầu tiên\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}"
      },
      "id": "c0661bb1-be1b-4565-899d-9a81cde4195d",
      "name": "Check create 7d",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5780,
        4740
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "f7f579e6-e8b7-485f-8be9-c1a7be5c774a",
      "name": "get Timelog",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -6000,
        4740
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "a98ca265-b507-43fb-b28f-d02c57a962bb",
      "name": "If108",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -5540,
        4960
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h UTC)\nconst startOfTodayUTC = new Date(Date.UTC(currentDate.getUTCFullYear(), currentDate.getUTCMonth(), currentDate.getUTCDate(), 0, 0, 0));\n\n// Tính thời điểm bắt đầu của ngày hôm qua (0h UTC)\nconst startOfYesterdayUTC = new Date(startOfTodayUTC);\nstartOfYesterdayUTC.setUTCDate(startOfYesterdayUTC.getUTCDate() - 1 ); // Lùi về ngày hôm qua\n\n// Debug kiểm tra thời gian\n// console.log('Start of Yesterday (UTC):', startOfYesterdayUTC);\n// console.log('Start of Today (UTC):', startOfTodayUTC);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' thuộc ngày hôm qua\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm qua (UTC)\n    const isStartTimeYesterday = startDate >= startOfYesterdayUTC && startDate < startOfTodayUTC;\n\n    // Nếu 'start_time' thuộc ngày hôm qua, thêm vào mảng kết quả\n    if (isStartTimeYesterday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false kèm ID và tên user đầu tiên\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}"
      },
      "id": "17be7cf2-0f34-489d-9745-8fb0280ff27d",
      "name": "Check create 7d56",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5780,
        4960
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "3d11666c-0469-49fe-bbff-fea7c0ff8456",
      "name": "get Timelog13",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -6000,
        4960
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "4fede0f2-1d9a-4185-8ed5-d2a0f3913c73",
      "name": "If109",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -5560,
        5180
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "4f50c7ad-eb06-4c92-bdb0-bc55d0050d4d",
      "name": "Check create 7d57",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5800,
        5180
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a5252b66-2770-4ab4-b025-eaefec6281bf",
      "name": "get Timelog14",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -6020,
        5180
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If108').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 360, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "56554f29-7e44-428c-991d-21ad31aa1d03",
      "name": "Code14",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4740,
        4680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "0dc1d4b0-08a4-43a9-8ce6-5dbb55ce465b",
      "name": "If110",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4480,
        4680
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "=d43a580a-d215-4d48-8cf8-465f4537f87c",
        "points": 3,
        "note": "=QCM 88: Ngo Quoc Tien -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}"
      },
      "id": "e259fbfb-dd04-4be2-b0a1-dc89465ff6ba",
      "name": "Cloodo Point24",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -3760,
        4640
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "aabe0e12-7a05-4842-8213-d6169e5199a9",
      "name": "IF not found34",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -4000,
        4660
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: Ngo Quoc Tien -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "a5c04140-6c2a-4f16-9449-ea4eccaf6056",
      "name": "Cloodo Point55",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -4160,
        4660
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "2cf67c44-afcd-4793-8517-df655f501c0e",
      "name": "Stop and Error38",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -3340,
        4620
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "17769d72-ed0a-48d4-800f-8d15adab962c",
      "name": "If111",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3600,
        4640
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If107').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 360, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "cf336d2d-1a53-4cfe-893d-1b5306ee7e3a",
      "name": "Code15",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4740,
        4240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "0c446e53-6423-44e2-a6f9-2ab9cfb31192",
      "name": "If112",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4480,
        4240
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "=d43a580a-d215-4d48-8cf8-465f4537f87c",
        "points": 3,
        "note": "=QCM 88: Ngo Quoc Tien -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}"
      },
      "id": "58dcffb0-7439-403c-ade7-0a26cee1c06c",
      "name": "Cloodo Point56",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -3760,
        4200
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "239ab533-8f17-4232-b6e0-43e5f82045de",
      "name": "IF not found35",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -4000,
        4220
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: Ngo Quoc Tien -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "17018961-7f1d-4636-98c5-4c9996159766",
      "name": "Cloodo Point57",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -4200,
        4220
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "fc5782e7-04a2-4743-a650-8369d9c3a698",
      "name": "Stop and Error39",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -3340,
        4180
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "721155ad-264e-432a-907a-d64390d6f901",
      "name": "If113",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3600,
        4200
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "useDataOfInput": 2
      },
      "id": "9c818993-c178-44e9-997b-37d1bf4b7057",
      "name": "Merge14",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -4420,
        5260
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "feff2485-b7c3-48df-ae6f-4dcace78cc12",
      "name": "Check Leave Single",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -5000,
        5380
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "baba2277-adec-457f-a208-22be503d3974",
      "name": "Check Leave Single8",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -5000,
        5120
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "11fa5e89-42b7-4d86-a29f-3dea2808958d",
      "name": "If18",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4760,
        5380
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "13a58754-bbee-4e0f-8f08-0eda2b21702d",
      "name": "If19",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4780,
        5120
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "half day"
            },
            {
              "name": "search",
              "value": "={{ $json.items[0].user.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "708bc415-28e9-4b7a-a7e0-4782086dca2f",
      "name": "Check Leave halfday",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -5200,
        4360
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "16d1575c-3d67-4223-b6f1-5b760ea4f354",
      "name": "If20",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -5020,
        4360
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If107').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 180, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "857d4ac9-095a-4658-9215-0014b7a00a0f",
      "name": "Code3",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4740,
        4460
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "32c6b136-384e-4033-a64f-4d9efaa9397e",
      "name": "If114",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4480,
        4460
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "=d43a580a-d215-4d48-8cf8-465f4537f87c",
        "points": 3,
        "note": "=QCM 88: Ngo Quoc Tien -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}"
      },
      "id": "f2591a0c-6fa4-4032-b728-a0f4325f1366",
      "name": "Cloodo Point58",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -3760,
        4420
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "107c217d-7f00-4c67-ab65-ac3a769779d2",
      "name": "IF not found36",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -4000,
        4440
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: Ngo Quoc Tien -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "67fe51d9-3bb9-49ce-bfa5-285fe72dc542",
      "name": "Cloodo Point59",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -4200,
        4440
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "e13a7d54-4244-414b-afac-df4871d011e7",
      "name": "Stop and Error40",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -3340,
        4400
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c373ea97-5c22-4485-909a-575f5add6b8e",
      "name": "If115",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3600,
        4420
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "half day"
            },
            {
              "name": "search",
              "value": "={{ $json.items[0].user.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "ad60c745-642f-440c-82a4-8f894e2e46f4",
      "name": "Check Leave halfday8",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -5200,
        4820
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "36959d2b-dd2c-4ab1-974e-d91f7eb1c5ba",
      "name": "If21",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -5020,
        4820
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If108').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 180, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "b760c480-91f9-4a7a-b1ba-a166c1b4dc03",
      "name": "Code16",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4720,
        4900
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "d43620c8-cd61-4f47-a45c-b19d5884b3b8",
      "name": "If116",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4460,
        4900
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "=d43a580a-d215-4d48-8cf8-465f4537f87c",
        "points": 3,
        "note": "=QCM 88: Ngo Quoc Tien -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}"
      },
      "id": "04670ab5-ea8e-4b76-98de-25311003fd09",
      "name": "Cloodo Point60",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -3740,
        4860
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "d459adf0-c223-4b40-9b44-a4206fe12ded",
      "name": "IF not found37",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -3980,
        4880
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: Ngo Quoc Tien -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "bc6b7347-2996-4b23-84a8-90e592d4e1ac",
      "name": "Cloodo Point61",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -4160,
        4880
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "b67ace62-9d8e-4fa2-b35a-609c986e956f",
      "name": "Stop and Error41",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -3320,
        4840
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "8323ed2d-12b0-42c8-b780-439f2ebe30f6",
      "name": "If117",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3580,
        4860
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks",
              "triggerAtDay": [
                2,
                5,
                4,
                3,
                6
              ],
              "triggerAtHour": 5
            }
          ]
        }
      },
      "id": "0114a13f-cb19-43ef-b99f-77a137df44ac",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -8680,
        3300
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks",
              "triggerAtDay": [
                2,
                3,
                4,
                5,
                6
              ],
              "triggerAtHour": 6
            }
          ]
        }
      },
      "id": "4c7ba018-7594-4fb1-8779-6a6f88b581c7",
      "name": "Schedule Trigger1",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -8680,
        3720
      ]
    },
    {
      "parameters": {
        "content": "## 6pm and 9pm\n",
        "height": 80
      },
      "id": "51c04a22-e61a-44e2-b173-ee17b0b250d6",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -9060,
        3500
      ]
    },
    {
      "parameters": {
        "content": "## eb2f59b2-60dd-4294-8b50-9524634b3e1a \nVo Tuan Vu"
      },
      "id": "0ce65794-3f3f-4179-b9b1-02bf31427f63",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        840,
        920
      ]
    },
    {
      "parameters": {
        "content": "## \t749757b1-c92c-4f17-bc8a-19307e06011d\nHoang Anh Dung"
      },
      "id": "ad350aab-ae09-4aaf-bff3-e130ff929172",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        640,
        4020
      ]
    },
    {
      "parameters": {
        "content": "## d43a580a-d215-4d48-8cf8-465f4537f87c\nNgo Quoc Tien",
        "height": 130.6635220504341
      },
      "id": "25fb7c0c-b843-4819-a420-b78f4bd44530",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4080,
        5540
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "=eb2f59b2-60dd-4294-8b50-9524634b3e1a",
        "points": 3,
        "note": "=QCM 88: Vo Tuan Vu -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}"
      },
      "id": "c3ad4ed0-2739-4056-bb7c-b25576782459",
      "name": "Cloodo Point46",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        60,
        460
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "3f76eb18-2d33-4f69-b61b-11eccfa46a2b",
      "name": "IF not found2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -180,
        480
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: Vo Tuan Vu -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "a2cfc0e1-5bcf-42d7-912c-259e78e7bebb",
      "name": "Cloodo Point47",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -380,
        480
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "20438818-eb87-41f2-94dd-dba27a0c7e52",
      "name": "Stop and Error33",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        480,
        440
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7e5c342c-78db-47f5-b37d-455987934af3",
      "name": "If22",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        220,
        460
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "=eb2f59b2-60dd-4294-8b50-9524634b3e1a",
        "points": 3,
        "note": "=QCM 88: Vo Tuan Vu -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}"
      },
      "id": "676610ac-4ffd-4e16-8fea-e0ac50137f51",
      "name": "Cloodo Point48",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        80,
        700
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "36c0417e-0549-4291-bda0-d3e980c65bfa",
      "name": "IF not found3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -160,
        720
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: Vo Tuan Vu -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "409dc456-7dac-4107-a2b6-d4d0acc6fda6",
      "name": "Cloodo Point49",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -360,
        720
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "b4461b0e-35e5-4137-9169-676a364f5520",
      "name": "Stop and Error34",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        500,
        680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "993c65c4-74c6-47a1-9acd-7126398552a2",
      "name": "If23",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        240,
        700
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "=eb2f59b2-60dd-4294-8b50-9524634b3e1a",
        "points": 3,
        "note": "=QCM 88: Vo Tuan Vu -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "ae4b38f3-2be4-42d8-bc82-dbd251cbab81",
      "name": "Cloodo Point50",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        100,
        940
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "0f4355f6-1c0c-4669-abe2-2298ffd99a57",
      "name": "IF not found4",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -140,
        960
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: Vo Tuan Vu -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "f5e64176-21b7-4d82-a6fe-6f4007edf1a3",
      "name": "Cloodo Point51",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -340,
        960
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "a100174c-b22d-4ced-974e-5dd299d5a94f",
      "name": "Stop and Error36",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        520,
        920
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "cd1f981c-9a8d-4dd6-b092-ef9d7b429025",
      "name": "If24",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        260,
        940
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "=eb2f59b2-60dd-4294-8b50-9524634b3e1a",
        "points": 3,
        "note": "=QCM 88: Vo Tuan Vu -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}"
      },
      "id": "495f777f-3cd3-4dd4-b883-363c605ba071",
      "name": "Cloodo Point52",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        40,
        1140
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "30b54515-38d0-4738-9ac7-2b42a6832182",
      "name": "IF not found5",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -200,
        1160
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: Vo Tuan Vu -3 Point No Logtime on day {{$now.minus(1,'days').format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "8e7fffef-d749-44b1-aa55-9c8f20bd69a2",
      "name": "Cloodo Point53",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -400,
        1160
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "b7716a5b-bc54-4f91-9584-20e21a0e31fb",
      "name": "Stop and Error37",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        460,
        1120
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "29d74d30-af8d-4a8a-8638-e86e7fddb823",
      "name": "If25",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        200,
        1140
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Get All Department": {
      "main": [
        [
          {
            "node": "GetMember",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Department1": {
      "main": [
        [
          {
            "node": "GetMember1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Department2": {
      "main": [
        [
          {
            "node": "GetMember2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "CompanyName",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GetMember": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GetMember1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "GetMember2": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "CompanyName": {
      "main": [
        [
          {
            "node": "Count Company",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Count Company": {
      "main": [
        [],
        [
          {
            "node": "Remove employee leave1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Remove employee leave2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove employee leave1": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company2": {
      "main": [
        [
          {
            "node": "get Timelog19",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog20",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company3": {
      "main": [
        [
          {
            "node": "get Timelog16",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog17",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove employee leave2": {
      "main": [
        [
          {
            "node": "Switch Company8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company8": {
      "main": [
        [
          {
            "node": "get Timelog",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog13",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [],
        [
          {
            "node": "Switch Company2",
            "type": "main",
            "index": 0
          }
        ],
        [],
        [],
        [],
        [
          {
            "node": "Switch Company6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point22": {
      "main": [
        [
          {
            "node": "If63",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found20": {
      "main": [
        [
          {
            "node": "Cloodo Point22",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point34": {
      "main": [
        [
          {
            "node": "IF not found20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If63": {
      "main": [
        [
          {
            "node": "Stop and Error23",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If74": {
      "main": [
        [
          {
            "node": "Check Leave halfday2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d53": {
      "main": [
        [
          {
            "node": "If74",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog10": {
      "main": [
        [
          {
            "node": "Check create 7d53",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d54": {
      "main": [
        [
          {
            "node": "If75",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog11": {
      "main": [
        [
          {
            "node": "Check create 7d54",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d55": {
      "main": [
        [
          {
            "node": "If76",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog12": {
      "main": [
        [
          {
            "node": "Check create 7d55",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code5": {
      "main": [
        [
          {
            "node": "If77",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If77": {
      "main": [
        [
          {
            "node": "Cloodo Point35",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point23": {
      "main": [
        [
          {
            "node": "If78",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found21": {
      "main": [
        [
          {
            "node": "Cloodo Point23",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point35": {
      "main": [
        [
          {
            "node": "IF not found21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If78": {
      "main": [
        [
          {
            "node": "Stop and Error24",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code6": {
      "main": [
        [
          {
            "node": "If79",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If79": {
      "main": [
        [
          {
            "node": "Cloodo Point36",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point26": {
      "main": [
        [
          {
            "node": "If80",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found22": {
      "main": [
        [
          {
            "node": "Cloodo Point26",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point36": {
      "main": [
        [
          {
            "node": "IF not found22",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If80": {
      "main": [
        [
          {
            "node": "Stop and Error25",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge11": {
      "main": [
        [
          {
            "node": "Cloodo Point34",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company6": {
      "main": [
        [
          {
            "node": "get Timelog10",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog11",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If75": {
      "main": [
        [
          {
            "node": "Check Leave halfday3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If89": {
      "main": [
        [
          {
            "node": "Check Leave halfday4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d59": {
      "main": [
        [
          {
            "node": "If89",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog16": {
      "main": [
        [
          {
            "node": "Check create 7d59",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If90": {
      "main": [
        [
          {
            "node": "Check Leave halfday5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d60": {
      "main": [
        [
          {
            "node": "If90",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog17": {
      "main": [
        [
          {
            "node": "Check create 7d60",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d61": {
      "main": [
        [
          {
            "node": "If91",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog18": {
      "main": [
        [
          {
            "node": "Check create 7d61",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If97": {
      "main": [
        [
          {
            "node": "Check Leave halfday6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d62": {
      "main": [
        [
          {
            "node": "If97",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog19": {
      "main": [
        [
          {
            "node": "Check create 7d62",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If98": {
      "main": [
        [
          {
            "node": "Check Leave halfday7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d63": {
      "main": [
        [
          {
            "node": "If98",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog20": {
      "main": [
        [
          {
            "node": "Check create 7d63",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d64": {
      "main": [
        [
          {
            "node": "If99",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog21": {
      "main": [
        [
          {
            "node": "Check create 7d64",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single2": {
      "main": [
        [
          {
            "node": "If6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single3": {
      "main": [
        [
          {
            "node": "If7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If7": {
      "main": [
        [
          {
            "node": "Merge11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If6": {
      "main": [
        [
          {
            "node": "Merge11",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Check Leave halfday2": {
      "main": [
        [
          {
            "node": "If8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If8": {
      "main": [
        [
          {
            "node": "Code6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "If81",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If81": {
      "main": [
        [
          {
            "node": "Cloodo Point37",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point27": {
      "main": [
        [
          {
            "node": "If82",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found23": {
      "main": [
        [
          {
            "node": "Cloodo Point27",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point37": {
      "main": [
        [
          {
            "node": "IF not found23",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If82": {
      "main": [
        [
          {
            "node": "Stop and Error26",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave halfday3": {
      "main": [
        [
          {
            "node": "If9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If9": {
      "main": [
        [
          {
            "node": "Code5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code7": {
      "main": [
        [
          {
            "node": "If83",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If83": {
      "main": [
        [
          {
            "node": "Cloodo Point38",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point28": {
      "main": [
        [
          {
            "node": "If84",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found24": {
      "main": [
        [
          {
            "node": "Cloodo Point28",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point38": {
      "main": [
        [
          {
            "node": "IF not found24",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If84": {
      "main": [
        [
          {
            "node": "Stop and Error27",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point29": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found": {
      "main": [
        [
          {
            "node": "Cloodo Point29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point39": {
      "main": [
        [
          {
            "node": "IF not found",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Stop and Error28",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code8": {
      "main": [
        [
          {
            "node": "If85",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If85": {
      "main": [
        [
          {
            "node": "Cloodo Point40",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point30": {
      "main": [
        [
          {
            "node": "If86",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found25": {
      "main": [
        [
          {
            "node": "Cloodo Point30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point40": {
      "main": [
        [
          {
            "node": "IF not found25",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If86": {
      "main": [
        [
          {
            "node": "Stop and Error29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code9": {
      "main": [
        [
          {
            "node": "If87",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If87": {
      "main": [
        [
          {
            "node": "Cloodo Point41",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point31": {
      "main": [
        [
          {
            "node": "If88",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found26": {
      "main": [
        [
          {
            "node": "Cloodo Point31",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point41": {
      "main": [
        [
          {
            "node": "IF not found26",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If88": {
      "main": [
        [
          {
            "node": "Stop and Error30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge12": {
      "main": [
        [
          {
            "node": "Cloodo Point39",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single4": {
      "main": [
        [
          {
            "node": "If10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single5": {
      "main": [
        [
          {
            "node": "If11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If10": {
      "main": [
        [
          {
            "node": "Merge12",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If11": {
      "main": [
        [
          {
            "node": "Merge12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave halfday4": {
      "main": [
        [
          {
            "node": "If12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If12": {
      "main": [
        [
          {
            "node": "Code9",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "If92",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If92": {
      "main": [
        [
          {
            "node": "Cloodo Point42",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point32": {
      "main": [
        [
          {
            "node": "If93",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found27": {
      "main": [
        [
          {
            "node": "Cloodo Point32",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point42": {
      "main": [
        [
          {
            "node": "IF not found27",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If93": {
      "main": [
        [
          {
            "node": "Stop and Error31",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave halfday5": {
      "main": [
        [
          {
            "node": "If13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If13": {
      "main": [
        [
          {
            "node": "Code8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code10": {
      "main": [
        [
          {
            "node": "If94",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If94": {
      "main": [
        [
          {
            "node": "Cloodo Point43",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point33": {
      "main": [
        [
          {
            "node": "If95",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found31": {
      "main": [
        [
          {
            "node": "Cloodo Point33",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point43": {
      "main": [
        [
          {
            "node": "IF not found31",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If95": {
      "main": [
        [
          {
            "node": "Stop and Error35",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point44": {
      "main": [
        [
          {
            "node": "If5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found1": {
      "main": [
        [
          {
            "node": "Cloodo Point44",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point45": {
      "main": [
        [
          {
            "node": "IF not found1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If5": {
      "main": [
        [
          {
            "node": "Stop and Error32",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code11": {
      "main": [
        [
          {
            "node": "If96",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If96": {
      "main": [
        [
          {
            "node": "Cloodo Point51",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code12": {
      "main": [
        [
          {
            "node": "If101",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If101": {
      "main": [
        [
          {
            "node": "Cloodo Point47",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge13": {
      "main": [
        [
          {
            "node": "Cloodo Point45",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single6": {
      "main": [
        [
          {
            "node": "If14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single7": {
      "main": [
        [
          {
            "node": "If15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If14": {
      "main": [
        [
          {
            "node": "Merge13",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If15": {
      "main": [
        [
          {
            "node": "Merge13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave halfday6": {
      "main": [
        [
          {
            "node": "If16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If16": {
      "main": [
        [
          {
            "node": "Code12",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "If103",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If103": {
      "main": [
        [
          {
            "node": "Cloodo Point49",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave halfday7": {
      "main": [
        [
          {
            "node": "If17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If17": {
      "main": [
        [
          {
            "node": "Code11",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code13": {
      "main": [
        [
          {
            "node": "If105",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If105": {
      "main": [
        [
          {
            "node": "Cloodo Point53",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point": {
      "main": [
        [
          {
            "node": "If64",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found33": {
      "main": [
        [
          {
            "node": "Cloodo Point",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point54": {
      "main": [
        [
          {
            "node": "IF not found33",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If64": {
      "main": [
        [
          {
            "node": "Stop and Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If107": {
      "main": [
        [
          {
            "node": "Check Leave halfday",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d": {
      "main": [
        [
          {
            "node": "If107",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog": {
      "main": [
        [
          {
            "node": "Check create 7d",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If108": {
      "main": [
        [
          {
            "node": "Check Leave halfday8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d56": {
      "main": [
        [
          {
            "node": "If108",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog13": {
      "main": [
        [
          {
            "node": "Check create 7d56",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d57": {
      "main": [
        [
          {
            "node": "If109",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog14": {
      "main": [
        [
          {
            "node": "Check create 7d57",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code14": {
      "main": [
        [
          {
            "node": "If110",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If110": {
      "main": [
        [
          {
            "node": "Cloodo Point55",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point24": {
      "main": [
        [
          {
            "node": "If111",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found34": {
      "main": [
        [
          {
            "node": "Cloodo Point24",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point55": {
      "main": [
        [
          {
            "node": "IF not found34",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If111": {
      "main": [
        [
          {
            "node": "Stop and Error38",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code15": {
      "main": [
        [
          {
            "node": "If112",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If112": {
      "main": [
        [
          {
            "node": "Cloodo Point57",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point56": {
      "main": [
        [
          {
            "node": "If113",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found35": {
      "main": [
        [
          {
            "node": "Cloodo Point56",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point57": {
      "main": [
        [
          {
            "node": "IF not found35",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If113": {
      "main": [
        [
          {
            "node": "Stop and Error39",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge14": {
      "main": [
        [
          {
            "node": "Cloodo Point54",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single": {
      "main": [
        [
          {
            "node": "If18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single8": {
      "main": [
        [
          {
            "node": "If19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If18": {
      "main": [
        [
          {
            "node": "Merge14",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If19": {
      "main": [
        [
          {
            "node": "Merge14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave halfday": {
      "main": [
        [
          {
            "node": "If20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If20": {
      "main": [
        [
          {
            "node": "Code15",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "If114",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If114": {
      "main": [
        [
          {
            "node": "Cloodo Point59",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point58": {
      "main": [
        [
          {
            "node": "If115",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found36": {
      "main": [
        [
          {
            "node": "Cloodo Point58",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point59": {
      "main": [
        [
          {
            "node": "IF not found36",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If115": {
      "main": [
        [
          {
            "node": "Stop and Error40",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave halfday8": {
      "main": [
        [
          {
            "node": "If21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If21": {
      "main": [
        [
          {
            "node": "Code14",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code16": {
      "main": [
        [
          {
            "node": "If116",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If116": {
      "main": [
        [
          {
            "node": "Cloodo Point61",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point60": {
      "main": [
        [
          {
            "node": "If117",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found37": {
      "main": [
        [
          {
            "node": "Cloodo Point60",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point61": {
      "main": [
        [
          {
            "node": "IF not found37",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If117": {
      "main": [
        [
          {
            "node": "Stop and Error41",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get All Department",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get All Department1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get All Department2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "Get All Department",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get All Department1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get All Department2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point46": {
      "main": [
        [
          {
            "node": "If22",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found2": {
      "main": [
        [
          {
            "node": "Cloodo Point46",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point47": {
      "main": [
        [
          {
            "node": "IF not found2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If22": {
      "main": [
        [
          {
            "node": "Stop and Error33",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point48": {
      "main": [
        [
          {
            "node": "If23",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found3": {
      "main": [
        [
          {
            "node": "Cloodo Point48",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point49": {
      "main": [
        [
          {
            "node": "IF not found3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If23": {
      "main": [
        [
          {
            "node": "Stop and Error34",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point50": {
      "main": [
        [
          {
            "node": "If24",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found4": {
      "main": [
        [
          {
            "node": "Cloodo Point50",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point51": {
      "main": [
        [
          {
            "node": "IF not found4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If24": {
      "main": [
        [
          {
            "node": "Stop and Error36",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point52": {
      "main": [
        [
          {
            "node": "If25",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found5": {
      "main": [
        [
          {
            "node": "Cloodo Point52",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point53": {
      "main": [
        [
          {
            "node": "IF not found5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If25": {
      "main": [
        [
          {
            "node": "Stop and Error37",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "ad295e27-5a16-4909-9aca-4ca3326e905a",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "3909475c03ca6926b6e6edc6a6f06c1feb448ce7ac700d69b17002085d9011f8"
  },
  "id": "12XKWDN8JI6eUe5E",
  "tags": []
}