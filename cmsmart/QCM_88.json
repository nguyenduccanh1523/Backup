{
  "name": "QCM 88",
  "nodes": [
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/departments",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "limit",
              "value": "25"
            }
          ]
        },
        "options": {}
      },
      "id": "d706a2e7-a01c-4643-abb6-bd6e62bd36dc",
      "name": "Get All Department",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -200,
        220
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/departments",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "limit",
              "value": "25"
            }
          ]
        },
        "options": {}
      },
      "id": "1c5b3c92-a255-4a16-bd3c-8045663ed1ce",
      "name": "Get All Department1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -200,
        420
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/departments",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "limit",
              "value": "25"
            }
          ]
        },
        "options": {}
      },
      "id": "07d4f48c-5490-4488-bdf9-3444e622e3d6",
      "name": "Get All Department2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -220,
        640
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "numberInputs": 3
      },
      "id": "0f944a04-e358-4efe-a336-3b1dd2eded44",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        300,
        420
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "db7ea62c-25ac-4f32-b12f-fbf1f9e48490",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        520,
        420
      ]
    },
    {
      "parameters": {
        "jsCode": "const allDepartment = $input.all()[0]?.json?.data[2]\nconst member = allDepartment?.member\n  \n\nreturn{\n  name: allDepartment?.name,\n  member: member\n}\n"
      },
      "id": "32512d79-0d90-4200-a711-a41ffd76899f",
      "name": "GetMember",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        20,
        220
      ]
    },
    {
      "parameters": {
        "jsCode": "const allDepartment = $input.all()[0]?.json?.data[2]\nconst member = allDepartment?.member\n                     \n\nreturn{\n  name: allDepartment?.name,\n  member: member\n}\n"
      },
      "id": "fac712bf-fa3f-4124-a3be-2ff5840f850f",
      "name": "GetMember1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        20,
        420
      ]
    },
    {
      "parameters": {
        "jsCode": "const allDepartment = $input.all()[0]?.json?.data[2]\nconst member = allDepartment?.member\n\nreturn{\n  name: allDepartment?.name,\n  member: member\n}\n"
      },
      "id": "bedb173f-47d8-4164-ad79-a7c9cf44beb7",
      "name": "GetMember2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        20,
        640
      ]
    },
    {
      "parameters": {
        "jsCode": "let listMembers = []\n\n// Lấy các thành viên của ba công ty\nconst MemberCms = $input.all()[0]?.json?.data[0]?.member;\nconst MemberPrintCart = $input.all()[0]?.json?.data[1]?.member;\nconst MemberCloodo = $input.all()[0]?.json?.data[2]?.member;\n\n// Thêm tên công ty vào các thành viên\nMemberCms.forEach(member => {\n  member.companyName = 'CmsMart';// Tên công ty cho MemberCms\n  listMembers.push(member)\n});\n\nMemberPrintCart.forEach(member => {\n  member.companyName = 'PrintCart';  // Tên công ty cho MemberPrintCart\n  listMembers.push(member)\n});\n\nMemberCloodo.forEach(member => {\n  member.companyName = 'Cloodo';  // Tên công ty cho MemberCloodo\n  listMembers.push(member)\n});\n\n// Đếm số lượng công ty cho mỗi người theo 'name'\nconst nameCountMap = {};\n\n// Duyệt qua danh sách các thành viên và đếm số lượng công ty theo tên\nlistMembers.forEach(member => {\n  const name = member.name;\n\n  // Nếu tên chưa có trong map, khởi tạo giá trị với 0\n  if (!nameCountMap[name]) {\n    nameCountMap[name] = new Set();  // Sử dụng Set để đảm bảo mỗi công ty chỉ được đếm 1 lần\n  }\n\n  // Thêm tên công ty vào Set để đếm duy nhất\n  nameCountMap[name].add(member.companyName);\n});\n\n// Thêm số lượng công ty vào từng thành viên\nlistMembers.forEach(member => {\n  const name = member.name;\n  member.countCompany = nameCountMap[name].size; // Số lượng công ty mà thành viên tham gia\n});\n\n// Trả về các thành viên đã được cập nhật\nreturn listMembers;"
      },
      "id": "e4fa01b9-f770-4ba5-81cd-71faf218585e",
      "name": "CompanyName",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        700,
        420
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.countCompany }}",
                    "rightValue": 1,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "1"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ecaeec34-6fa8-41da-aeb6-827e62de92b3",
                    "leftValue": "={{ $json.countCompany }}",
                    "rightValue": 2,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "2"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8d73594f-9a0b-4b50-b347-ac7eb50f0f13",
                    "leftValue": "={{ $json.countCompany }}",
                    "rightValue": 3,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "3"
            }
          ]
        },
        "options": {}
      },
      "id": "ce1a31c6-8996-48ec-93f9-d2dfc6ecf57f",
      "name": "Count Company",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        940,
        420
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6e41004a-24bd-4475-9837-4c1b5e68d983",
              "leftValue": "={{ $json.name }}",
              "rightValue": "Nguyen Duc Phat",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "66118cb4-71a2-4eb6-84f9-959f58d75129",
      "name": "Remove employee leave1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2840,
        440
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "371565ba-1b9d-465b-a65d-71eaf4ef8780",
      "name": "Switch Company2",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        5020,
        -1860
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "d415bd79-aa75-4e7e-be65-2c15237d2340",
      "name": "Switch Company3",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        5200,
        -360
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "c283bd9a-bc24-4b63-9dc6-4739822df6d8",
      "name": "Switch Company6",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        5060,
        1020
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6e41004a-24bd-4475-9837-4c1b5e68d983",
              "leftValue": "={{ $json.name }}",
              "rightValue": "Vu Duy The",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "78afbfca-facc-47a3-8987-df2c386f93d8",
      "name": "Remove employee leave2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1240,
        1880
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "646a8d9b-337c-4fa3-8aeb-9cb24667b0a0",
      "name": "Switch Company8",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1680,
        1880
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Vu Van Minh",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Vu Van Minh"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "dbe7be1f-5b60-42df-bca3-3dd1ab846db7",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Vo Tuan Vu",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Vo Tuan Vu"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "3a1ebf8a-3f5c-44e3-b8eb-22452c6d8a32",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Nguyen Ngoc Huy",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Nguyen Ngoc Huy"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "602b04f8-5e81-4b3d-8537-8435fd5ca9f0",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Pham Ngoc Huy",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Pham Ngoc Huy"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8f2d3c75-6e15-44dd-955f-2462cea6fcf8",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Do Hoang Nam",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Do Hoang Nam"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5ddab4fb-4552-442c-b985-ac486038e5f0",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Hoang Anh Dung",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Hoang Anh Dung"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e4ebcd21-3054-433a-a04e-532ba93b1e19",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Nguyen Duc Canh",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Nguyen Duc Canh"
            }
          ]
        },
        "options": {}
      },
      "id": "cfdae9eb-ea2e-4ba5-954c-39959644bf5f",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        4140,
        400
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If74').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If74').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "635d06b8-4fd0-42a0-ab9b-c2177d8c65db",
      "name": "Cloodo Point22",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        7740,
        1560
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "a4dcc7f6-069b-41ae-bb67-501b8e34d9a5",
      "name": "IF not found20",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        7500,
        1580
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $('If74').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "09c3b84d-22b5-47ff-8517-b6b375a34a78",
      "name": "Cloodo Point34",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        7300,
        1580
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "00923c9f-f1d5-468c-b883-f39c38272f83",
      "name": "Stop and Error23",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        8160,
        1540
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "44a5a6a6-e9bf-4376-9333-2928a9104b06",
      "name": "If63",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7900,
        1560
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "c6ebecad-1cc2-418c-91b5-f2dbfcb0f976",
      "name": "If74",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5880,
        1060
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "e4a4e4e0-bcf4-4f3a-9624-a17b1257c1f6",
      "name": "Check create 7d53",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5640,
        1060
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "9b78632e-3427-4f57-8d87-1286427f9b71",
      "name": "get Timelog10",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5420,
        1060
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "71bd74f2-cbb8-4439-9a51-3fc0d4427b48",
      "name": "If75",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5880,
        1280
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "341a1066-942a-457d-b145-89d936298c3f",
      "name": "Check create 7d54",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5640,
        1280
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "e1a7fe9d-9db4-4de1-bb01-92288d639f4c",
      "name": "get Timelog11",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5420,
        1280
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "c57f4e8d-96e9-4b53-9d2b-c5e7514542d8",
      "name": "If76",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5860,
        1500
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "7d228d72-aae2-47c6-8308-893cc27e54e2",
      "name": "Check create 7d55",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5620,
        1500
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "1723b558-aa82-411e-b012-bb8a70ad7703",
      "name": "get Timelog12",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5400,
        1500
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If75').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 360, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "83366dc7-bf8d-4b22-a3f1-26a024a9c4f5",
      "name": "Code5",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6680,
        1000
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "26958a1d-4308-411e-8a42-eba7fd272489",
      "name": "If77",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6940,
        1000
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If77').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If77').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "d72808f1-0262-4027-b9c9-14cb4aaf3880",
      "name": "Cloodo Point23",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        7660,
        960
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "c541164f-a0c5-4b8c-a6f6-28cddb194892",
      "name": "IF not found21",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        7420,
        980
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "5c084ea0-7fb8-4ab8-a02a-cb5811b0f8b0",
      "name": "Cloodo Point35",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        7260,
        980
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "7ad69f60-70ba-4069-bdf2-7cf01b309dcb",
      "name": "Stop and Error24",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        8080,
        940
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "41045e67-b60a-4007-a262-fc4fdaae4796",
      "name": "If78",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7820,
        960
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If74').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 360, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "1a70012a-6f23-4af7-9839-c0960117d67f",
      "name": "Code6",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6680,
        560
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "53c0baa6-8682-4732-8b5a-d1cda0dcb99d",
      "name": "If79",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6940,
        560
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If79').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If79').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "263e12a2-880a-43c2-85c1-414d2c12145e",
      "name": "Cloodo Point26",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        7660,
        520
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "39f6081b-21dc-4a9f-b642-9d631af7785f",
      "name": "IF not found22",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        7420,
        540
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "ffd9caea-6f75-4937-b84e-52e853451ac9",
      "name": "Cloodo Point36",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        7220,
        540
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "6c1aaa69-7e94-4e39-ad6b-9631723b2edc",
      "name": "Stop and Error25",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        8080,
        500
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7b37f222-634d-40cd-8087-5eed00ad3fc3",
      "name": "If80",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7820,
        520
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "useDataOfInput": 2
      },
      "id": "f8fac096-0697-4f93-afa8-84508be2d977",
      "name": "Merge11",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        7000,
        1580
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "be0ee61b-4e50-4409-8db0-376e681caa0e",
      "name": "If89",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6120,
        -640
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "56c076b4-779c-4597-9b21-383b506b176c",
      "name": "Check create 7d59",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5880,
        -640
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "1d628720-65d4-4382-af20-8ed79d6cb249",
      "name": "get Timelog16",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5660,
        -640
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "f94069a3-ad17-4736-a1d9-9306b9645c4d",
      "name": "If90",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6120,
        -420
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "86d94a3d-26b7-4604-8734-5ea50c5c0bb1",
      "name": "Check create 7d60",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5880,
        -420
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "2872ba86-46db-440a-931c-780c59de2d24",
      "name": "get Timelog17",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5660,
        -420
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "316fb06d-931b-45bc-b885-49ae3eba2ea1",
      "name": "If91",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6100,
        -200
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "5b058ab6-45bc-4e5d-add2-086b373989b8",
      "name": "Check create 7d61",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5860,
        -200
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "c1243de5-dfd2-4d9f-9867-56cad1330487",
      "name": "get Timelog18",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5640,
        -200
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "940d66ef-e26d-481b-8ca4-ab9d1e648b2e",
      "name": "If97",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5960,
        -2000
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "83305aa7-cec3-44e2-b167-c314e0fc7a03",
      "name": "Check create 7d62",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5720,
        -2000
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "4c26e0ed-9d75-4390-9982-24cf14a13824",
      "name": "get Timelog19",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5500,
        -2000
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "613854d8-3cef-487e-9c8f-692693b29fc3",
      "name": "If98",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5960,
        -1780
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "7a78ff92-3540-4d55-ab4d-84318ad31274",
      "name": "Check create 7d63",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5720,
        -1780
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "3cfc1a88-9c46-4746-bcee-e76b833cc9f9",
      "name": "get Timelog20",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5500,
        -1780
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "6a2ad775-3402-4e48-92dc-e798ac2d1a73",
      "name": "If99",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5940,
        -1560
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "a80da932-1a88-4379-8bff-e9fe23509719",
      "name": "Check create 7d64",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5700,
        -1560
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "dae9e5ee-fe4e-4a1d-87ff-89236d3cae4d",
      "name": "get Timelog21",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5480,
        -1560
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "b6d322eb-5d33-4732-bc2f-ab27c6fbb201",
      "name": "Check Leave Single2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6420,
        1700
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "7cd97062-76e8-4659-aa78-edc781bc89fd",
      "name": "Check Leave Single3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6420,
        1440
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "dd57bbba-5c92-4a46-a84c-42fbafc01c6c",
      "name": "If6",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6660,
        1700
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "1db21470-d78f-414d-a56f-c3a3c06f679f",
      "name": "If7",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6640,
        1440
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "half day"
            },
            {
              "name": "search",
              "value": "={{ $json.items[0].user.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "214e5b43-3596-4728-b9e7-5fc42209b595",
      "name": "Check Leave halfday2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6220,
        680
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ec23ccc7-7d5e-4569-8da2-25efbfae4506",
      "name": "If8",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6400,
        680
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If74').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 180, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "31fdc2ac-f65d-45db-b09f-4d320a9c9881",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6680,
        780
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "b165b4fb-a806-4a37-ad3d-a859f2407c48",
      "name": "If81",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6940,
        780
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If81').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If81').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "4cc9916f-dba2-43d0-9dd0-5f7767e1528b",
      "name": "Cloodo Point27",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        7660,
        740
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "9891bf54-18c4-48bb-a058-1fec9bef3608",
      "name": "IF not found23",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        7420,
        760
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "7e4eec17-bf4a-4d95-bacb-2e9fc1d165a9",
      "name": "Cloodo Point37",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        7220,
        760
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "91bba873-a2c1-4138-97e7-32a6cdf23b49",
      "name": "Stop and Error26",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        8080,
        720
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "975f9aa5-c891-4017-8b07-5b075180c5d5",
      "name": "If82",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7820,
        740
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "half day"
            },
            {
              "name": "search",
              "value": "={{ $json.items[0].user.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "457592ac-8d54-4e25-96df-0a21f9916c05",
      "name": "Check Leave halfday3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6220,
        1140
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "0fed09ca-ebb3-4aa3-9b93-96e357bf6256",
      "name": "If9",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6400,
        1140
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If75').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 180, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "a0fe527a-668f-479c-aa28-d4de224ceab0",
      "name": "Code7",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6700,
        1220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "fd7a47cc-e10c-4ed3-8e04-d85c26c07a75",
      "name": "If83",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6960,
        1220
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If83').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If83').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "301ff538-446a-48f2-a78c-4fcac4800fc3",
      "name": "Cloodo Point28",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        7680,
        1180
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "a04604ee-a00b-473b-b4cf-acd3b3ad9bb1",
      "name": "IF not found24",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        7440,
        1200
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "b4a27277-0b08-45b5-9413-ed7607b6353d",
      "name": "Cloodo Point38",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        7260,
        1200
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "b6c713bf-4d3d-4d3f-8ae5-2e8f445ef0c0",
      "name": "Stop and Error27",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        8100,
        1160
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5187e11f-09d6-4d8a-9097-63d94cbbafff",
      "name": "If84",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7840,
        1180
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If89').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If89').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "fc98e0aa-e4c7-4f76-89e7-7dfa964d7b54",
      "name": "Cloodo Point29",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        8280,
        -100
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "cc497791-90a1-42f7-abbe-bd5c8867f180",
      "name": "IF not found",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        8040,
        -80
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $('If89').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "bd1c009d-b150-4809-9f0f-9606b4ef81b0",
      "name": "Cloodo Point39",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        7840,
        -80
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "8b7ee009-f92d-4489-8555-6cfc17389442",
      "name": "Stop and Error28",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        8700,
        -120
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "10520299-dc50-4095-9536-62b6d7837d17",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        8440,
        -100
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If90').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 360, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "b183eddb-f8e6-42d2-9c82-97217689fca5",
      "name": "Code8",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        7220,
        -660
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "1533fee0-0695-4df4-b36f-cd64dc0df560",
      "name": "If85",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7480,
        -660
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If85').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If85').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "bbd474e1-3b12-46e6-8f2c-a4314b6af709",
      "name": "Cloodo Point30",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        8200,
        -700
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "7268abcf-96ab-41fa-acdf-90916fde2209",
      "name": "IF not found25",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        7960,
        -680
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "c6b9e762-0c44-484c-8d0f-9c356d057d7c",
      "name": "Cloodo Point40",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        7800,
        -680
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "4725c7cc-7fc0-4f03-96e8-5fa2851cb593",
      "name": "Stop and Error29",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        8620,
        -720
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "10d542ae-309d-4b89-a1d8-9401e7b32b12",
      "name": "If86",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        8360,
        -700
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If89').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 360, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "640e3707-3500-4742-8833-9c4350891d69",
      "name": "Code9",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        7220,
        -1100
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "7ec9949a-d991-4c75-a9bc-5cefc0ec03a7",
      "name": "If87",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7480,
        -1100
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If87').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If87').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "6270727a-f9af-4857-b41b-1aa1e8df52a6",
      "name": "Cloodo Point31",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        8200,
        -1140
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "3d627140-4951-49b5-8437-619b990303f1",
      "name": "IF not found26",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        7960,
        -1120
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "47013976-4b67-4c1c-a968-53990207861f",
      "name": "Cloodo Point41",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        7760,
        -1120
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "2833f078-efb5-43be-9a83-56f2cb9ea430",
      "name": "Stop and Error30",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        8620,
        -1160
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "0cb59de8-3eae-4776-b6db-aec7e8eae4e7",
      "name": "If88",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        8360,
        -1140
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "useDataOfInput": 2
      },
      "id": "35a802ff-1df8-46c3-befd-a6e49a238b91",
      "name": "Merge12",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        7540,
        -80
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "6585184d-5b23-47f1-b451-22be7093ded4",
      "name": "Check Leave Single4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6960,
        40
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "284ec26d-756e-452c-bf14-35254349b0b5",
      "name": "Check Leave Single5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6960,
        -220
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "09ff90ae-436e-45c8-8b90-d0b3af642143",
      "name": "If10",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7200,
        40
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6d78fde6-3f3f-4f66-96a7-98e4c20586b4",
      "name": "If11",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7180,
        -220
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "half day"
            },
            {
              "name": "search",
              "value": "={{ $json.items[0].user.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "ddbbd165-5aec-4c23-b9f6-8f13d567b6e6",
      "name": "Check Leave halfday4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6760,
        -980
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "24be9a65-b7dc-416d-9257-cb1e4b9c2cc2",
      "name": "If12",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6940,
        -980
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If89').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 180, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "2557c5e7-83cf-4b9c-8cb2-c3958d0fcc02",
      "name": "Code1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        7220,
        -880
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "47e3e22e-4879-4a2a-b326-be6b20cd28c0",
      "name": "If92",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7480,
        -880
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If92').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If92').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "cb89791b-31d3-47bd-ab56-0680da8b1582",
      "name": "Cloodo Point32",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        8200,
        -920
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "f1ede37e-b5f9-4944-8651-8eb2dcebc3cd",
      "name": "IF not found27",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        7960,
        -900
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "6335aa69-55a5-4c7c-9ad0-10b97e6ea563",
      "name": "Cloodo Point42",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        7760,
        -900
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "0afc405c-5da8-454c-84c6-1f875f438682",
      "name": "Stop and Error31",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        8620,
        -940
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "028b4445-d966-43bf-8e9b-aa2ff3b9c275",
      "name": "If93",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        8360,
        -920
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "half day"
            },
            {
              "name": "search",
              "value": "={{ $json.items[0].user.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "489deeac-0159-4cc7-861b-fb1966f1a23b",
      "name": "Check Leave halfday5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6760,
        -520
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "fc256550-5c86-4091-8354-e0d39d3cdf28",
      "name": "If13",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6940,
        -520
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If90').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 180, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "d359116c-cb7d-4ec4-9264-8182f4dc9cc3",
      "name": "Code10",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        7240,
        -440
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "0b0dfc64-6aa6-4fea-a91b-309e99db8007",
      "name": "If94",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7500,
        -440
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If94').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If94').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "ae78c4f1-edac-4e8f-a170-d1cc7d612e4a",
      "name": "Cloodo Point33",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        8220,
        -480
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "58b77780-737f-4e85-875e-a4ee62a7a68c",
      "name": "IF not found31",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        7980,
        -460
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "fa38d77a-d791-4961-bb92-6559bc5670a7",
      "name": "Cloodo Point43",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        7800,
        -460
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "25e32169-0e6c-44d9-8cb9-fa6e9e150f7a",
      "name": "Stop and Error35",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        8640,
        -500
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b642bf3f-481e-4952-b89f-971c4c2c3b0a",
      "name": "If95",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        8380,
        -480
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If97').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If97').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "28a0c9d4-6456-4cf6-a328-cc699d8ffe85",
      "name": "Cloodo Point44",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        8080,
        -1560
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "234b6067-7f79-48a6-ae72-913610d6aceb",
      "name": "IF not found1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        7840,
        -1540
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $('If97').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "938578f9-1f8f-42a6-828f-d39832caf1ae",
      "name": "Cloodo Point45",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        7640,
        -1540
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "3dd50807-0015-41cb-b24a-9d8fbfa5d095",
      "name": "Stop and Error32",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        8500,
        -1580
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9d618e22-032f-44a4-aa9f-c90adff4de0a",
      "name": "If5",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        8240,
        -1560
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If98').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 360, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "b0bdb959-1eba-4268-bff1-127d77d99f79",
      "name": "Code11",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        7020,
        -2120
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "b301e6cc-0876-43aa-88c4-10efa39d729a",
      "name": "If96",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7280,
        -2120
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If96').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If96').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "664fbec8-25eb-446b-a1b0-930daf68ba7e",
      "name": "Cloodo Point46",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        8000,
        -2160
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "41a9f38e-f689-4fc1-b066-4ebb79d9445d",
      "name": "IF not found28",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        7760,
        -2140
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "91414f16-7b61-4ab9-8005-1855299f7294",
      "name": "Cloodo Point47",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        7600,
        -2140
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "2754cc1e-19dd-4ffc-b17e-38525c7f9cd4",
      "name": "Stop and Error33",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        8420,
        -2180
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a432d354-9549-4801-9e40-ef9ad8b29226",
      "name": "If100",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        8160,
        -2160
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If97').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 360, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "3abedef1-151c-464c-b0fa-750b5e9091a7",
      "name": "Code12",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        7020,
        -2560
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "b9f50602-ed73-4c19-9317-86694136db7f",
      "name": "If101",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7280,
        -2560
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If101').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If101').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "a3d91e3a-12c4-4191-8ff1-986d72cecb05",
      "name": "Cloodo Point48",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        8000,
        -2600
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "78015253-8625-44b7-a539-4ffc929a1133",
      "name": "IF not found29",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        7760,
        -2580
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "a50eac2c-0aa6-4b92-ab33-5a1fe7eb1c1b",
      "name": "Cloodo Point49",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        7560,
        -2580
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "b7974e21-07b3-414e-9371-096aae41cac4",
      "name": "Stop and Error34",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        8420,
        -2620
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "25b40093-b14d-4ec2-9555-d234011be838",
      "name": "If102",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        8160,
        -2600
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "useDataOfInput": 2
      },
      "id": "e6c9503b-b39c-4cb3-8b04-2c3addda0bbd",
      "name": "Merge13",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        7340,
        -1540
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "841f7437-416c-49be-b631-744cc411b471",
      "name": "Check Leave Single6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6660,
        -1400
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "9695a285-02d2-4184-8b9e-45df7cb279c7",
      "name": "Check Leave Single7",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6660,
        -1660
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c6720f2b-3094-4285-bfb6-b4ddf7c4d4ec",
      "name": "If14",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6900,
        -1400
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "af594034-1e55-4843-b34b-dbc5a8d79f2b",
      "name": "If15",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6880,
        -1660
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "half day"
            },
            {
              "name": "search",
              "value": "={{ $json.items[0].user.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "40aaf374-1dfe-4259-9159-392e6a9c5814",
      "name": "Check Leave halfday6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6560,
        -2440
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "65a10fd2-e995-45b9-98d4-641ab7ea0709",
      "name": "If16",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6740,
        -2440
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If97').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 180, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "cdc61d9b-14b7-4959-8d45-a16c26cdb1a7",
      "name": "Code2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        7020,
        -2340
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "b90ff31e-e38e-4a9f-9d57-6beacb558e37",
      "name": "If103",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7280,
        -2340
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If103').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If103').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "03090aa2-dba4-4969-bfbd-c8c9c69592ea",
      "name": "Cloodo Point50",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        8000,
        -2380
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "0e353076-9f06-4cc2-b9e6-0cc315524040",
      "name": "IF not found30",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        7760,
        -2360
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "6f54411b-8833-4c01-b7c6-926a87733951",
      "name": "Cloodo Point51",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        7560,
        -2360
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "5dc1d538-4c27-45f2-ba65-f5b34c87f9db",
      "name": "Stop and Error36",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        8420,
        -2400
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ee6c0a46-6fa1-4029-a714-589a571c848f",
      "name": "If104",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        8160,
        -2380
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "half day"
            },
            {
              "name": "search",
              "value": "={{ $json.items[0].user.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "a4e478d3-2409-4727-8050-44d513409200",
      "name": "Check Leave halfday7",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6560,
        -1980
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "82990f2f-d430-4a39-9db9-5cb6fcfc1995",
      "name": "If17",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6740,
        -1980
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If98').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 180, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "4c7291f8-bf43-4e52-bad9-188025500108",
      "name": "Code13",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        7040,
        -1900
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "5411c3ac-beb2-4f73-b578-ffcc00106299",
      "name": "If105",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7300,
        -1900
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If105').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If105').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "f8297650-a97f-4171-a0c5-44719d28e5b7",
      "name": "Cloodo Point52",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        8020,
        -1940
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "c3841abd-2df3-4fdf-8b61-a02bfd20de4d",
      "name": "IF not found32",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        7780,
        -1920
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "644399f3-61cd-4261-9bf0-d89e9236eba6",
      "name": "Cloodo Point53",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        7600,
        -1920
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "f98d5114-4586-4606-a149-55372f8f3217",
      "name": "Stop and Error37",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        8440,
        -1960
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "4f1e8516-2c1b-4494-965a-a26ebd59891d",
      "name": "If106",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        8180,
        -1940
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If107').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If107').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "f008acfb-81f6-4144-b10d-8e239d319c8f",
      "name": "Cloodo Point",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        4280,
        2160
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "606bfe3f-8bb3-4c93-af9f-ed5f060ba711",
      "name": "IF not found33",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        4040,
        2180
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $('If107').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "24d86528-1770-4000-bd0a-9fb328b3433d",
      "name": "Cloodo Point54",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        3840,
        2180
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "8ebd4873-172b-45b5-afb9-fc45df6b79de",
      "name": "Stop and Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        4700,
        2140
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "1790d208-7605-4439-ae7a-f86f9bd52849",
      "name": "If64",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4440,
        2160
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "3d8c3d99-ea80-43ca-9d3f-d0e7ec465347",
      "name": "If107",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2420,
        1660
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "98c705e3-439b-466f-baec-bd2bafc80bf8",
      "name": "Check create 7d",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2180,
        1660
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "4c8c36a6-a9f5-4de2-86fb-acb111bb242d",
      "name": "get Timelog",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1960,
        1660
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "0e2686a8-dbe4-483e-8ceb-728c86fb1cac",
      "name": "If108",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2420,
        1880
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "e89c799b-28ca-421b-858e-f320c6723aa3",
      "name": "Check create 7d56",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2180,
        1880
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "7ac76271-4947-4adb-93ec-a8d84e03268a",
      "name": "get Timelog13",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1960,
        1880
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.success }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "7250c89f-3283-4aeb-ab97-8997b46faac6",
      "name": "If109",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2400,
        2100
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy ngày hiện tại\nconst currentDate = new Date();\n\n// Tính thời điểm bắt đầu của ngày hôm nay (0h GMT+7)\nconst startOfTodayGMT7 = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0); \nstartOfTodayGMT7.setHours(startOfTodayGMT7.getHours() - 7); // Điều chỉnh sang 0h GMT+7\n\n// Tính thời điểm bắt đầu của ngày mai (0h GMT+7)\nconst startOfTomorrowGMT7 = new Date(startOfTodayGMT7);\nstartOfTomorrowGMT7.setDate(startOfTomorrowGMT7.getDate() + 1); // Ngày mai 0h GMT+7\n\n// Debug kiểm tra thời gian\n// console.log('Start of Today (GMT+7):', startOfTodayGMT7);\n// console.log('Start of Tomorrow (GMT+7):', startOfTomorrowGMT7);\n\n// Khởi tạo mảng trống để lưu kết quả\nlet result = [];\n\n// Lặp qua từng item trong 'data' và lọc những item có 'start_time' nằm trong ngày hôm nay (GMT+7)\n$input.all()[0]?.json?.data?.forEach(item => {\n  let startTimeString = item?.start_time; // Lấy giá trị 'start_time' dưới dạng chuỗi\n\n  // Chuẩn hóa định dạng start_time nếu cần\n  if (startTimeString && startTimeString.includes('.')) {\n    startTimeString = startTimeString.split('.')[0] + 'Z'; // Loại bỏ phần sau dấu '.' và thêm 'Z'\n  }\n\n  // Chuyển đổi 'start_time' sang đối tượng Date\n  const startDate = startTimeString ? new Date(startTimeString) : null;\n\n  if (!isNaN(startDate)) { // Kiểm tra nếu 'start_time' hợp lệ\n    // Chuyển đổi startDate sang GMT+7\n    const startDateGMT7 = new Date(startDate.getTime() + 7 * 60 * 60 * 1000);\n    // console.log('startDateGMT7 ', startDateGMT7)\n\n    // Kiểm tra nếu 'start_time' nằm trong ngày hôm nay (GMT+7)\n    const isStartTimeToday = startDateGMT7 >= startOfTodayGMT7 && startDateGMT7 < startOfTomorrowGMT7;\n\n    // Nếu 'start_time' thuộc ngày hôm nay, thêm vào mảng kết quả\n    if (isStartTimeToday) {\n      result.push(item); // Đẩy trực tiếp item vào mảng kết quả\n    }\n  }\n});\n\n// Kiểm tra kết quả và trả về\nif (result.length > 0) {\n  // Nếu có item, trả về danh sách và true\n  return {\n    success: true,\n    items: result\n  };\n} else {\n  // Nếu không có item, trả về false\n  return {\n    success: false,\n    id: $input.all()[0]?.json?.data[0]?.user?.id,\n    name: $input.all()[0]?.json?.data[0]?.user?.name\n  };\n}\n"
      },
      "id": "219efa26-279e-4915-9f1b-306eb49c7c0c",
      "name": "Check create 7d57",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2160,
        2100
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/time-logs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "sort",
              "value": "desc"
            },
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "user_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "0ec62b6b-f98e-4eff-902c-c76161da2349",
      "name": "get Timelog14",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1940,
        2100
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If108').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 360, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "d8829a44-11cc-48ce-bec0-6742ea4e8483",
      "name": "Code14",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3220,
        1600
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "7ce5aa3e-8ee3-49e8-9890-84bd277a5fed",
      "name": "If110",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3480,
        1600
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If110').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If110').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "e892bdb2-8857-48b6-9faf-006d05ff285b",
      "name": "Cloodo Point24",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        4200,
        1560
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "a10b592e-10e7-4fe0-8b36-7629909718ac",
      "name": "IF not found34",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        3960,
        1580
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "94f4b8cf-0245-4807-b3bc-08588c49b2b6",
      "name": "Cloodo Point55",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        3800,
        1580
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "27edefdf-6fb4-4a72-8092-f210567982a7",
      "name": "Stop and Error38",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        4620,
        1540
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6afa0870-76af-4b79-a86b-37bc622ed574",
      "name": "If111",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4360,
        1560
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If107').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 360, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "a4864b5a-cc48-4d04-a821-506755c5844d",
      "name": "Code15",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3220,
        1160
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "2ab59d03-e462-4096-aef1-ade4f7e43479",
      "name": "If112",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3480,
        1160
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If112').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If112').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "e92ebb2c-a86d-460e-86e1-a468a5ae3604",
      "name": "Cloodo Point56",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        4200,
        1120
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "6fc94541-869c-417c-8cef-953f16c6c295",
      "name": "IF not found35",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        3960,
        1140
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "518425ab-dda3-497b-85ef-af3694471540",
      "name": "Cloodo Point57",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        3760,
        1140
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "2f96bccc-a756-4b8e-96c1-3da592b9fd87",
      "name": "Stop and Error39",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        4620,
        1100
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7b79866f-c0e0-4c2d-ae24-fccb78d5be12",
      "name": "If113",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4360,
        1120
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "useDataOfInput": 2
      },
      "id": "92a79f67-0153-47da-ad79-6a5ebe9b3ee8",
      "name": "Merge14",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        3540,
        2180
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "b00e14c2-97fc-4a73-a86f-c70528d131fe",
      "name": "Check Leave Single",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2960,
        2300
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "single"
            },
            {
              "name": "search",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "8d41d6b2-c5a1-4627-b71f-d810b8c8c35b",
      "name": "Check Leave Single8",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2960,
        2040
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3551e971-81c5-4f59-a5c2-0a873e26a4b0",
      "name": "If18",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3200,
        2300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "8f3ea943-9848-4938-a18e-b1f2b8f7cac8",
      "name": "If19",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3180,
        2040
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "half day"
            },
            {
              "name": "search",
              "value": "={{ $json.items[0].user.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "9c1d7964-afee-488e-9e0b-85d2f39a8c92",
      "name": "Check Leave halfday",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2760,
        1280
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a9afa066-540b-4bae-956f-933821a6a044",
      "name": "If20",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2940,
        1280
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If107').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 180, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "d8f1e2f6-5f1a-4190-81a9-5629a851c8e6",
      "name": "Code3",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3220,
        1380
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "fcbf085e-695d-4e34-bed9-485a2198061b",
      "name": "If114",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3480,
        1380
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If114').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If114').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "3bbaf9a2-a337-4bf6-8f5d-e1569b260243",
      "name": "Cloodo Point58",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        4200,
        1340
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "9f5e31a3-c72a-4c8f-b0c9-a006f64990c3",
      "name": "IF not found36",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        3960,
        1360
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "814c2cb1-67bb-4981-8644-c05fea3dfee9",
      "name": "Cloodo Point59",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        3760,
        1360
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "e50745be-142b-470c-badc-3cee663a9375",
      "name": "Stop and Error40",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        4620,
        1320
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a71a9746-d9b4-45bf-a60e-01b6a4ffd421",
      "name": "If115",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4360,
        1340
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/leaves",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "date_from",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "date_to",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            },
            {
              "name": "duration",
              "value": "half day"
            },
            {
              "name": "search",
              "value": "={{ $json.items[0].user.name }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "8241541c-7df1-410c-8f4a-baf14f9c5a15",
      "name": "Check Leave halfday8",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2760,
        1740
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "71e22f68-1b39-4dad-b6c0-9fa8e273abc7",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b131d8b0-08e9-4979-bea3-0de3f1fffb41",
      "name": "If21",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2940,
        1740
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy danh sách items từ input\nconst items = $('If108').all()[0]?.json?.items || [];\n\n// Khởi tạo biến để tính tổng\nlet totalSum = 0;\n\n// Lặp qua từng item và cộng giá trị 'total_minutes' vào tổng\nfor (const item of items) {\n  const total = item?.total_minutes || 0; // Lấy giá trị 'total_minutes', mặc định là 0 nếu không tồn tại\n  totalSum += total; // Cộng giá trị vào tổng\n}\n\n// Tạo kết quả cuối cùng để trả về\nconst result = [{\n  totalSum, // Tổng tất cả total_minutes\n  isboolen: totalSum > 180, // Trả về true nếu tổng lớn hơn 240, ngược lại false\n  name: items[0]?.user?.name,\n  id: items[0]?.user?.id\n}];\n\n// Trả về mảng chỉ chứa kết quả cuối cùng\nreturn result;\n"
      },
      "id": "f4d669cd-1258-4bfc-81d4-fdad9ee84b9d",
      "name": "Code16",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3240,
        1820
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.isboolen }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "9ea76a68-2b37-4e65-b770-e7ef70560c33",
      "name": "If116",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3500,
        1820
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If116').item.json.id }}",
        "points": 3,
        "note": "=QCM 88: {{ $('If116').item.json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "f6617b6f-29a7-4708-8375-a2271a4f551e",
      "name": "Cloodo Point60",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        4220,
        1780
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "303e4ec3-5173-44c2-9f52-54fee7945438",
      "name": "IF not found37",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        3980,
        1800
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 88: {{ $json.name }} -3 Point No Logtime on day {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "e035ed02-70b3-47bf-abe6-fb3a3337a7fe",
      "name": "Cloodo Point61",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        3800,
        1800
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "30403799-479a-4b06-9100-e50495f75eda",
      "name": "Stop and Error41",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        4640,
        1760
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9b0f0910-8864-4ae7-a2d1-e6b911a3fc9d",
      "name": "If117",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4380,
        1780
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks",
              "triggerAtDay": [
                1
              ],
              "triggerAtHour": 18
            }
          ]
        }
      },
      "id": "06d6ef62-2cbb-4f1e-a94d-20fb73aa1399",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -720,
        220
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks",
              "triggerAtDay": [
                1
              ],
              "triggerAtHour": 21
            }
          ]
        }
      },
      "id": "30d8e35b-2b45-4274-8397-ee843dde5b85",
      "name": "Schedule Trigger1",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -720,
        640
      ]
    },
    {
      "parameters": {
        "content": "## 6pm and 9pm\n",
        "height": 80
      },
      "id": "24700ab0-764a-498d-8451-8e143a1eb593",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1100,
        420
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Get All Department": {
      "main": [
        [
          {
            "node": "GetMember",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Department1": {
      "main": [
        [
          {
            "node": "GetMember1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Department2": {
      "main": [
        [
          {
            "node": "GetMember2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "CompanyName",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GetMember": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GetMember1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "GetMember2": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "CompanyName": {
      "main": [
        [
          {
            "node": "Count Company",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Count Company": {
      "main": [
        [],
        [
          {
            "node": "Remove employee leave1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Remove employee leave2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove employee leave1": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company2": {
      "main": [
        [
          {
            "node": "get Timelog19",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog20",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company3": {
      "main": [
        [
          {
            "node": "get Timelog16",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog17",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove employee leave2": {
      "main": [
        [
          {
            "node": "Switch Company8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company8": {
      "main": [
        [
          {
            "node": "get Timelog",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog13",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [],
        [
          {
            "node": "Switch Company2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch Company3",
            "type": "main",
            "index": 0
          }
        ],
        [],
        [],
        [
          {
            "node": "Switch Company6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point22": {
      "main": [
        [
          {
            "node": "If63",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found20": {
      "main": [
        [
          {
            "node": "Cloodo Point22",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point34": {
      "main": [
        [
          {
            "node": "IF not found20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If63": {
      "main": [
        [
          {
            "node": "Stop and Error23",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If74": {
      "main": [
        [
          {
            "node": "Check Leave halfday2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d53": {
      "main": [
        [
          {
            "node": "If74",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog10": {
      "main": [
        [
          {
            "node": "Check create 7d53",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d54": {
      "main": [
        [
          {
            "node": "If75",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog11": {
      "main": [
        [
          {
            "node": "Check create 7d54",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d55": {
      "main": [
        [
          {
            "node": "If76",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog12": {
      "main": [
        [
          {
            "node": "Check create 7d55",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code5": {
      "main": [
        [
          {
            "node": "If77",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If77": {
      "main": [
        [
          {
            "node": "Cloodo Point35",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point23": {
      "main": [
        [
          {
            "node": "If78",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found21": {
      "main": [
        [
          {
            "node": "Cloodo Point23",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point35": {
      "main": [
        [
          {
            "node": "IF not found21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If78": {
      "main": [
        [
          {
            "node": "Stop and Error24",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code6": {
      "main": [
        [
          {
            "node": "If79",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If79": {
      "main": [
        [
          {
            "node": "Cloodo Point36",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point26": {
      "main": [
        [
          {
            "node": "If80",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found22": {
      "main": [
        [
          {
            "node": "Cloodo Point26",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point36": {
      "main": [
        [
          {
            "node": "IF not found22",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If80": {
      "main": [
        [
          {
            "node": "Stop and Error25",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge11": {
      "main": [
        [
          {
            "node": "Cloodo Point34",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company6": {
      "main": [
        [
          {
            "node": "get Timelog10",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog11",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Timelog12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If75": {
      "main": [
        [
          {
            "node": "Check Leave halfday3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If89": {
      "main": [
        [
          {
            "node": "Check Leave halfday4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d59": {
      "main": [
        [
          {
            "node": "If89",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog16": {
      "main": [
        [
          {
            "node": "Check create 7d59",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If90": {
      "main": [
        [
          {
            "node": "Check Leave halfday5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d60": {
      "main": [
        [
          {
            "node": "If90",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog17": {
      "main": [
        [
          {
            "node": "Check create 7d60",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d61": {
      "main": [
        [
          {
            "node": "If91",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog18": {
      "main": [
        [
          {
            "node": "Check create 7d61",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If97": {
      "main": [
        [
          {
            "node": "Check Leave halfday6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d62": {
      "main": [
        [
          {
            "node": "If97",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog19": {
      "main": [
        [
          {
            "node": "Check create 7d62",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If98": {
      "main": [
        [
          {
            "node": "Check Leave halfday7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d63": {
      "main": [
        [
          {
            "node": "If98",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog20": {
      "main": [
        [
          {
            "node": "Check create 7d63",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d64": {
      "main": [
        [
          {
            "node": "If99",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog21": {
      "main": [
        [
          {
            "node": "Check create 7d64",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single2": {
      "main": [
        [
          {
            "node": "If6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single3": {
      "main": [
        [
          {
            "node": "If7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If7": {
      "main": [
        [
          {
            "node": "Merge11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If6": {
      "main": [
        [
          {
            "node": "Merge11",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Check Leave halfday2": {
      "main": [
        [
          {
            "node": "If8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If8": {
      "main": [
        [
          {
            "node": "Code6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "If81",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If81": {
      "main": [
        [
          {
            "node": "Cloodo Point37",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point27": {
      "main": [
        [
          {
            "node": "If82",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found23": {
      "main": [
        [
          {
            "node": "Cloodo Point27",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point37": {
      "main": [
        [
          {
            "node": "IF not found23",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If82": {
      "main": [
        [
          {
            "node": "Stop and Error26",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave halfday3": {
      "main": [
        [
          {
            "node": "If9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If9": {
      "main": [
        [
          {
            "node": "Code5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code7": {
      "main": [
        [
          {
            "node": "If83",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If83": {
      "main": [
        [
          {
            "node": "Cloodo Point38",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point28": {
      "main": [
        [
          {
            "node": "If84",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found24": {
      "main": [
        [
          {
            "node": "Cloodo Point28",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point38": {
      "main": [
        [
          {
            "node": "IF not found24",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If84": {
      "main": [
        [
          {
            "node": "Stop and Error27",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point29": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found": {
      "main": [
        [
          {
            "node": "Cloodo Point29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point39": {
      "main": [
        [
          {
            "node": "IF not found",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Stop and Error28",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code8": {
      "main": [
        [
          {
            "node": "If85",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If85": {
      "main": [
        [
          {
            "node": "Cloodo Point40",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point30": {
      "main": [
        [
          {
            "node": "If86",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found25": {
      "main": [
        [
          {
            "node": "Cloodo Point30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point40": {
      "main": [
        [
          {
            "node": "IF not found25",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If86": {
      "main": [
        [
          {
            "node": "Stop and Error29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code9": {
      "main": [
        [
          {
            "node": "If87",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If87": {
      "main": [
        [
          {
            "node": "Cloodo Point41",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point31": {
      "main": [
        [
          {
            "node": "If88",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found26": {
      "main": [
        [
          {
            "node": "Cloodo Point31",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point41": {
      "main": [
        [
          {
            "node": "IF not found26",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If88": {
      "main": [
        [
          {
            "node": "Stop and Error30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge12": {
      "main": [
        [
          {
            "node": "Cloodo Point39",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single4": {
      "main": [
        [
          {
            "node": "If10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single5": {
      "main": [
        [
          {
            "node": "If11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If10": {
      "main": [
        [
          {
            "node": "Merge12",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If11": {
      "main": [
        [
          {
            "node": "Merge12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave halfday4": {
      "main": [
        [
          {
            "node": "If12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If12": {
      "main": [
        [
          {
            "node": "Code9",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "If92",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If92": {
      "main": [
        [
          {
            "node": "Cloodo Point42",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point32": {
      "main": [
        [
          {
            "node": "If93",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found27": {
      "main": [
        [
          {
            "node": "Cloodo Point32",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point42": {
      "main": [
        [
          {
            "node": "IF not found27",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If93": {
      "main": [
        [
          {
            "node": "Stop and Error31",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave halfday5": {
      "main": [
        [
          {
            "node": "If13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If13": {
      "main": [
        [
          {
            "node": "Code8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code10": {
      "main": [
        [
          {
            "node": "If94",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If94": {
      "main": [
        [
          {
            "node": "Cloodo Point43",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point33": {
      "main": [
        [
          {
            "node": "If95",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found31": {
      "main": [
        [
          {
            "node": "Cloodo Point33",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point43": {
      "main": [
        [
          {
            "node": "IF not found31",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If95": {
      "main": [
        [
          {
            "node": "Stop and Error35",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point44": {
      "main": [
        [
          {
            "node": "If5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found1": {
      "main": [
        [
          {
            "node": "Cloodo Point44",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point45": {
      "main": [
        [
          {
            "node": "IF not found1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If5": {
      "main": [
        [
          {
            "node": "Stop and Error32",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code11": {
      "main": [
        [
          {
            "node": "If96",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If96": {
      "main": [
        [
          {
            "node": "Cloodo Point47",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point46": {
      "main": [
        [
          {
            "node": "If100",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found28": {
      "main": [
        [
          {
            "node": "Cloodo Point46",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point47": {
      "main": [
        [
          {
            "node": "IF not found28",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If100": {
      "main": [
        [
          {
            "node": "Stop and Error33",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code12": {
      "main": [
        [
          {
            "node": "If101",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If101": {
      "main": [
        [
          {
            "node": "Cloodo Point49",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point48": {
      "main": [
        [
          {
            "node": "If102",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found29": {
      "main": [
        [
          {
            "node": "Cloodo Point48",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point49": {
      "main": [
        [
          {
            "node": "IF not found29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If102": {
      "main": [
        [
          {
            "node": "Stop and Error34",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge13": {
      "main": [
        [
          {
            "node": "Cloodo Point45",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single6": {
      "main": [
        [
          {
            "node": "If14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single7": {
      "main": [
        [
          {
            "node": "If15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If14": {
      "main": [
        [
          {
            "node": "Merge13",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If15": {
      "main": [
        [
          {
            "node": "Merge13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave halfday6": {
      "main": [
        [
          {
            "node": "If16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If16": {
      "main": [
        [
          {
            "node": "Code12",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "If103",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If103": {
      "main": [
        [
          {
            "node": "Cloodo Point51",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point50": {
      "main": [
        [
          {
            "node": "If104",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found30": {
      "main": [
        [
          {
            "node": "Cloodo Point50",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point51": {
      "main": [
        [
          {
            "node": "IF not found30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If104": {
      "main": [
        [
          {
            "node": "Stop and Error36",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave halfday7": {
      "main": [
        [
          {
            "node": "If17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If17": {
      "main": [
        [
          {
            "node": "Code11",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code13": {
      "main": [
        [
          {
            "node": "If105",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If105": {
      "main": [
        [
          {
            "node": "Cloodo Point53",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point52": {
      "main": [
        [
          {
            "node": "If106",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found32": {
      "main": [
        [
          {
            "node": "Cloodo Point52",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point53": {
      "main": [
        [
          {
            "node": "IF not found32",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If106": {
      "main": [
        [
          {
            "node": "Stop and Error37",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point": {
      "main": [
        [
          {
            "node": "If64",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found33": {
      "main": [
        [
          {
            "node": "Cloodo Point",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point54": {
      "main": [
        [
          {
            "node": "IF not found33",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If64": {
      "main": [
        [
          {
            "node": "Stop and Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If107": {
      "main": [
        [
          {
            "node": "Check Leave halfday",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d": {
      "main": [
        [
          {
            "node": "If107",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog": {
      "main": [
        [
          {
            "node": "Check create 7d",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If108": {
      "main": [
        [
          {
            "node": "Check Leave halfday8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Leave Single",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d56": {
      "main": [
        [
          {
            "node": "If108",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog13": {
      "main": [
        [
          {
            "node": "Check create 7d56",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d57": {
      "main": [
        [
          {
            "node": "If109",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Timelog14": {
      "main": [
        [
          {
            "node": "Check create 7d57",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code14": {
      "main": [
        [
          {
            "node": "If110",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If110": {
      "main": [
        [
          {
            "node": "Cloodo Point55",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point24": {
      "main": [
        [
          {
            "node": "If111",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found34": {
      "main": [
        [
          {
            "node": "Cloodo Point24",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point55": {
      "main": [
        [
          {
            "node": "IF not found34",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If111": {
      "main": [
        [
          {
            "node": "Stop and Error38",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code15": {
      "main": [
        [
          {
            "node": "If112",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If112": {
      "main": [
        [
          {
            "node": "Cloodo Point57",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point56": {
      "main": [
        [
          {
            "node": "If113",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found35": {
      "main": [
        [
          {
            "node": "Cloodo Point56",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point57": {
      "main": [
        [
          {
            "node": "IF not found35",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If113": {
      "main": [
        [
          {
            "node": "Stop and Error39",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge14": {
      "main": [
        [
          {
            "node": "Cloodo Point54",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single": {
      "main": [
        [
          {
            "node": "If18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave Single8": {
      "main": [
        [
          {
            "node": "If19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If18": {
      "main": [
        [
          {
            "node": "Merge14",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If19": {
      "main": [
        [
          {
            "node": "Merge14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave halfday": {
      "main": [
        [
          {
            "node": "If20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If20": {
      "main": [
        [
          {
            "node": "Code15",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "If114",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If114": {
      "main": [
        [
          {
            "node": "Cloodo Point59",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point58": {
      "main": [
        [
          {
            "node": "If115",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found36": {
      "main": [
        [
          {
            "node": "Cloodo Point58",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point59": {
      "main": [
        [
          {
            "node": "IF not found36",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If115": {
      "main": [
        [
          {
            "node": "Stop and Error40",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Leave halfday8": {
      "main": [
        [
          {
            "node": "If21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If21": {
      "main": [
        [
          {
            "node": "Code14",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code16": {
      "main": [
        [
          {
            "node": "If116",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If116": {
      "main": [
        [
          {
            "node": "Cloodo Point61",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point60": {
      "main": [
        [
          {
            "node": "If117",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found37": {
      "main": [
        [
          {
            "node": "Cloodo Point60",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point61": {
      "main": [
        [
          {
            "node": "IF not found37",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If117": {
      "main": [
        [
          {
            "node": "Stop and Error41",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get All Department",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get All Department1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get All Department2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "Get All Department",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get All Department1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get All Department2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "fddb27f4-233c-4711-9202-3d17391b4e78",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "3909475c03ca6926b6e6edc6a6f06c1feb448ce7ac700d69b17002085d9011f8"
  },
  "id": "IKq8FoWPYuNwjiTM",
  "tags": []
}