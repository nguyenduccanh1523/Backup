{
  "name": "QCM 86.1 Minus Create Milestone",
  "nodes": [
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/departments",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "limit",
              "value": "25"
            }
          ]
        },
        "options": {}
      },
      "id": "4e774340-4062-4ad4-bfec-62ad2bd0862a",
      "name": "Get All Department",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1600,
        2220
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/departments",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "limit",
              "value": "25"
            }
          ]
        },
        "options": {}
      },
      "id": "b5a921c6-6043-4df7-9257-3d9137a4d1fd",
      "name": "Get All Department1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1600,
        2420
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/departments",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "limit",
              "value": "25"
            }
          ]
        },
        "options": {}
      },
      "id": "e51e1559-6390-4f90-852b-55b90240b739",
      "name": "Get All Department2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1620,
        2640
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "numberInputs": 3
      },
      "id": "67bcfb2f-0e4f-41ab-ba2e-085c352339ab",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -1100,
        2420
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "7782dc1c-8889-4226-b761-1979f5994958",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -880,
        2420
      ]
    },
    {
      "parameters": {
        "jsCode": "const allDepartment = $input.all()[0]?.json?.data[2]\nconst member = allDepartment?.member\n\n\nreturn{\n  name: allDepartment?.name,\n  member: member\n}\n"
      },
      "id": "acd9e3dc-9178-4f00-9ebc-60211e2f39d9",
      "name": "GetMember",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1380,
        2220
      ]
    },
    {
      "parameters": {
        "jsCode": "const allDepartment = $input.all()[0]?.json?.data[2]\nconst member = allDepartment?.member\n\n\nreturn{\n  name: allDepartment?.name,\n  member: member\n}\n"
      },
      "id": "5c0552de-ee32-46db-aac6-c8c03e152d20",
      "name": "GetMember1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1380,
        2420
      ]
    },
    {
      "parameters": {
        "jsCode": "const allDepartment = $input.all()[0]?.json?.data[2]\nconst member = allDepartment?.member\n\n\nreturn{\n  name: allDepartment?.name,\n  member: member\n}\n"
      },
      "id": "6126b526-cff9-4d47-8381-ac9f49a71ef2",
      "name": "GetMember2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1380,
        2640
      ]
    },
    {
      "parameters": {
        "jsCode": "let listMembers = []\n\n// Lấy các thành viên của ba công ty\nconst MemberCms = $input.all()[0]?.json?.data[0]?.member;\nconst MemberPrintCart = $input.all()[0]?.json?.data[1]?.member;\nconst MemberCloodo = $input.all()[0]?.json?.data[2]?.member;\n\n// Thêm tên công ty vào các thành viên\nMemberCms.forEach(member => {\n  member.companyName = 'CmsMart';// Tên công ty cho MemberCms\n  listMembers.push(member)\n});\n\nMemberPrintCart.forEach(member => {\n  member.companyName = 'PrintCart';  // Tên công ty cho MemberPrintCart\n  listMembers.push(member)\n});\n\nMemberCloodo.forEach(member => {\n  member.companyName = 'Cloodo';  // Tên công ty cho MemberCloodo\n  listMembers.push(member)\n});\n\n// Đếm số lượng công ty cho mỗi người theo 'name'\nconst nameCountMap = {};\n\n// Duyệt qua danh sách các thành viên và đếm số lượng công ty theo tên\nlistMembers.forEach(member => {\n  const name = member.name;\n\n  // Nếu tên chưa có trong map, khởi tạo giá trị với 0\n  if (!nameCountMap[name]) {\n    nameCountMap[name] = new Set();  // Sử dụng Set để đảm bảo mỗi công ty chỉ được đếm 1 lần\n  }\n\n  // Thêm tên công ty vào Set để đếm duy nhất\n  nameCountMap[name].add(member.companyName);\n});\n\n// Thêm số lượng công ty vào từng thành viên\nlistMembers.forEach(member => {\n  const name = member.name;\n  member.countCompany = nameCountMap[name].size; // Số lượng công ty mà thành viên tham gia\n});\n\n// Trả về các thành viên đã được cập nhật\nreturn listMembers;"
      },
      "id": "14fc5139-6e9b-44a4-9e6a-5550b0d6d111",
      "name": "CompanyName",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -700,
        2420
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "5125e6c7-e349-4b04-ab5f-e082825799b7",
      "name": "Switch Company",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        380,
        1160
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a395e6cf-a8f8-4cf2-a613-9edd97cf1099",
      "name": "get Milestone",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        600,
        1220
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "emplooyee Cms"
      },
      "id": "9ed2b87d-7eb0-4c13-af4f-b368aadef776",
      "name": "Stop and Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        460,
        840
      ]
    },
    {
      "parameters": {
        "errorMessage": "emplooyee Printcart"
      },
      "id": "8f3a7bc7-8229-4a51-bfb6-4e11d7a4928b",
      "name": "Stop and Error1",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        580,
        1000
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.countCompany }}",
                    "rightValue": 1,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "1"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ecaeec34-6fa8-41da-aeb6-827e62de92b3",
                    "leftValue": "={{ $json.countCompany }}",
                    "rightValue": 2,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "2"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8d73594f-9a0b-4b50-b347-ac7eb50f0f13",
                    "leftValue": "={{ $json.countCompany }}",
                    "rightValue": 3,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "3"
            }
          ]
        },
        "options": {}
      },
      "id": "4065fa12-881b-4bdd-899b-fbf9ec101e6e",
      "name": "Count Company",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -460,
        2420
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6e41004a-24bd-4475-9837-4c1b5e68d983",
              "leftValue": "={{ $json.name }}",
              "rightValue": "Vu Van Tuyen",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "a781e98a-3884-48fc-8383-6c03e33c4fc4",
              "leftValue": "={{ $json.name }}",
              "rightValue": "Nguyen Thanh Tung",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "83bde001-9b91-4bbc-965a-1b013442bf22",
      "name": "Remove employee leave",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -160,
        1940
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6e41004a-24bd-4475-9837-4c1b5e68d983",
              "leftValue": "={{ $json.name }}",
              "rightValue": "Nguyen Duc Phat",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "316b304c-3113-43e6-abf1-687d70687f2f",
      "name": "Remove employee leave1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        960,
        2420
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b7a23ef3-ca11-4d57-afaf-5827f29c46a8",
      "name": "get Milestone1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3640,
        660
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "69eb3282-6370-4b52-b2de-327e0d87b4b9",
      "name": "get Milestone2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3640,
        480
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "8eca4340-21b4-4d05-899f-6d960fd26b6c",
      "name": "get Milestone3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3640,
        320
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "a3409e0d-e484-42b1-a0ec-3f6eb9fb259e",
      "name": "Switch Company1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3360,
        500
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a87e9430-545b-425d-a68c-7f884566b988",
      "name": "get Milestone4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3620,
        1200
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "37114167-0fb9-4905-b758-3d5f178b93a3",
      "name": "get Milestone5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3620,
        1020
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "3e9ce865-04b8-497a-930c-1e9c5b8b1132",
      "name": "get Milestone6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3620,
        860
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "a251d21d-963b-4717-8890-5c29b4c9bdb7",
      "name": "Switch Company2",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3320,
        1020
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a0993422-6035-4527-bdff-ed279dde0574",
      "name": "get Milestone7",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3620,
        1800
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a560f56d-70f5-4dd6-adba-9dea1cfe4177",
      "name": "get Milestone8",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3620,
        1620
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "1069a0a6-42a0-4ced-8a18-95683dcec3dc",
      "name": "get Milestone9",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3620,
        1460
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "5957a88a-8b4d-4117-bcae-f1a1edfb10b9",
      "name": "Switch Company3",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3320,
        1620
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "8a873401-d198-4b02-b126-d186765a02ba",
      "name": "get Milestone10",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3640,
        2400
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "cb3f045c-1a0e-449f-a9ce-611b29660148",
      "name": "get Milestone11",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3640,
        2220
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "687c2bab-cf6e-48d4-a426-536862ca6766",
      "name": "get Milestone12",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3640,
        2060
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "97e08a9c-3515-4d82-9cbf-8450528d59ca",
      "name": "Switch Company4",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3340,
        2220
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "1171c84e-ff9c-4aeb-90ea-b6e3e1f0e699",
      "name": "get Milestone13",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3600,
        3020
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "88bd0440-78c2-437a-93cb-dcf3f884ac2b",
      "name": "get Milestone14",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3600,
        2840
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "e7b43536-6059-45d0-b579-15cbff9110d9",
      "name": "get Milestone15",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3600,
        2680
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "32ada976-2608-45fc-a955-83e3bbe935da",
      "name": "Switch Company5",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3300,
        2840
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "68c783ec-5bdf-458a-87be-8aa0afa27ed4",
      "name": "get Milestone16",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3640,
        3600
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "073895f3-6d27-4911-bd67-e202b0d8a880",
      "name": "get Milestone17",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3640,
        3420
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "34d34281-e316-4680-a744-6f29a2dc7dfa",
      "name": "get Milestone18",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3640,
        3260
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "901a6a80-7e0d-4d70-897c-a4d6163232a1",
      "name": "Switch Company6",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3340,
        3420
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b600c50d-47a8-4032-b28b-05e139990024",
      "name": "get Milestone19",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3700,
        4180
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b5dfe36c-4b05-4fe0-9bc4-34785eb57e71",
      "name": "get Milestone20",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3700,
        4000
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "1d90adb8-8e24-4890-9f6a-d577f35f2ea7",
      "name": "get Milestone21",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3700,
        3840
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "1b946837-f41c-4371-824c-6b18fb911456",
      "name": "Switch Company7",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3400,
        4000
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "0c746217-be48-4c34-b7bd-1b64e501e12e",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        4540,
        480
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "ca6a36b1-2173-4a63-903d-6230c5ba80ae",
      "name": "Merge2",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        4540,
        940
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "e665cb79-31ff-4582-97c2-f4fd9251a083",
      "name": "Merge3",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        4560,
        1520
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "876c5cc2-f8a6-4827-966a-e6ac91f641d5",
      "name": "Merge4",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        4560,
        2220
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "c1fc1545-10eb-4d62-a287-730bb2a306cc",
      "name": "Merge5",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        4580,
        2760
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "4638308e-1a17-4f22-ad08-5f7f4d893ec7",
      "name": "Merge6",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        4580,
        3340
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "b7df6396-7a8d-4b0f-808f-0a146b71cf20",
      "name": "Merge7",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        4580,
        3980
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6e41004a-24bd-4475-9837-4c1b5e68d983",
              "leftValue": "={{ $json.name }}",
              "rightValue": "Vu Duy The",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "90d76086-f108-426e-8446-821b24274328",
      "name": "Remove employee leave2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        0,
        3320
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "6315147f-d59b-4f32-81ab-e59f80f15ed9",
      "name": "get Milestone22",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        740,
        3520
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "6e312746-ff4f-4c8c-8af6-f7a2f4d1822a",
      "name": "get Milestone23",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        740,
        3340
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account "
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "597b47b1-406e-4397-8e3e-d7fd2943bb16",
      "name": "get Milestone24",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        740,
        3180
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('Merge8').item.json.data[0].agent.id }}",
        "points": 3,
        "note": "=QCM 86: {{ $('Merge8').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "8e6474a4-6bd7-412f-b97d-bc7f61f2b383",
      "name": "Cloodo Point",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        2260,
        3340
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "c5734e6a-b07d-4ff0-9df1-acbdce083269",
      "name": "IF not found5",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2040,
        3360
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 86: {{ $('Merge8').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "a10f1506-734e-4865-8311-fa66113928f6",
      "name": "Cloodo Point16",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        1840,
        3360
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "b9f6e3b4-97e6-428d-8013-c78f8aa6afd9",
      "name": "Switch Company8",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        440,
        3320
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "numberInputs": 3
      },
      "id": "b459cf93-4fcf-41d3-9f1b-3c0a4f9fe059",
      "name": "Merge8",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1580,
        3340
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('Merge1').item.json.data[0].agent.id }}",
        "points": 3,
        "note": "=QCM 86: {{ $('Merge1').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "1b4aedfc-c51b-4b0f-93f1-73e098844580",
      "name": "Cloodo Point1",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        5300,
        460
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "c79d7c68-09c6-4982-a60b-a0ef821e9d83",
      "name": "IF not found",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        5060,
        480
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 86: {{ $('Merge1').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "14787922-a268-4994-bd30-700b200bfc3a",
      "name": "Cloodo Point17",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        4860,
        480
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('Merge2').item.json.data[0].agent.id }}",
        "points": 3,
        "note": "=QCM 86: {{ $('Merge2').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "9af93511-eafc-432e-80fb-289ced3eb3d1",
      "name": "Cloodo Point2",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        5340,
        900
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "ce915a14-faf9-469d-848b-cf588d95b15b",
      "name": "IF not found6",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        5100,
        920
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 86: {{ $('Merge2').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "a51a35ea-cb97-4fe4-96b8-73a112b80714",
      "name": "Cloodo Point18",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        4900,
        920
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('Merge3').item.json.data[0].agent.id }}",
        "points": 3,
        "note": "=QCM 86: {{ $('Merge3').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "bd5b119b-3fec-4a2f-ae2c-778b20ab8510",
      "name": "Cloodo Point3",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        5420,
        1500
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "161b5bf2-f76f-4f2b-8579-a6bce3473d32",
      "name": "IF not found7",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        5140,
        1500
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 86: {{ $('Merge3').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "5aa88e99-db2a-48b5-95e8-4db882431e86",
      "name": "Cloodo Point19",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        4940,
        1500
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('Merge4').item.json.data[0].agent.id }}",
        "points": 3,
        "note": "=QCM 86: {{ $('Merge4').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "4cb0f064-033f-46ac-bd22-996da6d1272c",
      "name": "Cloodo Point4",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        5260,
        2200
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "7034ebeb-4618-4821-9f26-8170c51fa083",
      "name": "IF not found8",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        5020,
        2220
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 86: {{ $('Merge4').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "99e03b68-61bd-430c-90af-1c00637e1ba8",
      "name": "Cloodo Point20",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        4820,
        2220
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('Merge5').item.json.data[0].agent.id }}",
        "points": 3,
        "note": "=QCM 86: {{ $('Merge5').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "775e3756-23e5-401b-9949-806d15b51cdd",
      "name": "Cloodo Point5",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        5320,
        2720
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "7ca055ac-312d-4696-b52e-21f436fd9dc2",
      "name": "IF not found9",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        5080,
        2740
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 86: {{ $('Merge5').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "17119058-941e-4912-8b6c-d7a680fb0f61",
      "name": "Cloodo Point21",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        4880,
        2740
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('Merge6').item.json.data[0].agent.id }}",
        "points": 3,
        "note": "=QCM 86: {{ $('Merge6').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "61b108da-aa8e-4d21-9157-ea0810e93cad",
      "name": "Cloodo Point6",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        5360,
        3320
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "77c44ef0-9203-4b43-b0c4-995b57563dac",
      "name": "IF not found10",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        5120,
        3340
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 86: {{ $('Merge6').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "c4849ce0-0d27-417a-bd19-28da87259756",
      "name": "Cloodo Point22",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        4920,
        3340
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('Merge7').item.json.data[0].agent.id }}",
        "points": 3,
        "note": "=QCM 86: {{ $('Merge7').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "befc805c-87b5-4b4e-ae9b-54554709546b",
      "name": "Cloodo Point7",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        5380,
        3920
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "6db36404-8b41-4885-8b45-a2a3108017e1",
      "name": "IF not found11",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        5140,
        3940
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 86: {{ $('Merge7').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "eccf4fb9-b9a2-4296-9b41-75b1da597ff6",
      "name": "Cloodo Point23",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        4940,
        3940
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "439c088a-081c-4ad4-ab61-692de011799e",
      "name": "Stop and Error5",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        5980,
        440
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "4e5ee41b-f10f-404d-a22b-2627f601f87e",
      "name": "If25",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5680,
        460
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "dce24213-3b37-4866-9164-4690553cebea",
      "name": "If26",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5680,
        920
      ]
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "04de786d-72f9-4962-bb2c-a53f942ed183",
      "name": "Stop and Error6",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        5980,
        900
      ]
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "5830945f-b034-4310-aeba-45aea5e07884",
      "name": "Stop and Error7",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        5960,
        1480
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ff393f73-468b-416e-a8dd-2c7a515714a9",
      "name": "If27",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5680,
        1500
      ]
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "c7dd1d50-da93-4e56-b0fa-24ea6cb87e70",
      "name": "Stop and Error8",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        5920,
        2180
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "78caee5e-26c4-44b9-b5fd-013a6b0896af",
      "name": "If28",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5620,
        2200
      ]
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "e233ad28-4f95-45d7-9b1f-33d88ec05796",
      "name": "Stop and Error9",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        5940,
        2720
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d07133ca-4e15-4980-819f-1d48b6dbcc2b",
      "name": "If29",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5640,
        2740
      ]
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "f6fc2685-ff97-46c6-b3c5-aedc6ed79bd9",
      "name": "Stop and Error10",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        5940,
        3300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a2e5c565-f415-48c2-99eb-40fe851bc49f",
      "name": "If30",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5640,
        3320
      ]
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "0ea396e1-7fe4-467b-9228-1089edbf692e",
      "name": "Stop and Error11",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        5980,
        3900
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "157c8d43-4406-4dbd-8e81-22ebfbc95aec",
      "name": "If31",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5680,
        3920
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If1').item.json.data[0].agent.id }}",
        "points": 3,
        "note": "=QCM 86: {{ $('If1').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "7ae4698c-1ee1-42f9-8ef2-8465d8609121",
      "name": "Cloodo Point8",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        1680,
        1180
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "2bbb738d-6dd9-4218-a800-31313d0443f9",
      "name": "IF not found1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1440,
        1200
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 86: {{ $('If1').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "62917574-902e-4dd8-b292-62c715619f41",
      "name": "Cloodo Point24",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        1240,
        1200
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "b94cbb6c-19f4-431a-aa69-aba351595458",
      "name": "Stop and Error12",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        2120,
        1160
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "59b1089a-8447-474e-8318-b58ebd6d549d",
      "name": "If32",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1840,
        1180
      ]
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "7eac6473-6dc1-49bd-bfb6-2459deb514bb",
      "name": "Stop and Error13",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        2740,
        3320
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ac7b82b7-e6fd-46d5-bbc2-8becd76a910c",
      "name": "If33",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2440,
        3340
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Vu Van Tuyen",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Vu Van Tuyen"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "adbce1c4-d26c-475c-94fe-bc372e7c2f4d",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Nguyen Thanh Tung",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Nguyen Thanh Tung"
            }
          ]
        },
        "options": {}
      },
      "id": "1a710787-f478-443d-a92b-f18cbc9d3d3a",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        160,
        1500
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "e23d3ce9-05ab-4b06-a651-53f486030731",
      "name": "Switch Company9",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        360,
        1780
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "4b6d9646-e47e-48ef-9073-33454d33b42b",
      "name": "get Milestone25",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        580,
        1840
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "8043474f-0cb1-4457-b689-0529a41dc812",
      "name": "If34",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        960,
        1840
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "a071ef4c-ca6c-4ad2-8bfa-5567078b9095",
      "name": "Check create 7d25",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        760,
        1840
      ]
    },
    {
      "parameters": {
        "errorMessage": "emplooyee Cms"
      },
      "id": "4d16454d-c9c3-4a53-927b-dc8d4a85f892",
      "name": "Stop and Error2",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        440,
        1460
      ]
    },
    {
      "parameters": {
        "errorMessage": "emplooyee Printcart"
      },
      "id": "bc99e4df-a8f3-4d56-a698-be50fff4c69d",
      "name": "Stop and Error3",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        560,
        1620
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If34').item.json.data[0].agent.id }}",
        "points": 3,
        "note": "=QCM 86: {{ $('If34').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "673a92ed-58b0-4fed-b909-704a1bd6ba62",
      "name": "Cloodo Point9",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        1660,
        1800
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "b9c33908-4cdf-41a8-83bc-b10820e3bd4c",
      "name": "IF not found2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1420,
        1820
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 86: {{ $('If34').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "389ee70d-d7fb-4f9d-94b6-e05d444bd1d7",
      "name": "Cloodo Point25",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        1220,
        1820
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "b7d6c998-189a-46e3-ab2d-34609eaeccb2",
      "name": "Stop and Error14",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        2120,
        1780
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c4309d43-9cbb-4372-84bd-b4e6e943088d",
      "name": "If35",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1820,
        1800
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "d19fb5f6-7397-4fa3-8a5f-124a98021f9e",
      "name": "If36",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1020,
        1220
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "ab28200c-2b8f-4443-83bf-6fcb2b54857d",
      "name": "Check create 7d",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        820,
        1220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "4196843f-cd09-47fc-934c-3a549b67becb",
      "name": "If37",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4080,
        1460
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "f77b5418-48c4-4b4d-8a09-3b5ea6b8da64",
      "name": "Check create 7d26",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3880,
        1460
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "6e1ee1f8-f105-413b-a131-21d7b50a96d7",
      "name": "If38",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4080,
        1640
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "4c301671-709c-4e7d-8f90-461fd09ce619",
      "name": "Check create 7d27",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3880,
        1640
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "ed0d7040-d902-4a3f-be43-ea07adc58bc5",
      "name": "If39",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4080,
        1820
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "d96019ea-0a90-4bb7-b195-b412442a858a",
      "name": "Check create 7d28",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3880,
        1820
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "9c38c79d-4803-4779-bb32-107b34ebcea5",
      "name": "If40",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4160,
        3840
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "fd9ecaba-90a9-45b1-8d67-cfcab8f49734",
      "name": "Check create 7d29",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3960,
        3840
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "0f2def87-3f6b-4574-bf96-f3e244b8273c",
      "name": "If41",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4160,
        4020
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "0138cd87-1f59-4574-9099-b4dee97e4201",
      "name": "Check create 7d30",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3960,
        4020
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "dbabd8f5-a2cd-41db-874f-e225ece159e9",
      "name": "If42",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4160,
        4200
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "29ad8c61-0e17-40fd-99f2-f85bb80717c2",
      "name": "Check create 7d31",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3960,
        4200
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Vu Van Minh",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Vu Van Minh"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "dbe7be1f-5b60-42df-bca3-3dd1ab846db7",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Vo Tuan Vu",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Vo Tuan Vu"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "3a1ebf8a-3f5c-44e3-b8eb-22452c6d8a32",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Nguyen Ngoc Huy",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Nguyen Ngoc Huy"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "602b04f8-5e81-4b3d-8537-8435fd5ca9f0",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Pham Ngoc Huy",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Pham Ngoc Huy"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8f2d3c75-6e15-44dd-955f-2462cea6fcf8",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Do Hoang Nam",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Do Hoang Nam"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5ddab4fb-4552-442c-b985-ac486038e5f0",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Hoang Anh Dung",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Hoang Anh Dung"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e4ebcd21-3054-433a-a04e-532ba93b1e19",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Nguyen Duc Canh",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Nguyen Duc Canh"
            }
          ]
        },
        "options": {}
      },
      "id": "b095ed39-6648-47e0-a4d3-6af3c0a5bf47",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2260,
        2380
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "afa7e538-b416-40b5-8fb2-52e04ba0ab5f",
      "name": "If43",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4120,
        3240
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "b353ce7f-2db6-47ba-87a3-0659ccde8fda",
      "name": "Check create 7d32",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3860,
        3240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "56b3fed4-0dff-4e8a-a6e7-6e7eb7bb7fca",
      "name": "If44",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4100,
        3420
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "a7eeb138-3fb7-4dcd-a49a-33ef971fcaca",
      "name": "Check create 7d33",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3900,
        3420
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "846f7228-c4be-420e-b4ed-c1ee171a2645",
      "name": "If45",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4100,
        3600
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "02dc96ad-c75c-42f9-8602-c03eeed971f6",
      "name": "Check create 7d34",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3900,
        3600
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "19f65680-40f6-4e6f-a1fd-d88f0441a1fd",
      "name": "If46",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4100,
        2680
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "964093ad-5c14-4774-9ca9-cefb8400c630",
      "name": "Check create 7d35",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3880,
        2680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "2e4f24f3-a919-441c-9af5-ee6dd0b2276c",
      "name": "If47",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4080,
        2860
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "782da27c-3dd8-4abd-b595-ed564f10110c",
      "name": "Check create 7d36",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3880,
        2860
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "99625972-f745-4e2d-99bf-105775dace9e",
      "name": "If48",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4080,
        3040
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "42a18683-c709-4039-bc04-a41f3749785b",
      "name": "Check create 7d37",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3880,
        3040
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "1e00ce0b-1d2f-459e-8a7a-d00ddb205d25",
      "name": "If49",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4100,
        2060
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "30b679be-ef1b-4a50-95b0-6d8153d0e2da",
      "name": "Check create 7d38",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3900,
        2060
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "648580cf-ca07-40bd-a31a-f35f5dbf3eae",
      "name": "If50",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4100,
        2220
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "874b8562-d853-483d-86cf-f06e18d921e8",
      "name": "Check create 7d39",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3880,
        2220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "d8204e82-7866-4496-ad02-1b02145ea4be",
      "name": "If51",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4120,
        2400
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "d9630a6d-7a99-4f8f-893b-4f36f8d2999c",
      "name": "Check create 7d40",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3900,
        2400
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "a0b871a2-76b4-4bec-8a57-db767f73ad21",
      "name": "If52",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4120,
        860
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "7917529c-3dcd-4315-8145-914e7b2ea087",
      "name": "Check create 7d41",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3900,
        860
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "59fa8bfb-664a-4521-9839-ff2e8f6b40f0",
      "name": "If53",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4100,
        1040
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "d5b1cd52-37cc-4c52-86d0-f7e337f19cfc",
      "name": "Check create 7d42",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3900,
        1040
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "aae3520f-8755-44bc-a476-ae74fd83ddc3",
      "name": "If54",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4100,
        1220
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "5a162346-35fd-489f-90df-765a41307e64",
      "name": "Check create 7d43",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3900,
        1220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "3a4d2ea1-97bf-4641-b06f-a7c8cab896c1",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4160,
        320
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "720f8b67-8807-4aca-a878-fdd4515f163f",
      "name": "Check create 7d44",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3940,
        320
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "4e4b144b-8b51-4609-8524-531e2ff21323",
      "name": "If55",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4140,
        500
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "9e8e43e4-f19f-42ac-8eb9-2dc2341dcc1a",
      "name": "Check create 7d45",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3940,
        500
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "3535cf03-dcb5-40bc-a738-3d29a28b6ec7",
      "name": "If56",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4140,
        680
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "e100b27e-6d50-47ef-99d0-2866a1b232b7",
      "name": "Check create 7d46",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3940,
        680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "efeffceb-4a29-43b2-b6ac-4c8f435df44d",
      "name": "If57",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1240,
        3180
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "146fdfb3-1e06-47a2-9e95-4aebf8861056",
      "name": "Check create 7d47",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1020,
        3180
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "3f7784c8-e434-41d3-88b2-bf82b47bf586",
      "name": "If58",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1220,
        3360
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "c34ede24-e818-48eb-a556-f09a76e62b5e",
      "name": "Check create 7d48",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1020,
        3360
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "a220fc21-7f72-41ed-8668-69bacf6d3265",
      "name": "If59",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1220,
        3540
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "5a979b9d-be21-4a3e-8c9b-2a297adcde75",
      "name": "Check create 7d49",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1020,
        3540
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks",
              "triggerAtDay": [
                1
              ],
              "triggerAtHour": 18
            }
          ]
        }
      },
      "id": "25ff8236-2aa5-4ffd-9940-0f7c0e7b5421",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -2200,
        2640
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks",
              "triggerAtDay": [
                1
              ],
              "triggerAtHour": 6
            }
          ]
        }
      },
      "id": "1a7c0ea2-ff00-4519-baf7-13768be39d60",
      "name": "Schedule Trigger1",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -2200,
        2220
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Get All Department": {
      "main": [
        [
          {
            "node": "GetMember",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Department1": {
      "main": [
        [
          {
            "node": "GetMember1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Department2": {
      "main": [
        [
          {
            "node": "GetMember2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "CompanyName",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GetMember": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GetMember1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "GetMember2": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "CompanyName": {
      "main": [
        [
          {
            "node": "Count Company",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company": {
      "main": [
        [
          {
            "node": "Stop and Error",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop and Error1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone": {
      "main": [
        [
          {
            "node": "Check create 7d",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Count Company": {
      "main": [
        [
          {
            "node": "Remove employee leave",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Remove employee leave1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Remove employee leave2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove employee leave": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove employee leave1": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone1": {
      "main": [
        [
          {
            "node": "Check create 7d46",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone2": {
      "main": [
        [
          {
            "node": "Check create 7d45",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone3": {
      "main": [
        [
          {
            "node": "Check create 7d44",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company1": {
      "main": [
        [
          {
            "node": "get Milestone3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone4": {
      "main": [
        [
          {
            "node": "Check create 7d43",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone5": {
      "main": [
        [
          {
            "node": "Check create 7d42",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone6": {
      "main": [
        [
          {
            "node": "Check create 7d41",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company2": {
      "main": [
        [
          {
            "node": "get Milestone6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone7": {
      "main": [
        [
          {
            "node": "Check create 7d28",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone8": {
      "main": [
        [
          {
            "node": "Check create 7d27",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone9": {
      "main": [
        [
          {
            "node": "Check create 7d26",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company3": {
      "main": [
        [
          {
            "node": "get Milestone9",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone10": {
      "main": [
        [
          {
            "node": "Check create 7d40",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone11": {
      "main": [
        [
          {
            "node": "Check create 7d39",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone12": {
      "main": [
        [
          {
            "node": "Check create 7d38",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company4": {
      "main": [
        [
          {
            "node": "get Milestone12",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone11",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone13": {
      "main": [
        [
          {
            "node": "Check create 7d37",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone14": {
      "main": [
        [
          {
            "node": "Check create 7d36",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone15": {
      "main": [
        [
          {
            "node": "Check create 7d35",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company5": {
      "main": [
        [
          {
            "node": "get Milestone15",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone14",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone16": {
      "main": [
        [
          {
            "node": "Check create 7d34",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone17": {
      "main": [
        [
          {
            "node": "Check create 7d33",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone18": {
      "main": [
        [
          {
            "node": "Check create 7d32",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company6": {
      "main": [
        [
          {
            "node": "get Milestone18",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone17",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone19": {
      "main": [
        [
          {
            "node": "Check create 7d31",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone20": {
      "main": [
        [
          {
            "node": "Check create 7d30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone21": {
      "main": [
        [
          {
            "node": "Check create 7d29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company7": {
      "main": [
        [
          {
            "node": "get Milestone21",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone20",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone22": {
      "main": [
        [
          {
            "node": "Check create 7d49",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone23": {
      "main": [
        [
          {
            "node": "Check create 7d48",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone24": {
      "main": [
        [
          {
            "node": "Check create 7d47",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove employee leave2": {
      "main": [
        [
          {
            "node": "Switch Company8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point16": {
      "main": [
        [
          {
            "node": "IF not found5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company8": {
      "main": [
        [
          {
            "node": "get Milestone24",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone23",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone22",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge8": {
      "main": [
        [
          {
            "node": "Cloodo Point16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found5": {
      "main": [
        [
          {
            "node": "Cloodo Point",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found": {
      "main": [
        [
          {
            "node": "Cloodo Point1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point17": {
      "main": [
        [
          {
            "node": "IF not found",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found6": {
      "main": [
        [
          {
            "node": "Cloodo Point2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point18": {
      "main": [
        [
          {
            "node": "IF not found6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found7": {
      "main": [
        [
          {
            "node": "Cloodo Point3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point19": {
      "main": [
        [
          {
            "node": "IF not found7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found8": {
      "main": [
        [
          {
            "node": "Cloodo Point4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point20": {
      "main": [
        [
          {
            "node": "IF not found8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found9": {
      "main": [
        [
          {
            "node": "Cloodo Point5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point21": {
      "main": [
        [
          {
            "node": "IF not found9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found10": {
      "main": [
        [
          {
            "node": "Cloodo Point6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point22": {
      "main": [
        [
          {
            "node": "IF not found10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found11": {
      "main": [
        [
          {
            "node": "Cloodo Point7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point23": {
      "main": [
        [
          {
            "node": "IF not found11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If25": {
      "main": [
        [
          {
            "node": "Stop and Error5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point1": {
      "main": [
        [
          {
            "node": "If25",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If26": {
      "main": [
        [
          {
            "node": "Stop and Error6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point2": {
      "main": [
        [
          {
            "node": "If26",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If27": {
      "main": [
        [
          {
            "node": "Stop and Error7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If28": {
      "main": [
        [
          {
            "node": "Stop and Error8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If29": {
      "main": [
        [
          {
            "node": "Stop and Error9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If30": {
      "main": [
        [
          {
            "node": "Stop and Error10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If31": {
      "main": [
        [
          {
            "node": "Stop and Error11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point7": {
      "main": [
        [
          {
            "node": "If31",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point6": {
      "main": [
        [
          {
            "node": "If30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point5": {
      "main": [
        [
          {
            "node": "If29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point4": {
      "main": [
        [
          {
            "node": "If28",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point3": {
      "main": [
        [
          {
            "node": "If27",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point8": {
      "main": [
        [
          {
            "node": "If32",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found1": {
      "main": [
        [
          {
            "node": "Cloodo Point8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point24": {
      "main": [
        [
          {
            "node": "IF not found1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If32": {
      "main": [
        [
          {
            "node": "Stop and Error12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If33": {
      "main": [
        [
          {
            "node": "Stop and Error13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point": {
      "main": [
        [
          {
            "node": "If33",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Switch Company",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch Company9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company9": {
      "main": [
        [
          {
            "node": "Stop and Error2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop and Error3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone25",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone25": {
      "main": [
        [
          {
            "node": "Check create 7d25",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d25": {
      "main": [
        [
          {
            "node": "If34",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point9": {
      "main": [
        [
          {
            "node": "If35",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found2": {
      "main": [
        [
          {
            "node": "Cloodo Point9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point25": {
      "main": [
        [
          {
            "node": "IF not found2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If35": {
      "main": [
        [
          {
            "node": "Stop and Error14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d": {
      "main": [
        [
          {
            "node": "If36",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d26": {
      "main": [
        [
          {
            "node": "If37",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d27": {
      "main": [
        [
          {
            "node": "If38",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If37": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If38": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Check create 7d28": {
      "main": [
        [
          {
            "node": "If39",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d29": {
      "main": [
        [
          {
            "node": "If40",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d30": {
      "main": [
        [
          {
            "node": "If41",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d31": {
      "main": [
        [
          {
            "node": "If42",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If40": {
      "main": [
        [
          {
            "node": "Merge7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If42": {
      "main": [
        [
          {
            "node": "Merge7",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Switch Company1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch Company2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch Company3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch Company4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch Company5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch Company6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch Company7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d32": {
      "main": [
        [
          {
            "node": "If43",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d33": {
      "main": [
        [
          {
            "node": "If44",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d34": {
      "main": [
        [
          {
            "node": "If45",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If43": {
      "main": [
        [
          {
            "node": "Merge6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If44": {
      "main": [
        [
          {
            "node": "Merge6",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Check create 7d35": {
      "main": [
        [
          {
            "node": "If46",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d36": {
      "main": [
        [
          {
            "node": "If47",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d37": {
      "main": [
        [
          {
            "node": "If48",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If46": {
      "main": [
        [
          {
            "node": "Merge5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If48": {
      "main": [
        [
          {
            "node": "Merge5",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Check create 7d38": {
      "main": [
        [
          {
            "node": "If49",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d39": {
      "main": [
        [
          {
            "node": "If50",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d40": {
      "main": [
        [
          {
            "node": "If51",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If49": {
      "main": [
        [
          {
            "node": "Merge4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If51": {
      "main": [
        [
          {
            "node": "Merge4",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Check create 7d41": {
      "main": [
        [
          {
            "node": "If52",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d42": {
      "main": [
        [
          {
            "node": "If53",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d43": {
      "main": [
        [
          {
            "node": "If54",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If52": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If53": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Check create 7d44": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d45": {
      "main": [
        [
          {
            "node": "If55",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d46": {
      "main": [
        [
          {
            "node": "If56",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If56": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If34": {
      "main": [
        [
          {
            "node": "Cloodo Point25",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If36": {
      "main": [
        [
          {
            "node": "Cloodo Point24",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Cloodo Point17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "Cloodo Point18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge3": {
      "main": [
        [
          {
            "node": "IF not found7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge4": {
      "main": [
        [
          {
            "node": "IF not found8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge5": {
      "main": [
        [
          {
            "node": "IF not found9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge6": {
      "main": [
        [
          {
            "node": "Cloodo Point22",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge7": {
      "main": [
        [
          {
            "node": "IF not found11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d47": {
      "main": [
        [
          {
            "node": "If57",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d48": {
      "main": [
        [
          {
            "node": "If58",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d49": {
      "main": [
        [
          {
            "node": "If59",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If57": {
      "main": [
        [
          {
            "node": "Merge8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If58": {
      "main": [
        [
          {
            "node": "Merge8",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If59": {
      "main": [
        [
          {
            "node": "Merge8",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "Get All Department",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get All Department1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get All Department2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get All Department",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get All Department1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get All Department2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "dd27413b-7516-4d6c-bfbf-2ccd3e12513c",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "3909475c03ca6926b6e6edc6a6f06c1feb448ce7ac700d69b17002085d9011f8"
  },
  "id": "6TiAbIvI5iWklxFP",
  "tags": []
}