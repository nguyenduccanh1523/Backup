{
  "name": "QCM 86.1 Minus Create Milestone",
  "nodes": [
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/departments",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "limit",
              "value": "25"
            }
          ]
        },
        "options": {}
      },
      "id": "9ba9190b-2bc2-4869-b757-f5965e1e56e2",
      "name": "Get All Department",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4780,
        2360
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/departments",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "limit",
              "value": "25"
            }
          ]
        },
        "options": {}
      },
      "id": "a29de73b-309f-445d-b5d9-317bdca86d8c",
      "name": "Get All Department1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4780,
        2560
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/departments",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "limit",
              "value": "25"
            }
          ]
        },
        "options": {}
      },
      "id": "f1ddebb4-3da8-44b0-8bb1-7962fc29d5a1",
      "name": "Get All Department2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4800,
        2780
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "numberInputs": 3
      },
      "id": "054e0311-c596-4697-a5cb-dfff18cf0eb2",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -4280,
        2560
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "e483f69f-d37b-4452-bbd9-8cfd21dde27d",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -4060,
        2560
      ]
    },
    {
      "parameters": {
        "jsCode": "const allDepartment = $input.all()[0]?.json?.data[2]\nconst member = allDepartment?.member\n\n\nreturn{\n  name: allDepartment?.name,\n  member: member\n}\n"
      },
      "id": "d23ebe6e-9678-4130-b191-9c741c91b7bd",
      "name": "GetMember",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4560,
        2360
      ]
    },
    {
      "parameters": {
        "jsCode": "const allDepartment = $input.all()[0]?.json?.data[2]\nconst member = allDepartment?.member\n\n\nreturn{\n  name: allDepartment?.name,\n  member: member\n}\n"
      },
      "id": "dabdb997-fd21-4655-b3f2-f26357ab5bd5",
      "name": "GetMember1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4560,
        2560
      ]
    },
    {
      "parameters": {
        "jsCode": "const allDepartment = $input.all()[0]?.json?.data[2]\nconst member = allDepartment?.member\n\n\nreturn{\n  name: allDepartment?.name,\n  member: member\n}\n"
      },
      "id": "99f577c3-0b1d-4644-b998-ccb5030eec1e",
      "name": "GetMember2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4560,
        2780
      ]
    },
    {
      "parameters": {
        "jsCode": "let listMembers = []\n\n// Lấy các thành viên của ba công ty\nconst MemberCms = $input.all()[0]?.json?.data[0]?.member;\nconst MemberPrintCart = $input.all()[0]?.json?.data[1]?.member;\nconst MemberCloodo = $input.all()[0]?.json?.data[2]?.member;\n\n// Thêm tên công ty vào các thành viên\nMemberCms.forEach(member => {\n  member.companyName = 'CmsMart';// Tên công ty cho MemberCms\n  listMembers.push(member)\n});\n\nMemberPrintCart.forEach(member => {\n  member.companyName = 'PrintCart';  // Tên công ty cho MemberPrintCart\n  listMembers.push(member)\n});\n\nMemberCloodo.forEach(member => {\n  member.companyName = 'Cloodo';  // Tên công ty cho MemberCloodo\n  listMembers.push(member)\n});\n\n// Đếm số lượng công ty cho mỗi người theo 'name'\nconst nameCountMap = {};\n\n// Duyệt qua danh sách các thành viên và đếm số lượng công ty theo tên\nlistMembers.forEach(member => {\n  const name = member.name;\n\n  // Nếu tên chưa có trong map, khởi tạo giá trị với 0\n  if (!nameCountMap[name]) {\n    nameCountMap[name] = new Set();  // Sử dụng Set để đảm bảo mỗi công ty chỉ được đếm 1 lần\n  }\n\n  // Thêm tên công ty vào Set để đếm duy nhất\n  nameCountMap[name].add(member.companyName);\n});\n\n// Thêm số lượng công ty vào từng thành viên\nlistMembers.forEach(member => {\n  const name = member.name;\n  member.countCompany = nameCountMap[name].size; // Số lượng công ty mà thành viên tham gia\n});\n\n// Trả về các thành viên đã được cập nhật\nreturn listMembers;"
      },
      "id": "6f5b0803-2163-422d-850b-32bbda8deb2a",
      "name": "CompanyName",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3880,
        2560
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "e7b09f3a-2538-4423-a229-b33e91575f65",
      "name": "Switch Company",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -2800,
        1300
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "62675662-fc7b-4bb7-b5b7-86f195ed8569",
      "name": "get Milestone",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2580,
        1360
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "emplooyee Cms"
      },
      "id": "9ad1fd19-2379-4b95-9588-baff06924835",
      "name": "Stop and Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -2720,
        980
      ]
    },
    {
      "parameters": {
        "errorMessage": "emplooyee Printcart"
      },
      "id": "892bbe19-b580-4565-a4bb-9d285adbec92",
      "name": "Stop and Error1",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -2600,
        1140
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.countCompany }}",
                    "rightValue": 1,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "1"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ecaeec34-6fa8-41da-aeb6-827e62de92b3",
                    "leftValue": "={{ $json.countCompany }}",
                    "rightValue": 2,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "2"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8d73594f-9a0b-4b50-b347-ac7eb50f0f13",
                    "leftValue": "={{ $json.countCompany }}",
                    "rightValue": 3,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "3"
            }
          ]
        },
        "options": {}
      },
      "id": "b2239c28-318e-4151-af48-a3351d99af25",
      "name": "Count Company",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -3640,
        2560
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6e41004a-24bd-4475-9837-4c1b5e68d983",
              "leftValue": "={{ $json.name }}",
              "rightValue": "Vu Van Tuyen",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "a781e98a-3884-48fc-8383-6c03e33c4fc4",
              "leftValue": "={{ $json.name }}",
              "rightValue": "Nguyen Thanh Tung",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "39d2967e-a852-42fc-86ad-8f6f69d6bd43",
      "name": "Remove employee leave",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3340,
        2080
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6e41004a-24bd-4475-9837-4c1b5e68d983",
              "leftValue": "={{ $json.name }}",
              "rightValue": "Nguyen Duc Phat",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "694cffea-4ec3-4c04-9cdb-748e37c423cb",
      "name": "Remove employee leave1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2220,
        2560
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "ef822d84-b7e9-444c-b9ee-d600e9f98286",
      "name": "get Milestone1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        460,
        800
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "2ff8cfda-b5c1-4b7d-8e1b-6dc6fe9550dd",
      "name": "get Milestone2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        460,
        620
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "e5d36598-2635-4ec5-9ae1-bd7445385048",
      "name": "get Milestone3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        460,
        460
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "1c722f1b-4592-48f4-b00d-367a5f787717",
      "name": "Switch Company1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        180,
        640
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "2893319e-7e33-479c-9d8f-55c666f4aa55",
      "name": "get Milestone4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        440,
        1340
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "2fd79084-208a-4df4-bf2d-7fb74e845416",
      "name": "get Milestone5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        440,
        1160
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "3a1e1b89-8d73-455f-93ff-1d197160d92c",
      "name": "get Milestone6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        440,
        1000
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "292f9e51-8afe-4f67-9ceb-c0091b67ab22",
      "name": "Switch Company2",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        140,
        1160
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "db8d615c-21c1-4aed-9c4f-9e0c1ab871f7",
      "name": "get Milestone7",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        440,
        1940
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b202433e-9eaa-4278-9c3d-0f3b3854cc2f",
      "name": "get Milestone8",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        440,
        1760
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "ff040910-447a-4928-a73e-cf727d9431cf",
      "name": "get Milestone9",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        440,
        1600
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "fbcf6dfc-3020-4288-8db8-85228354aa16",
      "name": "Switch Company3",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        140,
        1760
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "635fcb74-d8e7-425a-a6f5-25066cdcf69c",
      "name": "get Milestone10",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        460,
        2540
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "6adce426-8766-4a3f-927b-f6ac6c7ee7c3",
      "name": "get Milestone11",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        460,
        2360
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "95a23c3e-f4d2-4772-bc95-a44f62bfda25",
      "name": "get Milestone12",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        460,
        2200
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "e9f51217-eb05-4ccc-98ba-cd2f37b5dd1f",
      "name": "Switch Company4",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        160,
        2360
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "7639d8cf-1aab-45d8-bdbe-ed204e3cf691",
      "name": "get Milestone13",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        420,
        3160
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "be4be3d2-bf4b-4942-8d02-4fd8bb9e323d",
      "name": "get Milestone14",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        420,
        2980
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "9dd583de-ba86-490c-a53d-f8524c4f05bb",
      "name": "get Milestone15",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        420,
        2820
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "1761c7b1-2c8d-4996-8e58-fd2d94847110",
      "name": "Switch Company5",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        120,
        2980
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "c7e53519-3791-4093-81a1-a593744057b3",
      "name": "get Milestone16",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        460,
        3740
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "2b16a395-7023-4bb7-8c66-75b9048e68b3",
      "name": "get Milestone17",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        460,
        3560
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "753852ea-c656-4cd6-94b9-aad310f7d8cf",
      "name": "get Milestone18",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        460,
        3400
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "1a4bd8be-ae04-4a3d-8602-ba25533df94e",
      "name": "Switch Company6",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        160,
        3560
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "68074642-bc6c-438c-bdac-189a1ddcad34",
      "name": "get Milestone19",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        520,
        4320
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "c2d8b39b-a148-440a-a88f-7c1bee577d3e",
      "name": "get Milestone20",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        520,
        4140
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "9087221b-7dd8-4a45-89ee-b92a0117642b",
      "name": "get Milestone21",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        520,
        3980
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "8d466350-e502-480c-ad99-2836999ed696",
      "name": "Switch Company7",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        220,
        4140
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "836b2b7c-2516-46d1-9ee2-6deb00429bb0",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1360,
        620
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "a7a4a181-52d6-4d99-a448-cb38fa90fca9",
      "name": "Merge2",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1360,
        1080
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "cccdc261-b85b-4f39-811a-8b66675715fc",
      "name": "Merge3",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1380,
        1660
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "583a7eea-8872-4f7b-b9bf-93f6f60d67f1",
      "name": "Merge4",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1380,
        2360
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "db9401c3-e381-4ee7-9c4c-5d5356528e30",
      "name": "Merge5",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1400,
        2900
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "1353e000-91e2-444b-85c6-d67c949fe370",
      "name": "Merge6",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1400,
        3480
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "5f36f9d7-ccce-47c5-88ad-f525867fab69",
      "name": "Merge7",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1400,
        4120
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6e41004a-24bd-4475-9837-4c1b5e68d983",
              "leftValue": "={{ $json.name }}",
              "rightValue": "Vu Duy The",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "a523d6c9-aa41-4a91-9dc5-ea189046be29",
      "name": "Remove employee leave2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3180,
        3460
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "ec79e706-ca24-40bd-a979-0f4dfffde6c3",
      "name": "get Milestone22",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2440,
        3660
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "3bd543a1-5f9e-4814-a467-55c85f87e3ec",
      "name": "get Milestone23",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2440,
        3480
      ],
      "credentials": {
        "cloodoApi": {
          "id": "2JLk7qrN3C3j9tZ9",
          "name": "PrintCart Cloodo account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "f0adcec9-6bc9-4346-bf7f-bed72d33b446",
      "name": "get Milestone24",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2440,
        3320
      ],
      "credentials": {
        "cloodoApi": {
          "id": "nP7U7wKTbfdSeafq",
          "name": "Cmsmart Worksuite account"
        }
      }
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('Merge8').item.json.data[0].agent.id }}",
        "points": 3,
        "note": "=QCM 86: {{ $('Merge8').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "276953ae-0875-4249-a4af-4293243c7421",
      "name": "Cloodo Point",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -920,
        3480
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "170bb441-d201-49b3-9d81-3c0c21e573f4",
      "name": "IF not found5",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1140,
        3500
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 86: {{ $('Merge8').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "65e8b2e8-bd89-4bf8-8f63-c3b54fc7c223",
      "name": "Cloodo Point16",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -1340,
        3500
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "24aba24e-9419-473d-adc2-6d9b0f52b19a",
      "name": "Switch Company8",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -2740,
        3460
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "numberInputs": 3
      },
      "id": "855d45e1-fef7-451f-8e14-13dd2b7e8186",
      "name": "Merge8",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -1600,
        3480
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('Merge1').item.json.data[0].agent.id }}",
        "points": 3,
        "note": "=QCM 86: {{ $('Merge1').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "8f6c7b22-6513-467d-9c26-7c027a956b2a",
      "name": "Cloodo Point1",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        2120,
        600
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "a8da6316-7299-464b-bf4e-b1bc63d0215c",
      "name": "IF not found",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1880,
        620
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 86: {{ $('Merge1').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "925ffc8f-ba08-48c5-af20-ede797f8e744",
      "name": "Cloodo Point17",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        1680,
        620
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('Merge2').item.json.data[0].agent.id }}",
        "points": 3,
        "note": "=QCM 86: {{ $('Merge2').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "719f8ef2-cef7-4a64-867a-f8e3c70fc73f",
      "name": "Cloodo Point2",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        2160,
        1040
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "RhVnP1DUuhhS91ry",
          "name": "PrintCart Point"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "8c11ad02-8d1e-4f26-83df-e496f14c30ac",
      "name": "IF not found6",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1920,
        1060
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 86: {{ $('Merge2').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "465e2501-af78-431b-aa98-f1d767e6454a",
      "name": "Cloodo Point18",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        1720,
        1060
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "RhVnP1DUuhhS91ry",
          "name": "PrintCart Point"
        }
      }
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('Merge3').item.json.data[0].agent.id }}",
        "points": 3,
        "note": "=QCM 86: {{ $('Merge3').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "88e38248-4d27-4f26-b9f8-a054c1b6cdba",
      "name": "Cloodo Point3",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        2240,
        1640
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "cdef4816-9a7b-4a8c-844c-138f7693bbff",
      "name": "IF not found7",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1960,
        1640
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 86: {{ $('Merge3').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "1c753531-afea-4a77-8236-79943bf2b773",
      "name": "Cloodo Point19",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        1760,
        1640
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('Merge4').item.json.data[0].agent.id }}",
        "points": 3,
        "note": "=QCM 86: {{ $('Merge4').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "eb67c6be-8661-4522-9e58-7715577e3075",
      "name": "Cloodo Point4",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        2080,
        2340
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "324200fe-e3a5-4e4b-9297-469e1c5ba12e",
      "name": "IF not found8",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1840,
        2360
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 86: {{ $('Merge4').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "26d190a4-32ac-423e-9158-f7383f9524d3",
      "name": "Cloodo Point20",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        1640,
        2360
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('Merge5').item.json.data[0].agent.id }}",
        "points": 3,
        "note": "=QCM 86: {{ $('Merge5').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "f801c84f-4471-4e82-9f2e-6e746fe860e5",
      "name": "Cloodo Point5",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        2140,
        2860
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "c960586f-e57f-4f00-aea5-ab17e0348073",
      "name": "IF not found9",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1900,
        2880
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 86: {{ $('Merge5').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "26f5a6f3-0fe7-4d3b-9fd0-d118d451fcb7",
      "name": "Cloodo Point21",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        1700,
        2880
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('Merge6').item.json.data[0].agent.id }}",
        "points": 3,
        "note": "=QCM 86: {{ $('Merge6').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "23672f51-0fb3-43b7-8e49-dd2c9a65855c",
      "name": "Cloodo Point6",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        2180,
        3460
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "cfeafbdd-236b-4fdb-88c4-c52ef42fcba2",
      "name": "IF not found10",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1940,
        3480
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 86: {{ $('Merge6').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "71292861-c5c5-4739-8593-79672d6e257e",
      "name": "Cloodo Point22",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        1740,
        3480
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('Merge7').item.json.data[0].agent.id }}",
        "points": 3,
        "note": "=QCM 86: {{ $('Merge7').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "2a494b6d-bb0a-4ff1-824e-732a12fe179d",
      "name": "Cloodo Point7",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        2200,
        4060
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "214e3410-e8a6-4ff2-ace9-fa2976bd1cd8",
      "name": "IF not found11",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1960,
        4080
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 86: {{ $('Merge7').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "05363c04-eeb8-434e-8e66-053ddf46ad8c",
      "name": "Cloodo Point23",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        1760,
        4080
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "8805af63-7213-4248-81c9-9026bd3d8e59",
      "name": "Stop and Error5",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        2800,
        580
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "393d0c64-9d51-44d7-90b3-5f0c17c197ab",
      "name": "If25",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2500,
        600
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "8b326116-9a63-4573-a435-089677b5d833",
      "name": "If26",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2500,
        1060
      ]
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "49edbcf4-1bc8-4670-aa5b-affee7bdfa4b",
      "name": "Stop and Error6",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        2800,
        1040
      ]
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "45240531-1267-4684-9f4c-19727faa1d0e",
      "name": "Stop and Error7",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        2780,
        1620
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "fc74ae28-b45f-47d4-b3e1-e5af0172302c",
      "name": "If27",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2500,
        1640
      ]
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "a657c72e-8cbe-48ec-9820-5085698dd934",
      "name": "Stop and Error8",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        2740,
        2320
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6fd7d272-524a-4e64-80e1-d41acc5f0a51",
      "name": "If28",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2440,
        2340
      ]
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "f04d12e8-f6c5-4362-a051-158e82f17b2d",
      "name": "Stop and Error9",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        2760,
        2860
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a979458e-9d48-4aab-8478-c1aa324a9d0d",
      "name": "If29",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2460,
        2880
      ]
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "dea53555-46bc-403a-9643-019776c5c6c7",
      "name": "Stop and Error10",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        2760,
        3440
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "44a8c90d-3a7e-499b-a5b3-e9f32b05b53d",
      "name": "If30",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2460,
        3460
      ]
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "5d90eb6b-2aaa-4ed8-945b-4629d528b1d4",
      "name": "Stop and Error11",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        2800,
        4040
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c5761e1d-5c74-487f-994a-8bf2fe99ce14",
      "name": "If31",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2500,
        4060
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If1').item.json.data[0].agent.id }}",
        "points": 3,
        "note": "=QCM 86: {{ $('If1').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "e2c7846c-e6c2-4557-a8c3-c49bea94d698",
      "name": "Cloodo Point8",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -1500,
        1320
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "ed71b43c-577c-4db8-9e79-6635faee667f",
      "name": "IF not found1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1740,
        1340
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 86: {{ $('If1').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "cd601c74-b2ef-4314-a28c-1d1d5dea813c",
      "name": "Cloodo Point24",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -1940,
        1340
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "26e6c14f-2371-46fe-8faf-0f2865fb663b",
      "name": "Stop and Error12",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -1060,
        1300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d6df5ec1-2243-4fbc-b394-8b3a6ca42200",
      "name": "If32",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1340,
        1320
      ]
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "cc875086-bc2a-4418-9422-7b8526756215",
      "name": "Stop and Error13",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -440,
        3460
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3f514d4a-5f2f-4f6a-b69f-f6aaea9135a8",
      "name": "If33",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -740,
        3480
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Vu Van Tuyen",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Vu Van Tuyen"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "adbce1c4-d26c-475c-94fe-bc372e7c2f4d",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Nguyen Thanh Tung",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Nguyen Thanh Tung"
            }
          ]
        },
        "options": {}
      },
      "id": "23fd72d3-e3e7-48de-a7ea-1b3678b840fb",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -3020,
        1640
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "CmsMart",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CmsMart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d349bbc-6f8c-4c10-9a93-162d623cd47c",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "PrintCart",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PrintCart"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6187ad4a-68a3-4231-852f-1c03921eacb0",
                    "leftValue": "={{ $json.companyName }}",
                    "rightValue": "Cloodo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cloodo"
            }
          ]
        },
        "options": {}
      },
      "id": "b157d553-b679-4e92-ac07-72e42955a485",
      "name": "Switch Company9",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -2820,
        1920
      ]
    },
    {
      "parameters": {
        "url": "https://erp-amz.cloodo.com/v4/milestones",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "cloodoApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "page",
              "value": "1"
            },
            {
              "name": "agent",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "f6695272-1ebb-4897-9917-5b0134fcdeb2",
      "name": "get Milestone25",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2600,
        1980
      ],
      "credentials": {
        "cloodoApi": {
          "id": "43DhmNb5GSwDy5id",
          "name": "Cloodo Worksuite Account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "6582c20e-bfbd-4f9f-aa2a-a013754a5cb5",
      "name": "If34",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2220,
        1980
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "36733dc3-6135-4226-9fb9-53a3f14e5d0e",
      "name": "Check create 7d25",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2420,
        1980
      ]
    },
    {
      "parameters": {
        "errorMessage": "emplooyee Cms"
      },
      "id": "7895e09f-6f8d-4b8d-92f8-b96bb805fed3",
      "name": "Stop and Error2",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -2740,
        1600
      ]
    },
    {
      "parameters": {
        "errorMessage": "emplooyee Printcart"
      },
      "id": "10acf818-6750-41f6-974c-4ed9f6b8c3b3",
      "name": "Stop and Error3",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -2620,
        1760
      ]
    },
    {
      "parameters": {
        "operation": "minus",
        "user_id": "={{ $('If34').item.json.data[0].agent.id }}",
        "points": 3,
        "note": "=QCM 86: {{ $('If34').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}"
      },
      "id": "8b0243eb-a95e-4b69-bf1b-ac1b3f8c0579",
      "name": "Cloodo Point9",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -1520,
        1940
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.total_records }}",
              "operation": "equal"
            }
          ]
        }
      },
      "id": "5a4c46cf-2e32-4707-8627-a77a2cff5654",
      "name": "IF not found2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1760,
        1960
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "keyword": "=QCM 86: {{ $('If34').item.json.data[0].agent.name }} -3 Point No Create Milestone on week From: {{$now.minus(7, 'days').format('yyyy-MM-dd')}} To: {{$now.format('yyyy-MM-dd')}}",
        "max_limit_record": 50
      },
      "id": "551fd839-9dd5-4199-a53e-e2ae091f78d8",
      "name": "Cloodo Point25",
      "type": "@cloodo/n8n-nodes-cloodo-point.cloodoPoint",
      "typeVersion": 1,
      "position": [
        -1960,
        1960
      ],
      "credentials": {
        "cloodoApi2": {
          "id": "82nsSr6jMyGAQbyu",
          "name": "Cmsmart Point API Key"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "Token is expired or incorrect"
      },
      "id": "2dd53898-9868-423d-b6a7-ef269e9b7efb",
      "name": "Stop and Error14",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -1060,
        1920
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74c084ee-9110-4ac7-a165-223df2075781",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Token is expired or incorrect",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "13164027-3f61-4c77-a643-ac1f951b9dae",
      "name": "If35",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1360,
        1940
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "df3e0375-155c-41b0-b016-d4877763255e",
      "name": "If36",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2160,
        1360
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "dc868c2e-c937-4511-842b-5e3d9cef86d0",
      "name": "Check create 7d",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2360,
        1360
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "c21dc837-c1ee-427d-ae14-9b7bdde51733",
      "name": "If37",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        900,
        1600
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "19c9eb3e-8a62-4c5d-a6d4-1d512b59c82e",
      "name": "Check create 7d26",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        700,
        1600
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "31d76b10-202b-4c55-a9b9-2bdbc4b553a7",
      "name": "If38",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        900,
        1780
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "dc13e253-4d9b-47c9-8493-5d665cf02315",
      "name": "Check create 7d27",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        700,
        1780
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "1a4f5eba-e079-419f-a578-14601f8f2e8b",
      "name": "If39",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        900,
        1960
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "1698ab43-1249-450d-aa4b-9f97beaea4d3",
      "name": "Check create 7d28",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        700,
        1960
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "0b8ccdb2-2706-4f9a-815e-d71064e15132",
      "name": "If40",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        980,
        3980
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "88c89bed-0594-4a20-8aca-d93e7d16a796",
      "name": "Check create 7d29",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        780,
        3980
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "2d726b94-2809-472f-9de2-10902c5ff5bf",
      "name": "If41",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        980,
        4160
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "a945623c-3408-42f4-b3f7-1591df672b52",
      "name": "Check create 7d30",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        780,
        4160
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "7d32a632-4fba-435a-adde-9b83dc8ad7ce",
      "name": "If42",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        980,
        4340
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "88aad19e-52a2-4169-b7f6-254b0893d5f5",
      "name": "Check create 7d31",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        780,
        4340
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Vu Van Minh",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Vu Van Minh"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "dbe7be1f-5b60-42df-bca3-3dd1ab846db7",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Vo Tuan Vu",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Vo Tuan Vu"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "3a1ebf8a-3f5c-44e3-b8eb-22452c6d8a32",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Nguyen Ngoc Huy",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Nguyen Ngoc Huy"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "602b04f8-5e81-4b3d-8537-8435fd5ca9f0",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Pham Ngoc Huy",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Pham Ngoc Huy"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8f2d3c75-6e15-44dd-955f-2462cea6fcf8",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Do Hoang Nam",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Do Hoang Nam"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5ddab4fb-4552-442c-b985-ac486038e5f0",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Hoang Anh Dung",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Hoang Anh Dung"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e4ebcd21-3054-433a-a04e-532ba93b1e19",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "Nguyen Duc Canh",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Nguyen Duc Canh"
            }
          ]
        },
        "options": {}
      },
      "id": "16d1240f-4020-4d05-8fb9-73f549ae3f1a",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -920,
        2520
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "7e525e31-54fa-42ab-93d1-47c6dca540e1",
      "name": "If43",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        940,
        3380
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "9bffc1f1-083d-4d7f-be2c-ce97e3f691e1",
      "name": "Check create 7d32",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        680,
        3380
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "8074562e-6c23-4d07-b294-819c3fb2e649",
      "name": "If44",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        920,
        3560
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "2ec30f2a-8414-4768-aedd-442408665de4",
      "name": "Check create 7d33",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        720,
        3560
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "c221583a-068b-49cb-bd43-ec851a3e3e42",
      "name": "If45",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        920,
        3740
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "3f04baf4-78f2-404e-86f6-502f02567adb",
      "name": "Check create 7d34",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        720,
        3740
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "8d110ae8-e22a-422e-b7d3-264020050bfd",
      "name": "If46",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        920,
        2820
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "bf687dd0-df59-4225-ada7-9bfaa7cd640f",
      "name": "Check create 7d35",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        700,
        2820
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "37e932e3-d7ed-4400-b287-6d1b1dedd54f",
      "name": "If47",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        900,
        3000
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "eb3c0c6d-5f29-44a4-99ab-f96a0e966ca8",
      "name": "Check create 7d36",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        700,
        3000
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "66d77ed6-e873-4a65-8a10-835435253876",
      "name": "If48",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        900,
        3180
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "841ba7f2-39f3-4414-b7f3-6004b208dc68",
      "name": "Check create 7d37",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        700,
        3180
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "3091879f-51e4-4e1e-a2a1-416d2ee7c154",
      "name": "If49",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        920,
        2200
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "451985d5-a1d5-41cb-8656-ac54039fde76",
      "name": "Check create 7d38",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        720,
        2200
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "6ff45df0-9e27-4e47-9387-0753c1b8fdb9",
      "name": "If50",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        920,
        2360
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "85800658-8ac2-4e77-aabd-f1acb492c249",
      "name": "Check create 7d39",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        700,
        2360
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "d161f136-2ec4-4f2b-ab14-03357d94b0f2",
      "name": "If51",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        940,
        2540
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "0cb605a8-1082-4351-b2ba-43103b82e186",
      "name": "Check create 7d40",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        720,
        2540
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "8877695c-b19f-493b-9358-9d0ed87c26ed",
      "name": "If52",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        940,
        1000
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "f4ff87de-9ff7-493e-a6f3-dd289f72f441",
      "name": "Check create 7d41",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        720,
        1000
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "93ad226d-e53e-4d30-aae4-6d73913a4227",
      "name": "If53",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        920,
        1180
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "a4eab9a8-cf3d-4287-8c67-e1d5bc7bd808",
      "name": "Check create 7d42",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        720,
        1180
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "e61fc593-e746-49c7-9c03-5a4c3c7cdbac",
      "name": "If54",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        920,
        1360
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "29df1fcb-9614-48ec-8fb4-fa61246d0ad0",
      "name": "Check create 7d43",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        720,
        1360
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "ef7820fb-1fba-4a00-a494-db8e8973f000",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        980,
        460
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "266225ab-1c03-4d57-82b1-21e60d0f1780",
      "name": "Check create 7d44",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        760,
        460
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "e64dd261-194d-4667-b6e0-9b4bc15deb6b",
      "name": "If55",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        960,
        640
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "6b953b59-18c6-48a0-810f-9665312cd4ef",
      "name": "Check create 7d45",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        760,
        640
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "488fc76d-7158-4877-85fd-f61655ae6299",
      "name": "If56",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        960,
        820
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "fd108090-d664-41bc-a495-91156312d266",
      "name": "Check create 7d46",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        760,
        820
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "3c2e0c5a-3510-4a54-80b9-e32e9c1c5d45",
      "name": "If57",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1940,
        3320
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "41ce0d4f-efac-41c6-b95e-24b81a3d8595",
      "name": "Check create 7d47",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2160,
        3320
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "82b9265c-e093-4a25-8482-33f80cdab1e1",
      "name": "If58",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1960,
        3500
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "8121736f-0436-4c1c-9c56-ea02f51551c2",
      "name": "Check create 7d48",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2160,
        3500
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cf4064cd-bc8b-4efb-a3d3-052edd4e4a15",
              "leftValue": "={{ $json.is5or6Days }}",
              "rightValue": "f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "30751e3c-fea5-4fbc-b8cb-826a56bb005d",
              "leftValue": "={{ $json.isStartDate7DaysAgo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "eb379f7d-462c-47d9-8221-4b69662599e3",
      "name": "If59",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1960,
        3680
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Define an empty array to hold the results\nlet result = [];\n\n// Loop through each item and check the difference between 'due_date' and 'start_date'\n$input.all().forEach(item => {\n  const startDate = new Date($input.all()[0]?.json?.data[0]?.start_date); // Parse 'start_date' to a Date object\n  const dueDate = new Date($input.all()[0]?.json?.data[0]?.due_date); // Parse 'due_date' to a Date object\n  \n  // Calculate the difference in days between currentDate and start_date\n  const diffFromTodayToStart = (currentDate - startDate) / (1000 * 3600 * 24); // Difference in days\n  \n  // Calculate the difference in days between due_date and start_date\n  const diffFromStartToDue = (dueDate - startDate) / (1000 * 3600 * 24); // Difference in days\n\n\n  // Check if start_date is exactly 7 days ago\n  const isStartDate7DaysAgo = diffFromTodayToStart >= 6 && diffFromTodayToStart <= 8;\n\n  // Check if due_date - start_date is 5 or 6 days\n  const isDueDate5or6Days = diffFromStartToDue <= 7;\n\n  console.log('arg ', isDueDate5or6Days, isStartDate7DaysAgo)\n  // Create the output object\n  const outputObject = {\n    ...item.json, // Include the original item data\n    isStartDate7DaysAgo: isStartDate7DaysAgo ? false : true, // true if start_date is exactly 7 days ago\n    is5or6Days: isDueDate5or6Days ? false : true, // false if difference is 5 or 6 days, else true\n  };\n\n  result.push(outputObject); // Push the result object into the array\n});\n\n// Return the array of objects\nreturn result;\n"
      },
      "id": "28338b69-7c82-4c2e-bd2c-88884865d100",
      "name": "Check create 7d49",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2160,
        3680
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks",
              "triggerAtDay": [
                1
              ],
              "triggerAtHour": 11
            }
          ]
        }
      },
      "id": "42493761-404e-46ff-9d92-094f8a80a0aa",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -5380,
        2780
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks",
              "triggerAtDay": [
                1
              ],
              "triggerAtHour": 6
            }
          ]
        }
      },
      "id": "5b2b2de5-f563-468c-9f93-1cff25d6528d",
      "name": "Schedule Trigger1",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -5380,
        2360
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Get All Department": {
      "main": [
        [
          {
            "node": "GetMember",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Department1": {
      "main": [
        [
          {
            "node": "GetMember1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Department2": {
      "main": [
        [
          {
            "node": "GetMember2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "CompanyName",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GetMember": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GetMember1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "GetMember2": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "CompanyName": {
      "main": [
        [
          {
            "node": "Count Company",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company": {
      "main": [
        [
          {
            "node": "Stop and Error",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop and Error1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone": {
      "main": [
        [
          {
            "node": "Check create 7d",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Count Company": {
      "main": [
        [
          {
            "node": "Remove employee leave",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Remove employee leave1",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Remove employee leave": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove employee leave1": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone1": {
      "main": [
        [
          {
            "node": "Check create 7d46",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone2": {
      "main": [
        [
          {
            "node": "Check create 7d45",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone3": {
      "main": [
        [
          {
            "node": "Check create 7d44",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company1": {
      "main": [
        [
          {
            "node": "get Milestone3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone4": {
      "main": [
        [
          {
            "node": "Check create 7d43",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone5": {
      "main": [
        [
          {
            "node": "Check create 7d42",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone6": {
      "main": [
        [
          {
            "node": "Check create 7d41",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company2": {
      "main": [
        [
          {
            "node": "get Milestone6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone7": {
      "main": [
        [
          {
            "node": "Check create 7d28",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone8": {
      "main": [
        [
          {
            "node": "Check create 7d27",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone9": {
      "main": [
        [
          {
            "node": "Check create 7d26",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company3": {
      "main": [
        [
          {
            "node": "get Milestone9",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone10": {
      "main": [
        [
          {
            "node": "Check create 7d40",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone11": {
      "main": [
        [
          {
            "node": "Check create 7d39",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone12": {
      "main": [
        [
          {
            "node": "Check create 7d38",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company4": {
      "main": [
        [
          {
            "node": "get Milestone12",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone11",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone13": {
      "main": [
        [
          {
            "node": "Check create 7d37",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone14": {
      "main": [
        [
          {
            "node": "Check create 7d36",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone15": {
      "main": [
        [
          {
            "node": "Check create 7d35",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company5": {
      "main": [
        [
          {
            "node": "get Milestone15",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone14",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone16": {
      "main": [
        [
          {
            "node": "Check create 7d34",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone17": {
      "main": [
        [
          {
            "node": "Check create 7d33",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone18": {
      "main": [
        [
          {
            "node": "Check create 7d32",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company6": {
      "main": [
        [
          {
            "node": "get Milestone18",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone17",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone19": {
      "main": [
        [
          {
            "node": "Check create 7d31",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone20": {
      "main": [
        [
          {
            "node": "Check create 7d30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone21": {
      "main": [
        [
          {
            "node": "Check create 7d29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company7": {
      "main": [
        [
          {
            "node": "get Milestone21",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone20",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone22": {
      "main": [
        [
          {
            "node": "Check create 7d49",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone23": {
      "main": [
        [
          {
            "node": "Check create 7d48",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone24": {
      "main": [
        [
          {
            "node": "Check create 7d47",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove employee leave2": {
      "main": [
        [
          {
            "node": "Switch Company8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point16": {
      "main": [
        [
          {
            "node": "IF not found5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company8": {
      "main": [
        [
          {
            "node": "get Milestone24",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone23",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone22",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge8": {
      "main": [
        [
          {
            "node": "Cloodo Point16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found5": {
      "main": [
        [
          {
            "node": "Cloodo Point",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found": {
      "main": [
        [
          {
            "node": "Cloodo Point1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point17": {
      "main": [
        [
          {
            "node": "IF not found",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found6": {
      "main": [
        [
          {
            "node": "Cloodo Point2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point18": {
      "main": [
        [
          {
            "node": "IF not found6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found7": {
      "main": [
        [
          {
            "node": "Cloodo Point3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point19": {
      "main": [
        [
          {
            "node": "IF not found7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found8": {
      "main": [
        [
          {
            "node": "Cloodo Point4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point20": {
      "main": [
        [
          {
            "node": "IF not found8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found9": {
      "main": [
        [
          {
            "node": "Cloodo Point5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point21": {
      "main": [
        [
          {
            "node": "IF not found9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found10": {
      "main": [
        [
          {
            "node": "Cloodo Point6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point22": {
      "main": [
        [
          {
            "node": "IF not found10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found11": {
      "main": [
        [
          {
            "node": "Cloodo Point7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point23": {
      "main": [
        [
          {
            "node": "IF not found11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If25": {
      "main": [
        [
          {
            "node": "Stop and Error5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point1": {
      "main": [
        [
          {
            "node": "If25",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If26": {
      "main": [
        [
          {
            "node": "Stop and Error6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point2": {
      "main": [
        [
          {
            "node": "If26",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If27": {
      "main": [
        [
          {
            "node": "Stop and Error7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If28": {
      "main": [
        [
          {
            "node": "Stop and Error8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If29": {
      "main": [
        [
          {
            "node": "Stop and Error9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If30": {
      "main": [
        [
          {
            "node": "Stop and Error10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If31": {
      "main": [
        [
          {
            "node": "Stop and Error11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point7": {
      "main": [
        [
          {
            "node": "If31",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point6": {
      "main": [
        [
          {
            "node": "If30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point5": {
      "main": [
        [
          {
            "node": "If29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point4": {
      "main": [
        [
          {
            "node": "If28",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point3": {
      "main": [
        [
          {
            "node": "If27",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point8": {
      "main": [
        [
          {
            "node": "If32",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found1": {
      "main": [
        [
          {
            "node": "Cloodo Point8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point24": {
      "main": [
        [
          {
            "node": "IF not found1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If32": {
      "main": [
        [
          {
            "node": "Stop and Error12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If33": {
      "main": [
        [
          {
            "node": "Stop and Error13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point": {
      "main": [
        [
          {
            "node": "If33",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Switch Company",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch Company9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Company9": {
      "main": [
        [
          {
            "node": "Stop and Error2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop and Error3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get Milestone25",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get Milestone25": {
      "main": [
        [
          {
            "node": "Check create 7d25",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d25": {
      "main": [
        [
          {
            "node": "If34",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point9": {
      "main": [
        [
          {
            "node": "If35",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF not found2": {
      "main": [
        [
          {
            "node": "Cloodo Point9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloodo Point25": {
      "main": [
        [
          {
            "node": "IF not found2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If35": {
      "main": [
        [
          {
            "node": "Stop and Error14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d": {
      "main": [
        [
          {
            "node": "If36",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d26": {
      "main": [
        [
          {
            "node": "If37",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d27": {
      "main": [
        [
          {
            "node": "If38",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If37": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If38": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Check create 7d28": {
      "main": [
        [
          {
            "node": "If39",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d29": {
      "main": [
        [
          {
            "node": "If40",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d30": {
      "main": [
        [
          {
            "node": "If41",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d31": {
      "main": [
        [
          {
            "node": "If42",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If40": {
      "main": [
        [
          {
            "node": "Merge7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If42": {
      "main": [
        [
          {
            "node": "Merge7",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Switch Company1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch Company2",
            "type": "main",
            "index": 0
          }
        ],
        [],
        [
          {
            "node": "Switch Company4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch Company5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch Company6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch Company7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d32": {
      "main": [
        [
          {
            "node": "If43",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d33": {
      "main": [
        [
          {
            "node": "If44",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d34": {
      "main": [
        [
          {
            "node": "If45",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If43": {
      "main": [
        [
          {
            "node": "Merge6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If44": {
      "main": [
        [
          {
            "node": "Merge6",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Check create 7d35": {
      "main": [
        [
          {
            "node": "If46",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d36": {
      "main": [
        [
          {
            "node": "If47",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d37": {
      "main": [
        [
          {
            "node": "If48",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If46": {
      "main": [
        [
          {
            "node": "Merge5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If48": {
      "main": [
        [
          {
            "node": "Merge5",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Check create 7d38": {
      "main": [
        [
          {
            "node": "If49",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d39": {
      "main": [
        [
          {
            "node": "If50",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d40": {
      "main": [
        [
          {
            "node": "If51",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If49": {
      "main": [
        [
          {
            "node": "Merge4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If51": {
      "main": [
        [
          {
            "node": "Merge4",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Check create 7d41": {
      "main": [
        [
          {
            "node": "If52",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d42": {
      "main": [
        [
          {
            "node": "If53",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d43": {
      "main": [
        [
          {
            "node": "If54",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If52": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If53": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Check create 7d44": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d45": {
      "main": [
        [
          {
            "node": "If55",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d46": {
      "main": [
        [
          {
            "node": "If56",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If56": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If34": {
      "main": [
        [
          {
            "node": "Cloodo Point25",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If36": {
      "main": [
        [
          {
            "node": "Cloodo Point24",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Cloodo Point17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "Cloodo Point18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge3": {
      "main": [
        [
          {
            "node": "Cloodo Point19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge4": {
      "main": [
        [
          {
            "node": "Cloodo Point20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge5": {
      "main": [
        [
          {
            "node": "Cloodo Point21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge6": {
      "main": [
        [
          {
            "node": "Cloodo Point22",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge7": {
      "main": [
        [
          {
            "node": "Cloodo Point23",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d47": {
      "main": [
        [
          {
            "node": "If57",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d48": {
      "main": [
        [
          {
            "node": "If58",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check create 7d49": {
      "main": [
        [
          {
            "node": "If59",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If57": {
      "main": [
        [
          {
            "node": "Merge8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If58": {
      "main": [
        [
          {
            "node": "Merge8",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If59": {
      "main": [
        [
          {
            "node": "Merge8",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "Get All Department",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get All Department1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get All Department2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get All Department",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get All Department1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get All Department2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "25ddbe4f-a4af-49c3-b717-d85d3cac5582",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "3909475c03ca6926b6e6edc6a6f06c1feb448ce7ac700d69b17002085d9011f8"
  },
  "id": "LsftMmNDtSNjhXRL",
  "tags": []
}